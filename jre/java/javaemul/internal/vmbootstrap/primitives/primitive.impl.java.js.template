goog.module('vmbootstrap.primitives.$%PRIMITIVE_NAME%$impl');

let $Util = goog.require('nativebootstrap.Util$impl');
%long_ONLY% let Long = goog.require('nativebootstrap.Long$impl');


/**
 * Placeholder class definition for the primitive class %PRIMITIVE_NAME%.
 *
 * Non-instantiable.
 */
class $%PRIMITIVE_NAME% {
  /**
   * Defines instance fields.
   */
  constructor() {}

  /**
   * Returns whether the provided instance is an instance of this class.
   * Note that this always return true, because it is only used for ArrayStoreException
   * purposes which never happens for primitive arrays as they are compile time checked.
   *
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return true; }

  /**
   * Returns whether the provided class is or extends this class.
   *
   * @param {Function} classConstructor
   * @return {boolean}
   * @private
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor === $%PRIMITIVE_NAME%;
  }
};


/**
 * @public {%PRIMITIVE_JS_TYPE%}
 */
$%PRIMITIVE_NAME%.$initialArrayValue = %PRIMITIVE_INIT_VALUE%;


%int_ONLY% /**
%int_ONLY%  * @public {number}
%int_ONLY%  */
%int_ONLY% $int.MAX_VALUE = 0x7fffffff;
%int_ONLY%
%int_ONLY% /**
%int_ONLY% * @public {number}
%int_ONLY% */
%int_ONLY% $int.MIN_VALUE = -0x80000000;


$Util.$setClassMetadataForPrimitive($%PRIMITIVE_NAME%, '%PRIMITIVE_NAME%', '%PRIMITIVE_SHORT_NAME%');


/**
 * Exported class.
 */
exports = $%PRIMITIVE_NAME%;
