#if(${method.Descriptor.Visibility.isPublic()})
#set ($ctorVisibility = "protected")
#else
#set ($ctorVisibility = $method.Descriptor.Visibility)
#end
#set ($parameterList = $TranspilerUtils.getParameterList($method))
#set ($mangledNameOfCreate = $ManglingNameUtils.getConstructorMangledName($method.Descriptor))
#set ($mangledNameOfCtor = $ManglingNameUtils.getCtorMangledName($method.Descriptor))
  /**
   * A particular Java constructor as a factory method.
#foreach($parameter in $method.Parameters)
#set ($parameterTypeName = $TranspilerUtils.getJsDocName($parameter.TypeDescriptor))
   * @param {$parameterTypeName} $parameter.Name
#end
   * @return {!$jsDocName}
   * @${method.Descriptor.Visibility}
   */
  static ${mangledNameOfCreate}($parameterList) {
    $className.$clinit();
    var instance = new $className;
    instance.$mangledNameOfCtor($parameterList);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
#foreach($parameter in $method.Parameters)
#set ($parameterTypeName = $TranspilerUtils.getJsDocName($parameter.TypeDescriptor))
   * @param {$parameterTypeName} $parameter.Name
#end
   * @$ctorVisibility
   */
  $mangledNameOfCtor($parameterList) {
#foreach ($statementInBody in $method.Body.Statements)
    $StatementSourceGenerator.toSource($statementInBody)
#end
  }
