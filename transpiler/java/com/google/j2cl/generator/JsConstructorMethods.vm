
#if ($isBoxedTypeAsPrimitive)
  /**
   * Constructor function implementation is provided separately.
   */
#else
#if(${method.Descriptor.Visibility.isPublic()})
#set ($ctorVisibility = "protected")
#else
#set ($ctorVisibility = $method.Descriptor.Visibility)
#end
#set ($parameterList = $GeneratorUtils.getParameterList($method, $statementSourceGenerator))
#set ($mangledNameOfCreate = $ManglingNameUtils.getConstructorMangledName($method.Descriptor))
#set ($mangledNameOfCtor = $ManglingNameUtils.getCtorMangledName($method.Descriptor))
#set ($enclosingClassTypeDescriptor = ${method.Descriptor.getEnclosingClassTypeDescriptor()})
  /**
   * A particular Java constructor as a factory method.
#if (${classType.Descriptor.isParameterizedType()})
   * @template ${statementSourceGenerator.getJsDocNames(${classType.Descriptor.getTypeArgumentDescriptors()})}
#end
#if (!${method.Descriptor.getTypeParameterTypeDescriptors().isEmpty()})
   * @template ${statementSourceGenerator.getJsDocNames(${method.Descriptor.getTypeParameterTypeDescriptors()})}
#end
#foreach($parameter in $method.Parameters)
#set ($parameterTypeName = ${statementSourceGenerator.getJsDocName(${parameter.TypeDescriptor})})
   * @param {$parameterTypeName} ${statementSourceGenerator.toSource($parameter)}
#end
   * @return {!$jsDocName}
   * @${method.Descriptor.Visibility}
   */
  static ${mangledNameOfCreate}($parameterList) {
    $className.$clinit();
    let $instance = new $className;
    $instance.$mangledNameOfCtor($parameterList);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
#if (!${method.Descriptor.getTypeParameterTypeDescriptors().isEmpty()})
   * @template ${statementSourceGenerator.getJsDocNames(${method.Descriptor.getTypeParameterTypeDescriptors()})}
#end
#foreach($parameter in $method.Parameters)
#set ($parameterTypeName = ${statementSourceGenerator.getJsDocName(${parameter.TypeDescriptor})})
   * @param {$parameterTypeName} ${statementSourceGenerator.toSource($parameter)}
#end
   * @$ctorVisibility
   */
  $mangledNameOfCtor($parameterList) {
#foreach ($statementInBody in $method.Body.Statements)
    $statementSourceGenerator.toSource($statementInBody)
#end
  }
#end
