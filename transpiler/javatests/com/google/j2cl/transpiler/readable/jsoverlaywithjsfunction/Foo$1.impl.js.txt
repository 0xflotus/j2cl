/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.jsoverlaywithjsfunction.Foo$1.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.jsoverlaywithjsfunction.Foo.$Anonymous1$impl');


let Foo$Intf = goog.require('com.google.j2cl.transpiler.readable.jsoverlaywithjsfunction.Foo.Intf$impl');
let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');
let $void = goog.forwardDeclare('vmbootstrap.primitives.$void$impl');

/** @constructor */ let $NativeFunction = window.Function;
/** @constructor */ let $Foo = window.Object;


/**
 * @implements {Foo$Intf}
 */
class Foo$1 extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {$Foo} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1 =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {$Foo} $outer_this
   * @return {function():void}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo(
      $outer_this) {
    Foo$1.$clinit();
    let $instance = new Foo$1();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo(
            $outer_this);
    return $Util.$makeLambdaFunction(
        $Util.$getPrototype(Foo$1).m_run, $instance, Foo$1.$copy);
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {$Foo} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1 =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1();
  }

  /**
   * @override
   * @return {void}
   * @public
   */
  m_run() {}

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        instance
            .$is__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Foo$1);
  }

  /**
   * Copies the fields from {@code from} to {@code to}.
   * @param {Foo$1} from
   * @param {*} to
   * @public
   */
  static $copy(from, to) {
    to.f_$outer_this__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1 =
        from.f_$outer_this__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1;
    // Marks the object is an instance of this class.
    to.$is__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1 =
        true;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('java.lang.Class$impl');
    $void = goog.module.get('vmbootstrap.primitives.$void$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsoverlaywithjsfunction_Foo$1() {}
};

$Util.$setClassMetadata(
    Foo$1, 'com.google.j2cl.transpiler.readable.jsoverlaywithjsfunction.Foo$1');


Foo$Intf.$markImplementor(Foo$1);


/**
 * Export class.
 */
exports = Foo$1;
//# sourceMappingURL=Foo$1.js.map