goog.module('gen.com.google.j2cl.transpiler.readable.emptymethod.MainModule');


var Class = goog.require('gen.java.lang.CoreModule').Class;
var Object = goog.require('gen.java.lang.CoreModule').Object;
var Util = goog.require('nativebootstrap.UtilModule').Util;


/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/emptymethod/Main.java.
 */
class Main extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs inline instance field initializers.
   * @param {Main} instance
   * @private
   */
  static $init(instance) {}

  /**
   * @param {Array<string>} args
   * @public
   */
  static m_main__arrayOf_java_lang_String(args) {}

  /**
   * A particular Java constructor as a factory method.
   * @return {!Main}
   * @public
   */
  static $create() {
    Main.$clinit();
    var instance = new Main;
    Main.$ctor__com_google_j2cl_transpiler_readable_emptymethod_Main(instance);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {Main} instance
   * @protected
   */
  static $ctor__com_google_j2cl_transpiler_readable_emptymethod_Main(instance) {
    Object.$ctor__java_lang_Object(instance);
    Main.$init(instance);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Main; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @private
   */
  static $isAssignableFrom(classConstructor) {
    return Util.$canCastClass(classConstructor, Main);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 */
Main.$class = Class.$createForClass(
    Util.$generateId('Main'),
    Util.$generateId('com.google.j2cl.transpiler.readable.emptymethod.Main'),
    Object.$class,
    Util.$generateId('com.google.j2cl.transpiler.readable.emptymethod.Main'));


/**
 * Exported class.
 */
exports.Main = Main;
