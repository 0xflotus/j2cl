/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/casttoprimitive/CastToPrimitive.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitiveModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Long = goog.require('nativebootstrap.LongUtilsModule').Long;
let $LongUtils = goog.require('nativebootstrap.LongUtilsModule').LongUtils;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $byte = goog.require('vmbootstrap.PrimitivesModule').$byte;
let $char = goog.require('vmbootstrap.PrimitivesModule').$char;
let $double = goog.require('vmbootstrap.PrimitivesModule').$double;
let $float = goog.require('vmbootstrap.PrimitivesModule').$float;
let $int = goog.require('vmbootstrap.PrimitivesModule').$int;
let $long = goog.require('vmbootstrap.PrimitivesModule').$long;
let $short = goog.require('vmbootstrap.PrimitivesModule').$short;
let $Primitives = goog.require('vmbootstrap.PrimitivesModule').Primitives;


class CastToPrimitive extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive() {
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let b = 1;
    let c = 1;
    let s = 1;
    let i = 1;
    let l = $LongUtils.$fromInt(1);
    let f = 1.1;
    let d = 1.1;
    b = b;
    c = $Primitives.$castByteToChar(b);
    s = b;
    i = b;
    l = $Primitives.$castByteToLong(b);
    f = b;
    d = b;
    b = $Primitives.$castCharToByte(c);
    c = c;
    s = $Primitives.$castCharToShort(c);
    i = c;
    l = $Primitives.$castCharToLong(c);
    f = c;
    d = c;
    b = $Primitives.$castShortToByte(s);
    c = $Primitives.$castShortToChar(s);
    s = s;
    i = s;
    l = $Primitives.$castShortToLong(s);
    f = s;
    d = s;
    b = $Primitives.$castIntToByte(i);
    c = $Primitives.$castIntToChar(i);
    s = $Primitives.$castIntToShort(i);
    i = i;
    l = $Primitives.$castIntToLong(i);
    f = i;
    d = i;
    b = $Primitives.$castLongToByte(l);
    c = $Primitives.$castLongToChar(l);
    s = $Primitives.$castLongToShort(l);
    i = $Primitives.$castLongToInt(l);
    l = l;
    f = $Primitives.$castLongToFloat(l);
    d = $Primitives.$castLongToDouble(l);
    b = $Primitives.$castFloatToByte(f);
    c = $Primitives.$castFloatToChar(f);
    s = $Primitives.$castFloatToShort(f);
    i = $Primitives.$castFloatToInt(f);
    l = $Primitives.$castFloatToLong(f);
    f = f;
    d = f;
    b = $Primitives.$castDoubleToByte(d);
    c = $Primitives.$castDoubleToChar(d);
    s = $Primitives.$castDoubleToShort(d);
    i = $Primitives.$castDoubleToInt(d);
    l = $Primitives.$castDoubleToLong(d);
    f = d;
    d = d;
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!CastToPrimitive}
   * @public
   * @nocollapse
   */
  static $create() {
    CastToPrimitive.$clinit();
    let instance = new CastToPrimitive;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof CastToPrimitive; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CastToPrimitive);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!CastToPrimitive.$classCastToPrimitive) {
      CastToPrimitive.$classCastToPrimitive = Class.$createForClass(
          $Util.$generateId('CastToPrimitive'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive'));
    }
    return CastToPrimitive.$classCastToPrimitive;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.CastToPrimitive = CastToPrimitive;
