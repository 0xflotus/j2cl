/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Long = goog.require('nativebootstrap.Long$impl');
let $Util = goog.require('nativebootstrap.Util$impl');
let $LongUtils = goog.require('vmbootstrap.LongUtils$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $byte = goog.forwardDeclare('vmbootstrap.primitives.$byte$impl');
let $char = goog.forwardDeclare('vmbootstrap.primitives.$char$impl');
let $double = goog.forwardDeclare('vmbootstrap.primitives.$double$impl');
let $float = goog.forwardDeclare('vmbootstrap.primitives.$float$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');
let $long = goog.forwardDeclare('vmbootstrap.primitives.$long$impl');
let $short = goog.forwardDeclare('vmbootstrap.primitives.$short$impl');
let $Primitives = goog.forwardDeclare('vmbootstrap.primitives.Primitives$impl');


class CastToPrimitive extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!CastToPrimitive}
   * @public
   */
  static $create() {
    CastToPrimitive.$clinit();
    let $instance = new CastToPrimitive;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_casttoprimitive_CastToPrimitive();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let b = 1;
    let c = 1;
    let s = 1;
    let i = 1;
    let l = $LongUtils.$fromInt(1);
    let f = 1.100000023841858;
    let d = 1.1;
    b = b;
    c = $Primitives.$widenByteToChar(b);
    s = b;
    i = b;
    l = $Primitives.$widenByteToLong(b);
    f = b;
    d = b;
    b = $Primitives.$narrowCharToByte(c);
    c = c;
    s = $Primitives.$narrowCharToShort(c);
    i = c;
    l = $Primitives.$widenCharToLong(c);
    f = c;
    d = c;
    b = $Primitives.$narrowShortToByte(s);
    c = $Primitives.$narrowShortToChar(s);
    s = s;
    i = s;
    l = $Primitives.$widenShortToLong(s);
    f = s;
    d = s;
    b = $Primitives.$narrowIntToByte(i);
    c = $Primitives.$narrowIntToChar(i);
    s = $Primitives.$narrowIntToShort(i);
    i = i;
    l = $Primitives.$widenIntToLong(i);
    f = i;
    d = i;
    b = $Primitives.$narrowLongToByte(l);
    c = $Primitives.$narrowLongToChar(l);
    s = $Primitives.$narrowLongToShort(l);
    i = $Primitives.$narrowLongToInt(l);
    l = l;
    f = $Primitives.$widenLongToFloat(l);
    d = $Primitives.$widenLongToDouble(l);
    b = $Primitives.$narrowFloatToByte(f);
    c = $Primitives.$narrowFloatToChar(f);
    s = $Primitives.$narrowFloatToShort(f);
    i = $Primitives.$narrowFloatToInt(f);
    l = $Primitives.$narrowFloatToLong(f);
    f = f;
    d = f;
    b = $Primitives.$narrowDoubleToByte(d);
    c = $Primitives.$narrowDoubleToChar(d);
    s = $Primitives.$narrowDoubleToShort(d);
    i = $Primitives.$narrowDoubleToInt(d);
    l = $Primitives.$narrowDoubleToLong(d);
    f = d;
    d = d;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof CastToPrimitive; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CastToPrimitive);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    CastToPrimitive.$clinit();
    if (!CastToPrimitive.$classCastToPrimitive_) {
      CastToPrimitive.$classCastToPrimitive_ = Class.$createForClass(
          $Util.$generateId('CastToPrimitive'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttoprimitive.CastToPrimitive'));
    }
    return CastToPrimitive.$classCastToPrimitive_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return CastToPrimitive.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    $byte = goog.module.get('vmbootstrap.primitives.$byte$impl');
    $char = goog.module.get('vmbootstrap.primitives.$char$impl');
    $double = goog.module.get('vmbootstrap.primitives.$double$impl');
    $float = goog.module.get('vmbootstrap.primitives.$float$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    $long = goog.module.get('vmbootstrap.primitives.$long$impl');
    $short = goog.module.get('vmbootstrap.primitives.$short$impl');
    $Primitives = goog.module.get('vmbootstrap.primitives.Primitives$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
CastToPrimitive.$classCastToPrimitive_ = null;



/**
 * Export class.
 */
exports = CastToPrimitive;
