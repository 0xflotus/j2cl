/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Lambda$Function$3 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$Function$3$impl');
let $Lambda$Function$4 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$Function$4$impl');
let $Lambda$MyInterface$0 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$0$impl');
let $Lambda$MyInterface$1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$1$impl');
let $Lambda$MyInterface$2 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$2$impl');
let MyInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.MyInterface$impl');
let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template C_E
 */
class LambdaWithGenerics extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'LambdaWithGenerics()'.
   * @template C_E
   * @return {!LambdaWithGenerics<C_E>}
   * @public
   */
  static $create__() {
    LambdaWithGenerics.$clinit();
    let $instance = new LambdaWithGenerics();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics__();
    return $instance;
  }

  /**
   * Initialization from constructor 'LambdaWithGenerics()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics();
  }

  /**
   * @template M_T
   * @param {MyInterface<M_T>} intf
   * @param {M_T} e
   * @return {M_T}
   * @public
   */
  m_test1__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Object(
      intf, e) {
    return intf.m_foo__java_lang_Object(e);
  }

  /**
   * @param {MyInterface<Error>} intf
   * @param {Error} e
   * @return {Error}
   * @public
   */
  m_test2__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Error(
      intf, e) {
    return /**@type {Error} */ (
        $Casts.to(intf.m_foo__java_lang_Object(e), Error));
  }

  /**
   * @template M_T
   * @param {MyInterface<Enum<M_T>>} intf
   * @param {Enum<M_T>} e
   * @return {Enum<M_T>}
   * @public
   */
  static m_test3__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Enum(
      intf, e) {
    LambdaWithGenerics.$clinit();
    return /**@type {Enum<Enum>} */ (
        $Casts.to(intf.m_foo__java_lang_Object(e), Enum));
  }

  /**
   * @return {*}
   * @public
   */
  static m_m__() {
    LambdaWithGenerics.$clinit();
    return null;
  }

  /**
   * @template M_T
   * @return {void}
   * @public
   */
  m_testLambdaNoCapture__() {
    this.m_test1__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Object(
        /**@type {!$Lambda$MyInterface$0<C_E>} */
        ($Lambda$MyInterface$0
             .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                 this)),
        Error.$create__());
    this.m_test2__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Error(
        /**@type {!$Lambda$MyInterface$1<C_E>} */
        ($Lambda$MyInterface$1
             .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                 this)),
        Error.$create__());
    /**@type {Enum<Enum>} */
    (LambdaWithGenerics
         .m_test3__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Enum(
             /**@type {!$Lambda$MyInterface$2<Enum, C_E>} */
             ($Lambda$MyInterface$2
                  .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                      this)),
             /**@type {Enum<Enum>} */ ($Casts.to(null, Enum))));
    let f = /**@type {!$Lambda$Function$3<C_E, Enum>} */ (
        $Lambda$Function$3
            .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                this));
  }

  /**
   * @return {void}
   * @public
   */
  static m_testLabdaCallingStaticMethod__() {
    LambdaWithGenerics.$clinit();
    let f = $Lambda$Function$4.$create__();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LambdaWithGenerics;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaWithGenerics);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LambdaWithGenerics.$clinit = function() {};
    $Lambda$Function$3 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$Function$3$impl');
    $Lambda$Function$4 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$Function$4$impl');
    $Lambda$MyInterface$0 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$0$impl');
    $Lambda$MyInterface$1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$1$impl');
    $Lambda$MyInterface$2 = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Lambda$MyInterface$2$impl');
    MyInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.MyInterface$impl');
    Enum = goog.module.get('java.lang.Enum$impl');
    Error = goog.module.get('java.lang.Error$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics() {
  }
};

$Util.$setClassMetadata(
    LambdaWithGenerics,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics'));



/**
 * Export class.
 */
exports = LambdaWithGenerics;
//# sourceMappingURL=LambdaWithGenerics.js.map