/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LambdaWithGenerics$0foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous0foo$impl');
let LambdaWithGenerics$1foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous1foo$impl');
let LambdaWithGenerics$2foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous2foo$impl');
let LambdaWithGenerics$3apply = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous3apply$impl');
let MyInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdawithgenerics.MyInterface$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');
let Enum = goog.forwardDeclare('java.lang.Enum$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Function = goog.forwardDeclare('java.util.function.Function$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class LambdaWithGenerics extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LambdaWithGenerics}
   * @public
   */
  static $create() {
    LambdaWithGenerics.$clinit();
    let $instance = new LambdaWithGenerics();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics();
  }

  /**
   * @template M_T
   * @param {MyInterface<M_T>} intf
   * @param {M_T} e
   * @return {M_T}
   * @public
   */
  m_test1__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Object(
      intf, e) {
    return intf.m_foo__java_lang_Object(e);
  }

  /**
   * @param {MyInterface<Error>} intf
   * @param {Error} e
   * @return {Error}
   * @public
   */
  m_test2__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Error(
      intf, e) {
    return intf.m_foo__java_lang_Object(e);
  }

  /**
   * @template M_T
   * @param {MyInterface<Enum<M_T>>} intf
   * @param {Enum<M_T>} e
   * @return {Enum<M_T>}
   * @public
   */
  static m_test3__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Enum(
      intf, e) {
    LambdaWithGenerics.$clinit();
    return /**@type {Enum<Enum>} */ (intf.m_foo__java_lang_Object(e));
  }

  /**
   * @template M_T
   * @return {void}
   * @public
   */
  m_testLambdaNoCapture() {
    this.m_test1__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Object(
        LambdaWithGenerics$0foo
            .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                this),
        Error.$create());
    this.m_test2__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Error(
        LambdaWithGenerics$1foo
            .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                this),
        Error.$create());
    /**@type {Enum<Enum>} */
    (LambdaWithGenerics
         .m_test3__com_google_j2cl_transpiler_readable_lambdawithgenerics_MyInterface__java_lang_Enum(
             /**@type {!LambdaWithGenerics$2foo<Enum>} */
             (LambdaWithGenerics$2foo
                  .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                      this)),
             /**@type {Enum<Enum>} */ ($Casts.to(null, Enum))));
    let f =
        LambdaWithGenerics$3apply
            .$create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
                this);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LambdaWithGenerics;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaWithGenerics);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LambdaWithGenerics$0foo = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous0foo$impl');
    LambdaWithGenerics$1foo = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous1foo$impl');
    LambdaWithGenerics$2foo = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous2foo$impl');
    LambdaWithGenerics$3apply = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.$Anonymous3apply$impl');
    MyInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdawithgenerics.MyInterface$impl');
    Class = goog.module.get('java.lang.Class$impl');
    Enum = goog.module.get('java.lang.Enum$impl');
    Error = goog.module.get('java.lang.Error$impl');
    Function = goog.module.get('java.util.function.Function$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics() {
  }
};

$Util.$setClassMetadata(
    LambdaWithGenerics,
    'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics');



/**
 * Export class.
 */
exports = LambdaWithGenerics;
//# sourceMappingURL=LambdaWithGenerics.js.map