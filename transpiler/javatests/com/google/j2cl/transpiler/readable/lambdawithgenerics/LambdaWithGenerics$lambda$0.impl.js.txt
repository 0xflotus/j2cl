/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$lambda$0.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$lambda$0$impl');


let MyInterface = goog.require('gen.com.google.j2cl.transpiler.readable.lambdawithgenerics.MyInterface$impl');
let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LambdaWithGenerics = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Error = goog.forwardDeclare('gen.java.lang.Error$impl');


/**
 * @implements {MyInterface<Error>}
 */
class LambdaWithGenerics$lambda$0 extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {LambdaWithGenerics}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0 =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0() {
  }

  /**
   * @param {Error} i
   * @return {Error}
   * @public
   */
  lambda$0(i) { return i; }

  /**
   * @override
   * @param {Error} arg0
   * @return {Error}
   * @public
   */
  m_foo__java_lang_Object(arg0) { return this.lambda$0(arg0); }

  /**
   * A particular Java constructor as a factory method.
   * @param {LambdaWithGenerics} $outer_this
   * @return {!LambdaWithGenerics$lambda$0}
   * @public
   * @nocollapse
   */
  static $create__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
      $outer_this) {
    LambdaWithGenerics$lambda$0.$clinit();
    let instance = new LambdaWithGenerics$lambda$0;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {LambdaWithGenerics} $outer_this
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0 =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdawithgenerics_LambdaWithGenerics$lambda$0();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LambdaWithGenerics$lambda$0;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaWithGenerics$lambda$0);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    LambdaWithGenerics$lambda$0.$clinit();
    if (!LambdaWithGenerics$lambda$0.$classLambdaWithGenerics$lambda$0_) {
      LambdaWithGenerics$lambda$0
          .$classLambdaWithGenerics$lambda$0_ = Class.$createForClass(
          $Util.$generateId('lambda$0'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$lambda$0'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics.lambda.0'));
    }
    return LambdaWithGenerics$lambda$0.$classLambdaWithGenerics$lambda$0_;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    LambdaWithGenerics = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.lambdawithgenerics.LambdaWithGenerics$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Error = goog.module.get('gen.java.lang.Error$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
LambdaWithGenerics$lambda$0.$classLambdaWithGenerics$lambda$0_ = null;


MyInterface.$markImplementor(LambdaWithGenerics$lambda$0);



/**
 * Export class.
 */
exports = LambdaWithGenerics$lambda$0;
