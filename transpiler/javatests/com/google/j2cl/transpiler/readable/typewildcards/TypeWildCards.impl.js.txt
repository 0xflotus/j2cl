/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let GenericType = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.typewildcards.GenericType$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class TypeWildCards extends Object {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!TypeWildCards}
   * @public
   */
  static $create() {
    TypeWildCards.$clinit();
    let $instance = new TypeWildCards();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards();
  }

  /**
   * @param {GenericType<?>} g
   * @return {void}
   * @public
   */
  m_unbounded__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
      g) {}

  /**
   * @param {GenericType<?>} g
   * @return {void}
   * @public
   */
  m_upperBound__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
      g) {}

  /**
   * @param {GenericType<?>} g
   * @return {void}
   * @public
   */
  m_lowerBound__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
      g) {}

  /**
   * @return {void}
   * @public
   */
  m_test() {
    this.m_unbounded__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
        /**@type {!GenericType<TypeWildCards>} */ (GenericType.$create()));
    this.m_upperBound__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
        /**@type {!GenericType<TypeWildCards>} */ (GenericType.$create()));
    this.m_lowerBound__com_google_j2cl_transpiler_readable_typewildcards_GenericType(
        /**@type {!GenericType<TypeWildCards>} */ (GenericType.$create()));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof TypeWildCards; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TypeWildCards);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    GenericType = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.typewildcards.GenericType$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_typewildcards_TypeWildCards() {}
};

$Util.$setClassMetadata(
    TypeWildCards,
    'com.google.j2cl.transpiler.readable.typewildcards.TypeWildCards');



/**
 * Export class.
 */
exports = TypeWildCards;
//# sourceMappingURL=TypeWildCards.js.map