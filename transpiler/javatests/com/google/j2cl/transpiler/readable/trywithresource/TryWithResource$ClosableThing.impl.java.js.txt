/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$ClosableThing.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.ClosableThing$impl');


let AutoCloseable = goog.require('java.lang.AutoCloseable$impl');
let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @implements {AutoCloseable}
 */
class TryWithResource$ClosableThing extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!TryWithResource$ClosableThing}
   * @public
   */
  static $create__() {
    TryWithResource$ClosableThing.$clinit();
    let $instance = new TryWithResource$ClosableThing();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing();
  }

  /**
   * @override
   * @return {void}
   * @public
   */
  m_close__() {}

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TryWithResource$ClosableThing;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TryWithResource$ClosableThing);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() { Object.$clinit(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing() {
  }
};

$Util.$setClassMetadata(
    TryWithResource$ClosableThing,
    'com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$ClosableThing');


AutoCloseable.$markImplementor(TryWithResource$ClosableThing);


/**
 * Export class.
 */
exports = TryWithResource$ClosableThing;
//# sourceMappingURL=TryWithResource$ClosableThing.js.map