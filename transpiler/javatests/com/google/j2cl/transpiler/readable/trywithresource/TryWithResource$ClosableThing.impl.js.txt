/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$ClosableThing.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$ClosableThing$impl');


let AutoCloseable = goog.require('gen.java.lang.AutoCloseable$impl');
let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let TryWithResource = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


/**
 * @implements {AutoCloseable}
 */
class TryWithResource$ClosableThing extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!TryWithResource$ClosableThing}
   * @public
   */
  static $create() {
    TryWithResource$ClosableThing.$clinit();
    let $instance = new TryWithResource$ClosableThing;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource$ClosableThing();
  }

  /**
   * @override
   * @return {void}
   * @public
   */
  m_close() {}

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TryWithResource$ClosableThing;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TryWithResource$ClosableThing);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    TryWithResource$ClosableThing.$clinit();
    if (!TryWithResource$ClosableThing.$classTryWithResource$ClosableThing_) {
      TryWithResource$ClosableThing
          .$classTryWithResource$ClosableThing_ = Class.$createForClass(
          $Util.$generateId('ClosableThing'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$ClosableThing'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.ClosableThing'));
    }
    return TryWithResource$ClosableThing.$classTryWithResource$ClosableThing_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return TryWithResource$ClosableThing.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    TryWithResource = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.trywithresource.TryWithResource$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
TryWithResource$ClosableThing.$classTryWithResource$ClosableThing_ = null;


AutoCloseable.$markImplementor(TryWithResource$ClosableThing);



/**
 * Export class.
 */
exports = TryWithResource$ClosableThing;
