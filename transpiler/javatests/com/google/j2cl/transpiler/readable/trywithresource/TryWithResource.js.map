[public class TryWithResource {
  static class ClosableThing implements AutoCloseable {
...  }
}] => [class TryWithResource extends java_lang_Object {
  /**
...exports = TryWithResource;
] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource"
[public class TryWithResource {
  static class ClosableThing implements AutoCloseable {
...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource"
[UNKNOWN] => [super();]
[public class TryWithResource {
  static class ClosableThing implements AutoCloseable {
...  }
}] => [/**
   * Factory method corresponding to constructor 'TryWithResource()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.<ctor>"
[UNKNOWN] => [TryWithResource.$clinit();]
[UNKNOWN] => [let $instance = new TryWithResource();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource__();]
[UNKNOWN] => [return $instance;]
[public class TryWithResource {
  static class ClosableThing implements AutoCloseable {
...  }
}] => [/**
   * Initialization from constructor 'TryWithResource()'.
...    this.$init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource();
  }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_trywithresource_TryWithResource();]
[public static void tryWithResource() {
    try (ClosableThing thing = new ClosableThing()) {
...    }
  }] => [/**
   * @return {void}
...    }
  }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResource"
[UNKNOWN] => [TryWithResource.$clinit();]
[UNKNOWN] => [let $primaryExc = null;]
[UNKNOWN] => [let thing = null;]
[thing] => [thing] "thing"
[UNKNOWN] => [try {
        thing = ClosableThing.$create__();
        let i = 0;
      } catch (/** @type {*} */ __$exc) {
        __$exc = $Exceptions.toJava(__$exc);
        if (Throwable.$isInstance(__$exc)) {
          let $exceptionFromTry = /**@type {Throwable} */ (__$exc);
          $primaryExc = $exceptionFromTry;
          throw $Exceptions.toJs($exceptionFromTry);
        } else {
          throw $Exceptions.toJs(__$exc);
        }
      } finally {
        $primaryExc = $Exceptions.safeClose(thing, $primaryExc);
        if (!$Equality.$same($primaryExc, null)) {
          throw $Exceptions.toJs($primaryExc);
        }
      }]
[UNKNOWN] => [thing = ClosableThing.$create__();]
[int i = 0;] => [let i = 0;] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResource"
[i] => [i] "i"
[UNKNOWN] => [__$exc = $Exceptions.toJava(__$exc);]
[UNKNOWN] => [if (Throwable.$isInstance(__$exc)) {
          let $exceptionFromTry = /**@type {Throwable} */ (__$exc);
          $primaryExc = $exceptionFromTry;
          throw $Exceptions.toJs($exceptionFromTry);
        } else {
          throw $Exceptions.toJs(__$exc);
        }]
[UNKNOWN] => [let $exceptionFromTry = /**@type {Throwable} */ (__$exc);]
[UNKNOWN] => [$primaryExc = $exceptionFromTry;]
[UNKNOWN] => [throw $Exceptions.toJs($exceptionFromTry);]
[UNKNOWN] => [throw $Exceptions.toJs(__$exc);]
[UNKNOWN] => [$primaryExc = $Exceptions.safeClose(thing, $primaryExc);]
[UNKNOWN] => [if (!$Equality.$same($primaryExc, null)) {
          throw $Exceptions.toJs($primaryExc);
        }]
[UNKNOWN] => [throw $Exceptions.toJs($primaryExc);]
[public static void tryWithResourceMultipleResources(String[] args) {
    try (ClosableThing thing = new ClosableThing(); ClosableThing thing2 = new ClosableThing()) {
...    }
  }] => [/**
   * @param {Array<?string>} args
...    }
  }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResourceMultipleResources"
[args] => [args] "args"
[UNKNOWN] => [TryWithResource.$clinit();]
[try (ClosableThing thing = new ClosableThing(); ClosableThing thing2 = new ClosableThing()) {
      int i = 0;
...      int b = 10;
    }] => [try {
      let $primaryExc = null;
...      }
    }] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResourceMultipleResources"
[UNKNOWN] => [let $primaryExc = null;]
[UNKNOWN] => [let thing = null;]
[thing] => [thing] "thing"
[UNKNOWN] => [let thing2 = null;]
[thing2] => [thing2] "thing2"
[UNKNOWN] => [try {
        thing = ClosableThing.$create__();
        thing2 = ClosableThing.$create__();
        let i = 0;
        throw $Exceptions.toJs(Exception.$create__());
      } catch (/** @type {*} */ __$exc) {
        __$exc = $Exceptions.toJava(__$exc);
        if (Throwable.$isInstance(__$exc)) {
          let $exceptionFromTry = /**@type {Throwable} */ (__$exc);
          $primaryExc = $exceptionFromTry;
          throw $Exceptions.toJs($exceptionFromTry);
        } else {
          throw $Exceptions.toJs(__$exc);
        }
      } finally {
        $primaryExc = $Exceptions.safeClose(thing2, $primaryExc);
        $primaryExc = $Exceptions.safeClose(thing, $primaryExc);
        if (!$Equality.$same($primaryExc, null)) {
          throw $Exceptions.toJs($primaryExc);
        }
      }]
[UNKNOWN] => [thing = ClosableThing.$create__();]
[UNKNOWN] => [thing2 = ClosableThing.$create__();]
[int i = 0;] => [let i = 0;] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResourceMultipleResources"
[i] => [i] "i"
[throw new Exception();] => [throw $Exceptions.toJs(Exception.$create__());] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResourceMultipleResources"
[UNKNOWN] => [__$exc = $Exceptions.toJava(__$exc);]
[UNKNOWN] => [if (Throwable.$isInstance(__$exc)) {
          let $exceptionFromTry = /**@type {Throwable} */ (__$exc);
          $primaryExc = $exceptionFromTry;
          throw $Exceptions.toJs($exceptionFromTry);
        } else {
          throw $Exceptions.toJs(__$exc);
        }]
[UNKNOWN] => [let $exceptionFromTry = /**@type {Throwable} */ (__$exc);]
[UNKNOWN] => [$primaryExc = $exceptionFromTry;]
[UNKNOWN] => [throw $Exceptions.toJs($exceptionFromTry);]
[UNKNOWN] => [throw $Exceptions.toJs(__$exc);]
[UNKNOWN] => [$primaryExc = $Exceptions.safeClose(thing2, $primaryExc);]
[UNKNOWN] => [$primaryExc = $Exceptions.safeClose(thing, $primaryExc);]
[UNKNOWN] => [if (!$Equality.$same($primaryExc, null)) {
          throw $Exceptions.toJs($primaryExc);
        }]
[UNKNOWN] => [throw $Exceptions.toJs($primaryExc);]
[UNKNOWN] => [__$exc$1$ = $Exceptions.toJava(__$exc$1$);]
[UNKNOWN] => [if (Exception.$isInstance(__$exc$1$)) {
        let e = /**@type {Exception} */ (__$exc$1$);
        let b = 10;
      } else {
        throw $Exceptions.toJs(__$exc$1$);
      }]
[UNKNOWN] => [let e = /**@type {Exception} */ (__$exc$1$);]
[e] => [e] "e"
[int b = 10;] => [let b = 10;] "com.google.j2cl.transpiler.readable.trywithresource.TryWithResource.tryWithResourceMultipleResources"
[b] => [b] "b"
[UNKNOWN] => [throw $Exceptions.toJs(__$exc$1$);]
[UNKNOWN] => [java_lang_Object.$clinit();]
