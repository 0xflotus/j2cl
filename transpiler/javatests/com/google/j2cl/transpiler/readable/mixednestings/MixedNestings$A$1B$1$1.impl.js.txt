/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$1.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$1$impl');


let MyInterface = goog.require('gen.com.google.j2cl.transpiler.readable.mixednestings.MyInterface$impl');
let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let MixedNestings$A$1B$1 = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @implements {MyInterface}
 */
class MixedNestings$A$1B$1$1 extends Object {
  /**
   * Defines instance fields.
   */
  constructor() {
    super();
    /**
     * @public {MixedNestings$A$1B$1}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1 =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {MixedNestings$A$1B$1} $outer_this
   * @return {!MixedNestings$A$1B$1$1}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
      $outer_this) {
    MixedNestings$A$1B$1$1.$clinit();
    let $instance = new MixedNestings$A$1B$1$1();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
            $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {MixedNestings$A$1B$1} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1 =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1();
  }

  /**
   * @override
   * @param {number} b
   * @return {number}
   * @public
   */
  m_fun__int(b) { return b; }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MixedNestings$A$1B$1$1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, MixedNestings$A$1B$1$1);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    MixedNestings$A$1B$1 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$1() {
  }
};

$Util.$setClassMetadata(
    MixedNestings$A$1B$1$1,
    'com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$1');


MyInterface.$markImplementor(MixedNestings$A$1B$1$1);


/**
 * Export class.
 */
exports = MixedNestings$A$1B$1$1;
//# sourceMappingURL=MixedNestings$A$1B$1$1.js.map