/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$0fun.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.mixednestings.MixedNestings.A.$Anonymous1B.$Anonymous1.$Anonymous0fun$impl');


let MyInterface = goog.require('com.google.j2cl.transpiler.readable.mixednestings.MyInterface$impl');
let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let MixedNestings$A$1B$1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.mixednestings.MixedNestings.A.$Anonymous1B.$Anonymous1$impl');
let MixedNestings$A$1B$1$1fun = goog.forwardDeclare('com.google.j2cl.transpiler.readable.mixednestings.MixedNestings.A.$Anonymous1B.$Anonymous1.$Anonymous1fun$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @implements {MyInterface}
 */
class MixedNestings$A$1B$1$0fun extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {MixedNestings$A$1B$1} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {MixedNestings$A$1B$1} $outer_this
   * @return {!MixedNestings$A$1B$1$0fun}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
      $outer_this) {
    MixedNestings$A$1B$1$0fun.$clinit();
    let $instance = new MixedNestings$A$1B$1$0fun();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
            $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {MixedNestings$A$1B$1} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun =
        $outer_this;
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun();
  }

  /**
   * @param {number} n
   * @return {number}
   * @public
   */
  lambda0fun(n) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A
        .m_mm__();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B
        .m_aa__();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun
        .f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1
        .m_bb__();
    let iii =
        MixedNestings$A$1B$1$1fun
            .$create__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1(
                this.f_$outer_this__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun);
    return iii.m_fun__int(200);
  }

  /**
   * @override
   * @param {number} arg0
   * @return {number}
   * @public
   */
  m_fun__int(arg0) {
    return this.lambda0fun(arg0);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MixedNestings$A$1B$1$0fun;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, MixedNestings$A$1B$1$0fun);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    MixedNestings$A$1B$1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.mixednestings.MixedNestings.A.$Anonymous1B.$Anonymous1$impl');
    MixedNestings$A$1B$1$1fun = goog.module.get(
        'com.google.j2cl.transpiler.readable.mixednestings.MixedNestings.A.$Anonymous1B.$Anonymous1.$Anonymous1fun$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_mixednestings_MixedNestings$A$1B$1$0fun() {
  }
};

$Util.$setClassMetadata(
    MixedNestings$A$1B$1$0fun,
    'com.google.j2cl.transpiler.readable.mixednestings.MixedNestings$A$1B$1$0fun');


MyInterface.$markImplementor(MixedNestings$A$1B$1$0fun);


/**
 * Export class.
 */
exports = MixedNestings$A$1B$1$0fun;
//# sourceMappingURL=MixedNestings$A$1B$1$0fun.js.map