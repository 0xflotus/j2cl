[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [super();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<synthetic: ctor_js>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [AutoBoxing.$clinit();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<synthetic: ctor_create>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [let $instance = new AutoBoxing();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<synthetic: ctor_create>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_autoboxing_AutoBoxing__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<synthetic: ctor_create>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<synthetic: ctor_create>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<init>"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [this.$init__com_google_j2cl_transpiler_readable_autoboxing_AutoBoxing();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<init>"
[b] => [b] "b"
[return b;] => [return b;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[d] => [d] "d"
[return d;] => [return d;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[b] => [b] "b"
[return b;] => [return Byte.m_valueOf__byte(b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[f] => [f] "f"
[return f;] => [return Float.m_valueOf__float(f);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[i] => [i] "i"
[return i;] => [return Integer.m_valueOf__int(i);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[l] => [l] "l"
[return l;] => [return Long.m_valueOf__long(l);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[s] => [s] "s"
[return s;] => [return Short.m_valueOf__short(s);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[c] => [c] "c"
[return c;] => [return Character.m_valueOf__char(c);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.box"
[b] => [b] "b"
[return b;] => [return Boolean.m_booleanValue__java_lang_Boolean(b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[d] => [d] "d"
[return d;] => [return Double.m_doubleValue__java_lang_Double(d);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[b] => [b] "b"
[return b;] => [return b.m_byteValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[f] => [f] "f"
[return f;] => [return f.m_floatValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[i] => [i] "i"
[return i;] => [return i.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[l] => [l] "l"
[return l;] => [return l.m_longValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[s] => [s] "s"
[return s;] => [return s.m_shortValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[c] => [c] "c"
[return c;] => [return c.m_charValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.unbox"
[d] => [d] "d"
[return d;] => [return d;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.takesAndReturnsPrimitiveDouble"
[v] => [v] "v"
[return null;] => [return null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.takesAndReturnsVoid"
[o] => [o] "o"
[return (double) o;] => [return Double.m_doubleValue__java_lang_Double(/**@type {?number} */ ($Casts.$to(o, Double)));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.takesObjectAndReturnsPrimitiveDouble"
[numbers] => [numbers] "numbers"
[double sum = 0;] => [let sum = 0;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxing"
[sum] => [sum] "sum"
[for (Object number : numbers) {
      sum += (Double) number;
    }] => [for (let $array = numbers, $index = 0; $index < $array.length; $index++) {
      let number$1$ = $array[$index];
      sum += Double.m_doubleValue__java_lang_Double(/**@type {?number} */ ($Casts.$to(number$1$, Double)));
    }] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxing"
[for (Object number : numbers) {
      sum += (Double) number;
    }] => [let number$1$ = $array[$index];] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxing"
[number] => [number$1$] "number"
[sum += (Double) number;] => [sum += Double.m_doubleValue__java_lang_Double(/**@type {?number} */ ($Casts.$to(number$1$, Double)));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxing"
[return sum;] => [return sum;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxing"
[numbers] => [numbers] "numbers"
[double sum = 0;] => [let sum = 0;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxingJsVarargs"
[sum] => [sum] "sum"
[for (Object number : numbers) {
      sum += (Double) number;
    }] => [for (let $array = numbers, $index = 0; $index < $array.length; $index++) {
      let number$1$ = $array[$index];
      sum += Double.m_doubleValue__java_lang_Double(/**@type {?number} */ ($Casts.$to(number$1$, Double)));
    }] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxingJsVarargs"
[for (Object number : numbers) {
      sum += (Double) number;
    }] => [let number$1$ = $array[$index];] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxingJsVarargs"
[number] => [number$1$] "number"
[sum += (Double) number;] => [sum += Double.m_doubleValue__java_lang_Double(/**@type {?number} */ ($Casts.$to(number$1$, Double)));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxingJsVarargs"
[return sum;] => [return sum;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.sumWithoutBoxingJsVarargs"
[Boolean b = null;] => [let b = null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testNull"
[b] => [b] "b"
[Double d = null;] => [let d = null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testNull"
[d] => [d] "d"
[Integer i = null;] => [let i = null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testNull"
[i] => [i] "i"
[Long l = null;] => [let l = null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testNull"
[l] => [l] "l"
[boolean bool = true;] => [let bool = true;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[bool] => [bool] "bool"
[double d = 1111.0;] => [let d = 1111.0;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[d] => [d] "d"
[byte b = (byte) 100;] => [let b = 100;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[b] => [b] "b"
[float f = 1111.0f;] => [let f = 1111.0;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[f] => [f] "f"
[int i = 1111;] => [let i = 1111;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[i] => [i] "i"
[long l = 1111L;] => [let l = $Long.fromBits(1111, 0) /* 1111 */;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[l] => [l] "l"
[short s = (short) 100;] => [let s = 100;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[s] => [s] "s"
[char c = 'a';] => [let c = 97 /* 'a' */;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[c] => [c] "c"
[Boolean boxBool = bool;] => [let boxBool = bool;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxBool] => [boxBool] "boxBool"
[Double boxD = d;] => [let boxD = d;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxD] => [boxD] "boxD"
[Byte boxB = b;] => [let boxB = Byte.m_valueOf__byte(b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxB] => [boxB] "boxB"
[Float boxF = f;] => [let boxF = Float.m_valueOf__float(f);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxF] => [boxF] "boxF"
[Integer boxI = i;] => [let boxI = Integer.m_valueOf__int(i);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI] => [boxI] "boxI"
[Long boxL = l;] => [let boxL = Long.m_valueOf__long(l);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxL] => [boxL] "boxL"
[Short boxS = s;] => [let boxS = Short.m_valueOf__short(s);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxS] => [boxS] "boxS"
[Character boxC = c;] => [let boxC = Character.m_valueOf__char(c);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxC] => [boxC] "boxC"
[Object o = 0;] => [let o = Integer.m_valueOf__int(0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[o] => [o] "o"
[boxBool = true;] => [boxBool = true;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxD = 100.0;] => [boxD = 100.0;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxB = 0;] => [boxB = Byte.m_valueOf__byte(0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxF = 100.0f;] => [boxF = Float.m_valueOf__float(100.0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI = 1000;] => [boxI = Integer.m_valueOf__int(1000);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxL = 1000L;] => [boxL = Long.m_valueOf__long($Long.fromBits(1000, 0) /* 1000 */);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxS = 0;] => [boxS = Short.m_valueOf__short(0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxC = 0;] => [boxC = Character.m_valueOf__char(0 /* "\u0000" */);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxC = 'a';] => [boxC = Character.m_valueOf__char(97 /* "a" */);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[bool = unbox(bool);] => [bool = this.m_unbox__java_lang_Boolean(bool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[d = unbox(d);] => [d = this.m_unbox__java_lang_Double(d);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[b = unbox(b);] => [b = this.m_unbox__java_lang_Byte(Byte.m_valueOf__byte(b));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[f = unbox(f);] => [f = this.m_unbox__java_lang_Float(Float.m_valueOf__float(f));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[i = unbox(i);] => [i = this.m_unbox__java_lang_Integer(Integer.m_valueOf__int(i));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[l = unbox(l);] => [l = this.m_unbox__java_lang_Long(Long.m_valueOf__long(l));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[s = unbox(s);] => [s = this.m_unbox__java_lang_Short(Short.m_valueOf__short(s));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[c = unbox(c);] => [c = this.m_unbox__java_lang_Character(Character.m_valueOf__char(c));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxBool = boxBool && boxBool;] => [boxBool = Boolean.m_booleanValue__java_lang_Boolean(boxBool) && Boolean.m_booleanValue__java_lang_Boolean(boxBool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxD = boxD + boxD;] => [boxD = Double.m_doubleValue__java_lang_Double(boxD) + Double.m_doubleValue__java_lang_Double(boxD);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxF = boxF - boxF;] => [boxF = Float.m_valueOf__float(boxF.m_floatValue__() - boxF.m_floatValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI = boxI * boxI;] => [boxI = Integer.m_valueOf__int(boxI.m_intValue__() * boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxL = boxL / boxL;] => [boxL = Long.m_valueOf__long($LongUtils.$divide(boxL.m_longValue__(), boxL.m_longValue__()));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxBool = !boxBool;] => [boxBool = !Boolean.m_booleanValue__java_lang_Boolean(boxBool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI = +boxI;] => [boxI = Integer.m_valueOf__int(boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI = -boxI;] => [boxI = Integer.m_valueOf__int(-boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[boxI = ~boxI;] => [boxI = Integer.m_valueOf__int(~boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[double unusedDouble = takesObjectAndReturnsPrimitiveDouble(4);] => [let unusedDouble = this.m_takesObjectAndReturnsPrimitiveDouble__java_lang_Object(4);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[unusedDouble] => [unusedDouble] "unusedDouble"
[unusedDouble = sumWithoutBoxing(1, 1.5, (byte) 1, (short) 1, (float) 1);] => [unusedDouble = this.m_sumWithoutBoxing__arrayOf_java_lang_Object([1, 1.5, 1, 1, 1]);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[unusedDouble = sumWithoutBoxingJsVarargs(1, 1.5, (byte) 1, (short) 1, (float) 1);] => [unusedDouble = this.sumWithoutBoxingJsVarargs(1, 1.5, 1, 1, 1);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testBoxing"
[Boolean boxBool = new Boolean(true);] => [let boxBool = Boolean.$create__boolean(true);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxBool] => [boxBool] "boxBool"
[Double boxD = new Double(1111.0);] => [let boxD = Double.$create__double(1111.0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxD] => [boxD] "boxD"
[Byte boxB = new Byte((byte) 100);] => [let boxB = Byte.$create__byte(100);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxB] => [boxB] "boxB"
[Float boxF = new Float(1111.0f);] => [let boxF = Float.$create__float(1111.0);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxF] => [boxF] "boxF"
[Integer boxI = new Integer(1111);] => [let boxI = Integer.$create__int(1111);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxI] => [boxI] "boxI"
[Long boxL = new Long(1111L);] => [let boxL = Long.$create__long($Long.fromBits(1111, 0) /* 1111 */);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxL] => [boxL] "boxL"
[Short boxS = new Short((short) 100);] => [let boxS = Short.$create__short(100);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxS] => [boxS] "boxS"
[Character boxC = new Character('a');] => [let boxC = Character.$create__char(97 /* 'a' */);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxC] => [boxC] "boxC"
[boolean bool = boxBool;] => [let bool = Boolean.m_booleanValue__java_lang_Boolean(boxBool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[bool] => [bool] "bool"
[double d = boxD;] => [let d = Double.m_doubleValue__java_lang_Double(boxD);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d] => [d] "d"
[byte b = boxB;] => [let b = boxB.m_byteValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[b] => [b] "b"
[float f = boxF;] => [let f = boxF.m_floatValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[f] => [f] "f"
[int i = boxI;] => [let i = boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i] => [i] "i"
[long l = boxL;] => [let l = boxL.m_longValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[l] => [l] "l"
[short s = boxS;] => [let s = boxS.m_shortValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[s] => [s] "s"
[char c = boxC;] => [let c = boxC.m_charValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[c] => [c] "c"
[boxBool = box(boxBool);] => [boxBool = this.m_box__boolean(Boolean.m_booleanValue__java_lang_Boolean(boxBool));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxD = box(boxD);] => [boxD = this.m_box__double(Double.m_doubleValue__java_lang_Double(boxD));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxB = box(boxB);] => [boxB = this.m_box__byte(boxB.m_byteValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxF = box(boxF);] => [boxF = this.m_box__float(boxF.m_floatValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxI = box(boxI);] => [boxI = this.m_box__int(boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxL = box(boxL);] => [boxL = this.m_box__long(boxL.m_longValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxS = box(boxS);] => [boxS = this.m_box__short(boxS.m_shortValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxC = box(boxC);] => [boxC = this.m_box__char(boxC.m_charValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxB;] => [d = boxB.m_byteValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxF;] => [d = boxF.m_floatValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxI;] => [d = boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxL;] => [d = $Primitives.$widenLongToDouble(boxL.m_longValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxS;] => [d = boxS.m_shortValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxC;] => [d = boxC.m_charValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxB);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxB.m_byteValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxF);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxF.m_floatValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxI);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxL);] => [this.m_takesAndReturnsPrimitiveDouble__double($Primitives.$widenLongToDouble(boxL.m_longValue__()));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxS);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxS.m_shortValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[takesAndReturnsPrimitiveDouble(boxC);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxC.m_charValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[Void v = takesAndReturnsVoid(takesAndReturnsVoid(null));] => [let v = this.m_takesAndReturnsVoid__java_lang_Void(this.m_takesAndReturnsVoid__java_lang_Void(null));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[v] => [v] "v"
[bool = boxBool && boxBool;] => [bool = Boolean.m_booleanValue__java_lang_Boolean(boxBool) && Boolean.m_booleanValue__java_lang_Boolean(boxBool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[d = boxD + boxD;] => [d = Double.m_doubleValue__java_lang_Double(boxD) + Double.m_doubleValue__java_lang_Double(boxD);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[f = boxF - boxF;] => [f = boxF.m_floatValue__() - boxF.m_floatValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i = boxI * boxI;] => [i = boxI.m_intValue__() * boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[l = boxL / boxL;] => [l = $LongUtils.$divide(boxL.m_longValue__(), boxL.m_longValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[bool = !boxBool;] => [bool = !Boolean.m_booleanValue__java_lang_Boolean(boxBool);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i = +boxI;] => [i = boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i = -boxI;] => [i = -boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i = ~boxI;] => [i = ~boxI.m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxD = -boxD;] => [boxD = -Double.m_doubleValue__java_lang_Double(boxD);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[boxI = -boxI;] => [boxI = Integer.m_valueOf__int(-boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[switch (boxI) {
      default:
    }] => [switch (boxI.m_intValue__()) {
      default:
    }] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[default:] => [default: ] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[i += boxI += i += boxI;] => [i += (boxI = Integer.m_valueOf__int(boxI.m_intValue__() + (i += boxI.m_intValue__()))).m_intValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxing"
[Boolean boxB1 = new Boolean(true);] => [let boxB1 = Boolean.$create__boolean(true);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxB1] => [boxB1] "boxB1"
[Boolean boxB2 = new Boolean(false);] => [let boxB2 = Boolean.$create__boolean(false);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxB2] => [boxB2] "boxB2"
[boolean br;] => [let /** boolean */ br;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br] => [br] "br"
[boolean boxr;] => [let /** boolean */ boxr;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr] => [boxr] "boxr"
[boxr = boxB1 == boxB2;] => [boxr = $Equality.$same(boxB1, boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 == boxB2;] => [br = $Equality.$same(boxB1, boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 != boxB2;] => [boxr = !$Equality.$same(boxB1, boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 != boxB2;] => [br = !$Equality.$same(boxB1, boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 ^ boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 ^ boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 & boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 & boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 | boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 | boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 && boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean(boxB1) && Boolean.m_booleanValue__java_lang_Boolean(boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 && boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean(boxB1) && Boolean.m_booleanValue__java_lang_Boolean(boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 || boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean(boxB1) || Boolean.m_booleanValue__java_lang_Boolean(boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 || boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean(boxB1) || Boolean.m_booleanValue__java_lang_Boolean(boxB2);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 = boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 = boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = boxB2));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 &= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 &= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 |= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 |= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxr = boxB1 ^= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[br = boxB1 ^= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean((boxB2)))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert boxr;] => [$Asserts.$assert(boxr);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[assert br;] => [$Asserts.$assert(br);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[Boolean boxB = null;] => [let boxB = null;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxB] => [boxB] "boxB"
[boxB = !boxB;] => [boxB = !Boolean.m_booleanValue__java_lang_Boolean(boxB);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxB = boxB && boxB;] => [boxB = Boolean.m_booleanValue__java_lang_Boolean(boxB) && Boolean.m_booleanValue__java_lang_Boolean(boxB);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boxB = boxB ? boxB : boxB;] => [boxB = Boolean.m_booleanValue__java_lang_Boolean(boxB) ? boxB : boxB;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[if (boxB) {}] => [if (Boolean.m_booleanValue__java_lang_Boolean(boxB)) {
    }] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[boolean b = false;] => [let b = false;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[b] => [b] "b"
[b |= boxB |= b |= boxB;] => [b = !!(b | Boolean.m_booleanValue__java_lang_Boolean((boxB = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB) | (b = !!(b | Boolean.m_booleanValue__java_lang_Boolean((boxB))))))));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingBoolean"
[Boolean boxB = new Boolean(true);] => [let boxB = Boolean.$create__boolean(true);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[boxB] => [boxB] "boxB"
[boolean b = false;] => [let b = false;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[b] => [b] "b"
[assert boxB == boxB;] => [$Asserts.$assert($Equality.$same(boxB, boxB));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert boxB == b;] => [$Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean(boxB) == b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert b != b;] => [$Asserts.$assert(b != b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert b != boxB;] => [$Asserts.$assert(b != Boolean.m_booleanValue__java_lang_Boolean(boxB));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[Integer boxI = new Integer(100);] => [let boxI = Integer.$create__int(100);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[boxI] => [boxI] "boxI"
[int i = 101;] => [let i = 101;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[i] => [i] "i"
[assert boxI == boxI;] => [$Asserts.$assert($Equality.$same(boxI, boxI));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert boxI == i;] => [$Asserts.$assert(boxI.m_intValue__() == i);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert i != i;] => [$Asserts.$assert(i != i);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[assert i != boxI;] => [$Asserts.$assert(i != boxI.m_intValue__());] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingEquality"
[Boolean boxB = new Boolean(true);] => [let boxB = Boolean.$create__boolean(true);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testAssertStatement"
[boxB] => [boxB] "boxB"
[boolean b = true;] => [let b = true;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testAssertStatement"
[b] => [b] "b"
[assert boxB;] => [$Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean(boxB));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testAssertStatement"
[assert b;] => [$Asserts.$assert(b);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testAssertStatement"
[public void testUnderflowOverflow() {
    Byte boxedByte = Byte.MIN_VALUE;
...    assert ++boxedByte == Byte.MIN_VALUE;
  }] => [let /** Byte */ $value, /** Byte */ $value$1$;] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[Byte boxedByte = Byte.MIN_VALUE;] => [let boxedByte = Byte.m_valueOf__byte(Byte.f_MIN_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[boxedByte] => [boxedByte] "boxedByte"
[assert boxedByte-- == Byte.MIN_VALUE;] => [$Asserts.$assert(($value = boxedByte, boxedByte = Byte.m_valueOf__byte($Primitives.$narrowIntToByte(boxedByte.m_byteValue__() - 1)), $value).m_byteValue__() == Byte.f_MIN_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[assert boxedByte == Byte.MAX_VALUE;] => [$Asserts.$assert(boxedByte.m_byteValue__() == Byte.f_MAX_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[boxedByte = Byte.MIN_VALUE;] => [boxedByte = Byte.m_valueOf__byte(Byte.f_MIN_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[assert --boxedByte == Byte.MAX_VALUE;] => [$Asserts.$assert((boxedByte = Byte.m_valueOf__byte($Primitives.$narrowIntToByte(boxedByte.m_byteValue__() - 1))).m_byteValue__() == Byte.f_MAX_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[boxedByte = Byte.MAX_VALUE;] => [boxedByte = Byte.m_valueOf__byte(Byte.f_MAX_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[assert boxedByte++ == Byte.MAX_VALUE;] => [$Asserts.$assert(($value$1$ = boxedByte, boxedByte = Byte.m_valueOf__byte($Primitives.$narrowIntToByte(boxedByte.m_byteValue__() + 1)), $value$1$).m_byteValue__() == Byte.f_MAX_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[assert boxedByte == Byte.MIN_VALUE;] => [$Asserts.$assert(boxedByte.m_byteValue__() == Byte.f_MIN_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[boxedByte = Byte.MAX_VALUE;] => [boxedByte = Byte.m_valueOf__byte(Byte.f_MAX_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[assert ++boxedByte == Byte.MIN_VALUE;] => [$Asserts.$assert((boxedByte = Byte.m_valueOf__byte($Primitives.$narrowIntToByte(boxedByte.m_byteValue__() + 1))).m_byteValue__() == Byte.f_MIN_VALUE__java_lang_Byte);] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnderflowOverflow"
[public static <T extends Long> void testUnboxingFromTypeVariable() {
    T n = (T) (Long) 10L;
...    assert l == 11L;
  }] => [AutoBoxing.$clinit();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[T n = (T) (Long) 10L;] => [let n = /**@type {Long} */ ($Casts.$to(Long.m_valueOf__long($Long.fromBits(10, 0) /* 10 */), Long));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[n] => [n] "n"
[long l = n;] => [let l = /**@type {Long} */ (n).m_longValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[l] => [l] "l"
[assert l == 10L;] => [$Asserts.$assert($LongUtils.$equals(l, $Long.fromBits(10, 0) /* 10 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[l = new Local<>().toLong(11L);] => [l = /**@type {!$1Local<Long, Long>} */ ($1Local.$create__()).m_toLong__java_lang_Long_$pp_com_google_j2cl_transpiler_readable_autoboxing(Long.m_valueOf__long($Long.fromBits(11, 0) /* 11 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[assert l == 11L;] => [$Asserts.$assert($LongUtils.$equals(l, $Long.fromBits(11, 0) /* 11 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromTypeVariable"
[public static <T extends Long & Comparable<Long>> void testUnboxingFromIntersectionType() {
    T n = (T) (Long) 10L;
...    assert l == 11L;
  }] => [AutoBoxing.$clinit();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[T n = (T) (Long) 10L;] => [let n = /**@type {Long} */ ($Casts.$to(Long.m_valueOf__long($Long.fromBits(10, 0) /* 10 */), Long));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[n] => [n] "n"
[long l = n;] => [let l = /**@type {Long} */ (n).m_longValue__();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[l] => [l] "l"
[assert l == 10L;] => [$Asserts.$assert($LongUtils.$equals(l, $Long.fromBits(10, 0) /* 10 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[l = new Local<>().toLong(11L);] => [l = /**@type {!$2Local<Long, Long>} */ ($2Local.$create__()).m_toLong__java_lang_Long_$pp_com_google_j2cl_transpiler_readable_autoboxing(Long.m_valueOf__long($Long.fromBits(11, 0) /* 11 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[assert l == 11L;] => [$Asserts.$assert($LongUtils.$equals(l, $Long.fromBits(11, 0) /* 11 */));] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.testUnboxingFromIntersectionType"
[@SuppressWarnings({
  "IdentityBinaryExpression",
...  }
}] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.<clinit>"
