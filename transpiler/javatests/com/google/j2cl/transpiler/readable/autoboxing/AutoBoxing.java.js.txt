/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.
 *
 * @suppress {extraRequire, lateProvide, unusedLocalVariables}
 */
goog.module('com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing');


// Imports headers for both eager and lazy dependencies to ensure that
// all files are included in the dependency tree.
let _java_lang_Object = goog.require('java.lang.Object');
let _$Long = goog.require('nativebootstrap.Long');
let _$Util = goog.require('nativebootstrap.Util');
let _$1Local = goog.require('com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.$1Local');
let _$2Local = goog.require('com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing.$2Local');
let _Boolean = goog.require('java.lang.Boolean');
let _Byte = goog.require('java.lang.Byte');
let _Character = goog.require('java.lang.Character');
let _Double = goog.require('java.lang.Double');
let _Float = goog.require('java.lang.Float');
let _Integer = goog.require('java.lang.Integer');
let _Long = goog.require('java.lang.Long');
let _Short = goog.require('java.lang.Short');
let _Void = goog.require('java.lang.Void');
let _$Equality = goog.require('nativebootstrap.Equality');
let _$Arrays = goog.require('vmbootstrap.Arrays');
let _$Asserts = goog.require('vmbootstrap.Asserts');
let _$Casts = goog.require('vmbootstrap.Casts');
let _$LongUtils = goog.require('vmbootstrap.LongUtils');
let _$Primitives = goog.require('vmbootstrap.Primitives');
let _$boolean = goog.require('vmbootstrap.primitives.$boolean');
let _$byte = goog.require('vmbootstrap.primitives.$byte');
let _$char = goog.require('vmbootstrap.primitives.$char');
let _$double = goog.require('vmbootstrap.primitives.$double');
let _$float = goog.require('vmbootstrap.primitives.$float');
let _$int = goog.require('vmbootstrap.primitives.$int');
let _$long = goog.require('vmbootstrap.primitives.$long');
let _$short = goog.require('vmbootstrap.primitives.$short');


// Re-exports the implementation.
var AutoBoxing = goog.require('com.google.j2cl.transpiler.readable.autoboxing.AutoBoxing$impl');
exports = AutoBoxing;
