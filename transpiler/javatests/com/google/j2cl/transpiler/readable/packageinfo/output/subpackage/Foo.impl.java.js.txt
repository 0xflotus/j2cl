/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.packageinfo.subpackage.Foo.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.packageinfo.subpackage.Foo$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Outer = goog.forwardDeclare('readable.packageinfo.Outer$impl');


class Foo extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {Outer} */
    this.f_outer__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo;
  }

  /**
   * Factory method corresponding to constructor 'Foo()'.
   * @return {!Foo}
   * @public
   */
  static $create__() {
    Foo.$clinit();
    let $instance = new Foo();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Foo()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo();
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Foo;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Foo);
  }

  /**
   * @public
   */
  static $clinit() {
    Foo.$clinit = function() {};
    Outer = goog.module.get('readable.packageinfo.Outer$impl');
    java_lang_Object.$clinit();
  }

  /**
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo() {
    this.f_outer__com_google_j2cl_transpiler_readable_packageinfo_subpackage_Foo =
        new Outer();
  }
};

$Util.$setClassMetadata(
    Foo,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.packageinfo.subpackage.Foo'));



exports = Foo;
//# sourceMappingURL=Foo.js.map