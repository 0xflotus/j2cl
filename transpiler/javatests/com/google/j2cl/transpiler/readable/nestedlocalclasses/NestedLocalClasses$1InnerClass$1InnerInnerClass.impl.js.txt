/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let NestedLocalClasses$1InnerClass = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class NestedLocalClasses$1InnerClass$1InnerInnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        0;
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {number}
     */
    this.$c_localVarInInnerClass = 0;
    /**
     * @public {NestedLocalClasses$1InnerClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass() {
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        this.$c_localVar + this.$c_localVarInInnerClass;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @param {NestedLocalClasses$1InnerClass} $outer_this
   * @return {!NestedLocalClasses$1InnerClass$1InnerInnerClass}
   * @public
   * @nocollapse
   */
  static $create__int__int__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass(
      $c_localVar, $c_localVarInInnerClass, $outer_this) {
    NestedLocalClasses$1InnerClass$1InnerInnerClass.$clinit();
    let instance = new NestedLocalClasses$1InnerClass$1InnerInnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass__int__int__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass(
            $c_localVar, $c_localVarInInnerClass, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @param {NestedLocalClasses$1InnerClass} $outer_this
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass__int__int__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass(
      $c_localVar, $c_localVarInInnerClass, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.$c_localVarInInnerClass = $c_localVarInInnerClass;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof NestedLocalClasses$1InnerClass$1InnerInnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, NestedLocalClasses$1InnerClass$1InnerInnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    NestedLocalClasses$1InnerClass$1InnerInnerClass.$clinit();
    if (!NestedLocalClasses$1InnerClass$1InnerInnerClass
             .$classNestedLocalClasses$1InnerClass$1InnerInnerClass_) {
      NestedLocalClasses$1InnerClass$1InnerInnerClass
          .$classNestedLocalClasses$1InnerClass$1InnerInnerClass_ = Class.$createForClass(
          $Util.$generateId('1InnerInnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses.1InnerClass.1InnerInnerClass'));
    }
    return NestedLocalClasses$1InnerClass$1InnerInnerClass
        .$classNestedLocalClasses$1InnerClass$1InnerInnerClass_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   * @nocollapse
   */
  static $clinit() {
    NestedLocalClasses$1InnerClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
NestedLocalClasses$1InnerClass$1InnerInnerClass
    .$classNestedLocalClasses$1InnerClass$1InnerInnerClass_ = null;



/**
 * Export class.
 */
exports = NestedLocalClasses$1InnerClass$1InnerInnerClass;
