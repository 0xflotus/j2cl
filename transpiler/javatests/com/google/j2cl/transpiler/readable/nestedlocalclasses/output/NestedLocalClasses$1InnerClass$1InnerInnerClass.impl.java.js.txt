/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses.$1InnerClass.$1InnerInnerClass$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1InnerClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses.$1InnerClass$impl');


class $1InnerInnerClass extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {$1InnerClass} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass =
        null;
    /** @public {number} */
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass =
        0;
    /** @public {number} */
    this.$c_localVar = 0;
    /** @public {number} */
    this.$c_localVarInInnerClass = 0;
  }

  /**
   * Factory method corresponding to constructor 'InnerInnerClass(InnerClass,
   * int, int)'.
   * @param {$1InnerClass} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @return {!$1InnerInnerClass}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass__int__int(
      $outer_this, $c_localVar, $c_localVarInInnerClass) {
    $1InnerInnerClass.$clinit();
    let $instance = new $1InnerInnerClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass__int__int(
            $outer_this, $c_localVar, $c_localVarInInnerClass);
    return $instance;
  }

  /**
   * Initialization from constructor 'InnerInnerClass(InnerClass, int, int)'.
   * @param {$1InnerClass} $outer_this
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass__int__int(
      $outer_this, $c_localVar, $c_localVarInInnerClass) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass =
        $outer_this;
    this.$c_localVar = $c_localVar;
    this.$c_localVarInInnerClass = $c_localVarInInnerClass;
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass();
  }

  /**
   * @return {void}
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass() {
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses_1InnerClass_1InnerInnerClass =
        this.$c_localVar + this.$c_localVarInInnerClass;
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $1InnerInnerClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $1InnerInnerClass);
  }

  /**
   * @public
   */
  static $clinit() {
    $1InnerInnerClass.$clinit = function() {};
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    $1InnerInnerClass,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass'));



exports = $1InnerInnerClass;
//# sourceMappingURL=NestedLocalClasses$1InnerClass$1InnerInnerClass.js.map