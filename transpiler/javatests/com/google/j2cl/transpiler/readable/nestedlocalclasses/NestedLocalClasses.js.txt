/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/nestedlocalclasses/NestedLocalClasses.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClassesModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $int = goog.require('vmbootstrap.PrimitivesModule').$int;


class NestedLocalClasses extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses() {
  }

  /**
   * @param {number} p
   * @return {void}
   * @public
   */
  m_test__int(p) { let localVar = 1; }

  /**
   * A particular Java constructor as a factory method.
   * @return {!NestedLocalClasses}
   * @public
   * @nocollapse
   */
  static $create() {
    NestedLocalClasses.$clinit();
    let instance = new NestedLocalClasses;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof NestedLocalClasses;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NestedLocalClasses);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!NestedLocalClasses.$classNestedLocalClasses) {
      NestedLocalClasses.$classNestedLocalClasses = Class.$createForClass(
          $Util.$generateId('NestedLocalClasses'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses'));
    }
    return NestedLocalClasses.$classNestedLocalClasses;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.NestedLocalClasses = NestedLocalClasses;



class NestedLocalClasses$1InnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {NestedLocalClasses}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass() {
  }

  /**
   * @return {void}
   * @public
   */
  m_fun() {
    let localVarInInnerClass = 1;
    NestedLocalClasses$1InnerClass$1InnerInnerClass.$create(
        this.$c_localVar, localVarInInnerClass, this);
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_localVar
   * @param {NestedLocalClasses} $outer_this
   * @return {!NestedLocalClasses$1InnerClass}
   * @package
   * @nocollapse
   */
  static $create($c_localVar, $outer_this) {
    NestedLocalClasses$1InnerClass.$clinit();
    let instance = new NestedLocalClasses$1InnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass(
            $c_localVar, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_localVar
   * @param {NestedLocalClasses} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass(
      $c_localVar, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof NestedLocalClasses$1InnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor,
                               NestedLocalClasses$1InnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!NestedLocalClasses$1InnerClass.$classNestedLocalClasses$1InnerClass) {
      NestedLocalClasses$1InnerClass
          .$classNestedLocalClasses$1InnerClass = Class.$createForClass(
          $Util.$generateId('1InnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses.1InnerClass'));
    }
    return NestedLocalClasses$1InnerClass.$classNestedLocalClasses$1InnerClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



class NestedLocalClasses$1InnerClass$1InnerInnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        0;
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {number}
     */
    this.$c_localVarInInnerClass = 0;
    /**
     * @public {NestedLocalClasses$1InnerClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass() {
    this.f_fieldInInnerInnerClass__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        this.$c_localVar + this.$c_localVarInInnerClass;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @param {NestedLocalClasses$1InnerClass} $outer_this
   * @return {!NestedLocalClasses$1InnerClass$1InnerInnerClass}
   * @package
   * @nocollapse
   */
  static $create($c_localVar, $c_localVarInInnerClass, $outer_this) {
    NestedLocalClasses$1InnerClass$1InnerInnerClass.$clinit();
    let instance = new NestedLocalClasses$1InnerClass$1InnerInnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass(
            $c_localVar, $c_localVarInInnerClass, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_localVar
   * @param {number} $c_localVarInInnerClass
   * @param {NestedLocalClasses$1InnerClass} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass(
      $c_localVar, $c_localVarInInnerClass, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.$c_localVarInInnerClass = $c_localVarInInnerClass;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nestedlocalclasses_NestedLocalClasses$1InnerClass$1InnerInnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof NestedLocalClasses$1InnerClass$1InnerInnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor,
                               NestedLocalClasses$1InnerClass$1InnerInnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!NestedLocalClasses$1InnerClass$1InnerInnerClass
             .$classNestedLocalClasses$1InnerClass$1InnerInnerClass) {
      NestedLocalClasses$1InnerClass$1InnerInnerClass
          .$classNestedLocalClasses$1InnerClass$1InnerInnerClass = Class.$createForClass(
          $Util.$generateId('1InnerInnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses$1InnerClass$1InnerInnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nestedlocalclasses.NestedLocalClasses.1InnerClass.1InnerInnerClass'));
    }
    return NestedLocalClasses$1InnerClass$1InnerInnerClass
        .$classNestedLocalClasses$1InnerClass$1InnerInnerClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;
