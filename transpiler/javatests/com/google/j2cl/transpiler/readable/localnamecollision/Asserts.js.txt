/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/localnamecollision/Asserts.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.localnamecollision.AssertsModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $Asserts = goog.require('vmbootstrap.AssertsModule').Asserts;


class Asserts extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localnamecollision_Asserts() {}

  /**
   * @return {number}
   * @package
   */
  m_n_$pp_com_google_j2cl_transpiler_readable_localnamecollision() {
    $Asserts.$enabled() && $Asserts.$assert(5 != 4);
    return 5;
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Asserts}
   * @public
   * @nocollapse
   */
  static $create() {
    Asserts.$clinit();
    let instance = new Asserts;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_localnamecollision_Asserts();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_localnamecollision_Asserts() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_localnamecollision_Asserts();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof Asserts; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Asserts);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
Asserts.$class = Class.$createForClass(
    $Util.$generateId('Asserts'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.localnamecollision.Asserts'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.localnamecollision.Asserts'));

/**
 * Export class.
 */
exports.Asserts = Asserts;
