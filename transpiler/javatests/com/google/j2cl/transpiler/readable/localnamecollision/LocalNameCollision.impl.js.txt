/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Asserts = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.localnamecollision.Asserts$impl');
let com_google_j2cl_transpiler_readable_localnamecollision_Class =
    goog.forwardDeclare(
        'gen.com.google.j2cl.transpiler.readable.localnamecollision.Class$impl');
let com_google_j2cl_transpiler_readable_localnamecollision_package1_A =
    goog.forwardDeclare(
        'gen.com.google.j2cl.transpiler.readable.localnamecollision.package1.A$impl');
let com_google_j2cl_transpiler_readable_localnamecollision_package2_A =
    goog.forwardDeclare(
        'gen.com.google.j2cl.transpiler.readable.localnamecollision.package2.A$impl');
let java_lang_Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');


class LocalNameCollision extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision() {
  }

  /**
   * @return {void}
   * @public
   */
  m_main() {
    com_google_j2cl_transpiler_readable_localnamecollision_package1_A.$create()
        .m_m();
    com_google_j2cl_transpiler_readable_localnamecollision_package2_A.$create()
        .m_m();
    Asserts.$create()
        .m_n_$pp_com_google_j2cl_transpiler_readable_localnamecollision();
    com_google_j2cl_transpiler_readable_localnamecollision_Class.$create()
        .m_main();
    $Asserts.$enabled() &&
        $Asserts.$assert(
            com_google_j2cl_transpiler_readable_localnamecollision_Class
                .$create() != null);
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LocalNameCollision}
   * @public
   * @nocollapse
   */
  static $create() {
    LocalNameCollision.$clinit();
    let instance = new LocalNameCollision;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LocalNameCollision;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LocalNameCollision);
  }

  /**
   * @return {java_lang_Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    LocalNameCollision.$clinit();
    if (!LocalNameCollision.$classLocalNameCollision) {
      LocalNameCollision
          .$classLocalNameCollision = java_lang_Class.$createForClass(
          $Util.$generateId('LocalNameCollision'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision'));
    }
    return LocalNameCollision.$classLocalNameCollision;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    Asserts = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.localnamecollision.Asserts$impl');
    com_google_j2cl_transpiler_readable_localnamecollision_Class = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.localnamecollision.Class$impl');
    com_google_j2cl_transpiler_readable_localnamecollision_package1_A =
        goog.module.get(
            'gen.com.google.j2cl.transpiler.readable.localnamecollision.package1.A$impl');
    com_google_j2cl_transpiler_readable_localnamecollision_package2_A =
        goog.module.get(
            'gen.com.google.j2cl.transpiler.readable.localnamecollision.package2.A$impl');
    java_lang_Class = goog.module.get('gen.java.lang.Class$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
    Object.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = LocalNameCollision;
