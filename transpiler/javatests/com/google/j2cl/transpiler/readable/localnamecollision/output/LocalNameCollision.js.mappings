[LocalNameCollision] => [LocalNameCollision]
[LocalNameCollision] => [constructor]
[LocalNameCollision] => [super();] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<synthetic: ctor_js>"
[testClassLocalVarCollision] => [m_testClassLocalVarCollision__]
[boolean LocalNameCollision = false;] => [let LocalNameCollision$1$ = false;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[LocalNameCollision] => [LocalNameCollision$1$] "LocalNameCollision"
[Object RuntimeException = null;] => [let RuntimeException$1$ = null;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[RuntimeException] => [RuntimeException$1$] "RuntimeException"
[int Asserts = 1;] => [let Asserts$1$ = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[Asserts] => [Asserts$1$] "Asserts"
[int $Asserts = 1;] => [let $Asserts$1$ = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[$Asserts] => [$Asserts$1$] "$Asserts"
[int l_Asserts = 1;] => [let l_Asserts = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[l_Asserts] => [l_Asserts] "l_Asserts"
[int com_google_j2cl_transpiler_readable_localnamecollision_Class = 1;] => [let com_google_j2cl_transpiler_readable_localnamecollision_Class = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[com_google_j2cl_transpiler_readable_localnamecollision_Class] => [com_google_j2cl_transpiler_readable_localnamecollision_Class] "com_google_j2cl_transpiler_readable_localnamecollision_Class"
[int com_google_j2cl_transpiler_readable_localnamecollision_package1_A = 1;] => [let com_google_j2cl_transpiler_readable_localnamecollision_package1_A = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[com_google_j2cl_transpiler_readable_localnamecollision_package1_A] => [com_google_j2cl_transpiler_readable_localnamecollision_package1_A] "com_google_j2cl_transpiler_readable_localnamecollision_package1_A"
[int com_google_j2cl_transpiler_readable_localnamecollision_package2_A = 1;] => [let com_google_j2cl_transpiler_readable_localnamecollision_package2_A = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[com_google_j2cl_transpiler_readable_localnamecollision_package2_A] => [com_google_j2cl_transpiler_readable_localnamecollision_package2_A] "com_google_j2cl_transpiler_readable_localnamecollision_package2_A"
[int A = 1;] => [let A$1$ = 1;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[A] => [A$1$] "A"
[LocalNameCollision =
        RuntimeException instanceof LocalNameCollision
...                instanceof com.google.j2cl.transpiler.readable.localnamecollision.package2.A
            || RuntimeException instanceof Class;] => [LocalNameCollision$1$ = LocalNameCollision.$isInstance(RuntimeException$1$) || RuntimeException.$isInstance(RuntimeException$1$) || A.$isInstance(RuntimeException$1$) || c_g_j2cl_transpiler_readable_localnamecollision_package2_A.$isInstance(RuntimeException$1$) || Class.$isInstance(RuntimeException$1$);] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[assert new Asserts().n() == 5;] => [$Asserts.$assert(Asserts.$create__().m_n___$pp_com_google_j2cl_transpiler_readable_localnamecollision() == 5);] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassLocalVarCollision"
[testClassParameterCollision] => [m_testClassParameterCollision__boolean__java_lang_Object__java_lang_Object__int__int]
[LocalNameCollision] => [LocalNameCollision$1$] "LocalNameCollision"
[Asserts] => [Asserts$1$] "Asserts"
[$Asserts] => [$Asserts$1$] "$Asserts"
[l_Asserts] => [l_Asserts] "l_Asserts"
[A] => [A$1$] "A"
[return LocalNameCollision
        && Asserts instanceof LocalNameCollision
        && $Asserts instanceof Asserts
        && (l_Asserts == A);] => [return LocalNameCollision$1$ && LocalNameCollision.$isInstance(Asserts$1$) && Asserts.$isInstance($Asserts$1$) && (l_Asserts == A$1$);] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.testClassParameterCollision"
[LocalNameCollision] => [$create__boolean__java_lang_Object__java_lang_Object__int__int]
[LocalNameCollision] => [LocalNameCollision$1$] "LocalNameCollision"
[Asserts] => [Asserts$1$] "Asserts"
[$Asserts] => [$Asserts$1$] "$Asserts"
[l_Asserts] => [l_Asserts] "l_Asserts"
[A] => [A$1$] "A"
[LocalNameCollision] => [LocalNameCollision.$clinit();] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<synthetic: ctor_create>"
[LocalNameCollision] => [let $instance = new LocalNameCollision();] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<synthetic: ctor_create>"
[LocalNameCollision] => [$instance.$ctor__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision__boolean__java_lang_Object__java_lang_Object__int__int(LocalNameCollision$1$, Asserts$1$, $Asserts$1$, l_Asserts, A$1$);] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<synthetic: ctor_create>"
[LocalNameCollision] => [return $instance;] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<synthetic: ctor_create>"
[LocalNameCollision] => [$ctor__com_google_j2cl_transpiler_readable_localnamecollision_LocalNameCollision__boolean__java_lang_Object__java_lang_Object__int__int]
[LocalNameCollision] => [LocalNameCollision$1$] "LocalNameCollision"
[Asserts] => [Asserts$1$] "Asserts"
[$Asserts] => [$Asserts$1$] "$Asserts"
[l_Asserts] => [l_Asserts] "l_Asserts"
[A] => [A$1$] "A"
[LocalNameCollision] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<init>"
[boolean result =
        LocalNameCollision
...            && $Asserts instanceof Asserts
            && (l_Asserts == A);] => [let result = LocalNameCollision$1$ && LocalNameCollision.$isInstance(Asserts$1$) && Asserts.$isInstance($Asserts$1$) && (l_Asserts == A$1$);] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<init>"
[result] => [result] "result"
[LocalNameCollision] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.localnamecollision.LocalNameCollision.<clinit>"
