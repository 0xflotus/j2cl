[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [/**
 * @extends {A<(Number|?number), ?string>}
...exports = B;
] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [/**
   * Defines instance fields.
...    super();
  }] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B"
[UNKNOWN] => [super();]
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [/**
   * A particular Java constructor as a factory method.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<ctor>"
[UNKNOWN] => [B.$clinit();]
[UNKNOWN] => [let $instance = new B();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_bridgemethodsreturn_B__();]
[UNKNOWN] => [return $instance;]
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [/**
   * Initializes instance fields for a particular Java constructor.
...    this.$init__com_google_j2cl_transpiler_readable_bridgemethodsreturn_B();
  }] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<ctor>"
[UNKNOWN] => [this.$ctor__com_google_j2cl_transpiler_readable_bridgemethodsreturn_A__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_bridgemethodsreturn_B();]
[public Integer fun(String s) {
    return new Integer(1);
  }] => [/**
   * @param {?string} s
...    return Integer.$create__int(1);
  }] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.fun"
[s] => [s] "s"
[return new Integer(1);] => [return Integer.$create__int(1);]
[UNKNOWN] => [/**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {Integer}
   * @public
   */
  m_fun__java_lang_Object(arg0) {
    return this.m_fun__java_lang_String(/**@type {?string} */ ($Casts.to(arg0, java_lang_String)));
  }]
[UNKNOWN] => [return this.m_fun__java_lang_String(/**@type {?string} */ ($Casts.to(arg0, java_lang_String)));]
[UNKNOWN] => [A.$clinit();]
