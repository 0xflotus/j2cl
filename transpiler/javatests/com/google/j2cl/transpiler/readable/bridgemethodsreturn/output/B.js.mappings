[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [super();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<synthetic: ctor_js>"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [B.$clinit();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<synthetic: ctor_create>"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [let $instance = new B();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<synthetic: ctor_create>"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_bridgemethodsreturn_B__();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<synthetic: ctor_create>"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<synthetic: ctor_create>"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [this.$ctor__com_google_j2cl_transpiler_readable_bridgemethodsreturn_A__();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<init>"
[s] => [s] "s"
[return new Integer(1);] => [return Integer.$create__int(1);] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.fun"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [return this.m_fun__java_lang_String(/**@type {?string} */ ($Casts.$to(arg0, j_l_String)));] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.fun"
[public class B extends A<Number, String> implements I<Integer, String> {
  // bridge method for A.fun(String):Number and I.fun(String):Integer should both delegate
...  }
}] => [A.$clinit();] "com.google.j2cl.transpiler.readable.bridgemethodsreturn.B.<clinit>"
