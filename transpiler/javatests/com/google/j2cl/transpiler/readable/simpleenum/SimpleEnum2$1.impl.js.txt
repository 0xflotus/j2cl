/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum2$1.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum2$1$impl');


let SimpleEnum2 = goog.require('gen.com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum2$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class SimpleEnum2$1 extends SimpleEnum2 {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum2$1() {}

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $_0
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {!SimpleEnum2$1}
   * @public
   */
  static $create__int__java_lang_String__int($_0, $name, $ordinal) {
    SimpleEnum2$1.$clinit();
    let instance = new SimpleEnum2$1;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum2$1__int__java_lang_String__int(
            $_0, $name, $ordinal);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $_0
   * @param {?string} $name
   * @param {number} $ordinal
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum2$1__int__java_lang_String__int(
      $_0, $name, $ordinal) {
    this.$ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum2__int__java_lang_String__int(
        $_0, $name, $ordinal);
    this.$init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum2$1();
  }

  /**
   * Synthetic method.
   * @param {SimpleEnum2} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return this.m_compareTo__java_lang_Enum(
        /**@type {SimpleEnum2} */ ($Casts.to(arg0, SimpleEnum2)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof SimpleEnum2$1; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleEnum2$1);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    SimpleEnum2$1.$clinit();
    if (!SimpleEnum2$1.$classSimpleEnum2$1_) {
      SimpleEnum2$1.$classSimpleEnum2$1_ = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum2$1'),
          SimpleEnum2.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum2.1'));
    }
    return SimpleEnum2$1.$classSimpleEnum2$1_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return SimpleEnum2$1.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    SimpleEnum2.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
SimpleEnum2$1.$classSimpleEnum2$1_ = null;



/**
 * Export class.
 */
exports = SimpleEnum2$1;
