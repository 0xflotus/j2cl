/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum$impl');


let Enum = goog.require('gen.java.lang.Enum$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Object = goog.forwardDeclare('gen.java.lang.Object$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $Enums = goog.forwardDeclare('vmbootstrap.Enums$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @extends {Enum<SimpleEnum>}
 */
class SimpleEnum extends Enum {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum() {}

  /**
   * A particular Java constructor as a factory method.
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {!SimpleEnum}
   * @public
   * @nocollapse
   */
  static $create__java_lang_String__int($name, $ordinal) {
    SimpleEnum.$clinit();
    let instance = new SimpleEnum;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum__java_lang_String__int(
            $name, $ordinal);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {?string} $name
   * @param {number} $ordinal
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum__java_lang_String__int(
      $name, $ordinal) {
    this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);
    this.$init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum();
  }

  /**
   * Synthetic method.
   * @param {SimpleEnum} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return this.m_compareTo__java_lang_Enum(
        /**@type {SimpleEnum} */ ($Casts.to(arg0, SimpleEnum)));
  }

  /**
   * @param {?string} name
   * @return {SimpleEnum}
   * @public
   * @nocollapse
   */
  static m_valueOf__java_lang_String(name) {
    SimpleEnum.$clinit();
    if (SimpleEnum
            .f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ ==
        null) {
      SimpleEnum
          .f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
          $Enums.createMapFromValues(SimpleEnum.m_values());
    }
    return $Enums.getValueFromNameAndMap(
        name,
        SimpleEnum
            .f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_);
  }

  /**
   * @return {Array<SimpleEnum>}
   * @public
   * @nocollapse
   */
  static m_values() {
    SimpleEnum.$clinit();
    return /**@type {Array<SimpleEnum>} */ (
        $Arrays.$init(
            [
              SimpleEnum
                  .f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum,
              SimpleEnum
                  .f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum
            ],
            SimpleEnum));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SimpleEnum; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleEnum);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    SimpleEnum.$clinit();
    if (!SimpleEnum.$classSimpleEnum_) {
      SimpleEnum.$classSimpleEnum_ = Class.$createForEnum(
          $Util.$generateId('SimpleEnum'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum'),
          Enum.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum'),
          // TODO(rluble): emit here the enum values
          null);
    }
    return SimpleEnum.$classSimpleEnum_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   * @nocollapse
   */
  static $clinit() {
    SimpleEnum.$clinit = function() {};
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object = goog.module.get('gen.java.lang.Object$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $Enums = goog.module.get('vmbootstrap.Enums$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Enum.$clinit();
    SimpleEnum.f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
        SimpleEnum.$create__java_lang_String__int("V1", 0);
    SimpleEnum.f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
        SimpleEnum.$create__java_lang_String__int("V2", 1);
    SimpleEnum
        .f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
        null;
  }
}
;


/**
 * @public {SimpleEnum}
 */
SimpleEnum.f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
    null;


/**
 * @public {SimpleEnum}
 */
SimpleEnum.f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
    null;


/**
 * @public {*}
 */
SimpleEnum
    .f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
    null;


/**
 * The class literal field.
 * @private {Class}
 */
SimpleEnum.$classSimpleEnum_ = null;



/**
 * Export class.
 */
exports = SimpleEnum;
