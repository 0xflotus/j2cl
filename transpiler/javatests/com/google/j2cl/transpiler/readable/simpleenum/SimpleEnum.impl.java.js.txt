/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum$impl');


const Enum = goog.require('java.lang.Enum$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_Object = goog.forwardDeclare('java.lang.Object$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $Enums = goog.forwardDeclare('vmbootstrap.Enums$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @extends {Enum<SimpleEnum>}
 */
class SimpleEnum extends Enum {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'SimpleEnum(String, int)'.
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {!SimpleEnum}
   * @public
   */
  static $create__java_lang_String__int($name, $ordinal) {
    SimpleEnum.$clinit();
    let $instance = new SimpleEnum();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum__java_lang_String__int(
            $name, $ordinal);
    return $instance;
  }

  /**
   * Initialization from constructor 'SimpleEnum(String, int)'.
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum__java_lang_String__int(
      $name, $ordinal) {
    this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);
    this.$init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum();
  }

  /**
   * @param {?string} name
   * @return {SimpleEnum}
   * @public
   */
  static m_valueOf__java_lang_String(name) {
    SimpleEnum.$clinit();
    if ($Equality.$same(
            SimpleEnum
                .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_,
            null)) {
      SimpleEnum
          .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
          /**@type {Object<?string, !SimpleEnum>} */ (
              $Enums.createMapFromValues(SimpleEnum.m_values__()));
    }
    return $Enums.getValueFromNameAndMap(
        name,
        SimpleEnum
            .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_);
  }

  /**
   * @return {Array<SimpleEnum>}
   * @public
   */
  static m_values__() {
    SimpleEnum.$clinit();
    return /**@type {!Array<SimpleEnum>} */ ($Arrays.$init(
        [
          SimpleEnum
              .$f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum,
          SimpleEnum
              .$f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum
        ],
        SimpleEnum));
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return super.compareTo(
        /**@type {SimpleEnum} */ ($Casts.to(arg0, SimpleEnum)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SimpleEnum;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleEnum);
  }

  /**
   * A static field getter.
   * @return {!SimpleEnum}
   * @public
   */
  static get f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum() {
    return (
        SimpleEnum.$clinit(),
        SimpleEnum
            .$f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum);
  }

  /**
   * A static field setter.
   * @param {!SimpleEnum} value
   * @return {void}
   * @public
   */
  static set f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum(
      value) {
    (SimpleEnum.$clinit(),
     SimpleEnum
         .$f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
         value);
  }

  /**
   * A static field getter.
   * @return {!SimpleEnum}
   * @public
   */
  static get f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum() {
    return (
        SimpleEnum.$clinit(),
        SimpleEnum
            .$f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum);
  }

  /**
   * A static field setter.
   * @param {!SimpleEnum} value
   * @return {void}
   * @public
   */
  static set f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum(
      value) {
    (SimpleEnum.$clinit(),
     SimpleEnum
         .$f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
         value);
  }

  /**
   * A static field getter.
   * @return {Object<?string, !SimpleEnum>}
   * @public
   */
  static get
  f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_() {
    return (
        SimpleEnum.$clinit(),
        SimpleEnum
            .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_);
  }

  /**
   * A static field setter.
   * @param {Object<?string, !SimpleEnum>} value
   * @return {void}
   * @public
   */
  static set
  f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_(
      value) {
    (SimpleEnum.$clinit(),
     SimpleEnum
         .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
         value);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SimpleEnum.$clinit = function() {};
    java_lang_Object = goog.module.get('java.lang.Object$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $Enums = goog.module.get('vmbootstrap.Enums$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Enum.$clinit();
    SimpleEnum
        .$f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
        SimpleEnum.$create__java_lang_String__int($Util.$makeEnumName('V1'), 0);
    SimpleEnum
        .$f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
        SimpleEnum.$create__java_lang_String__int($Util.$makeEnumName('V2'), 1);
    SimpleEnum
        .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum() {}
};

$Util.$setClassMetadataForEnum(
    SimpleEnum,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.simpleenum.SimpleEnum'));


/**
 * @private {!SimpleEnum}
 */
SimpleEnum.$f_V1__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
    null;


/**
 * @private {!SimpleEnum}
 */
SimpleEnum.$f_V2__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum =
    null;


/**
 * @private {Object<?string, !SimpleEnum>}
 */
SimpleEnum
    .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_simpleenum_SimpleEnum_ =
    null;



/**
 * Export class.
 */
exports = SimpleEnum;
//# sourceMappingURL=SimpleEnum.js.map