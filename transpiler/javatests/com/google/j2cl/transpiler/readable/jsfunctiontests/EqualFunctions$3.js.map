[UNKNOWN] => [super();]
[UNKNOWN] => [EqualFunctions$3.$clinit();]
[UNKNOWN] => [let $instance = new EqualFunctions$3();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions$3();]
[UNKNOWN] => [return $Util.$makeLambdaFunction($Util.$getPrototype(EqualFunctions$3).m_equal__java_lang_Object__java_lang_Object, $instance, EqualFunctions$3.$copy);]
[UNKNOWN] => [this.$ctor__java_lang_Object();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions$3();]
[UNKNOWN] => [return EqualFunctions$3.m_equal__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions$3__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions$Foo__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions$Foo(this, /**@type {EqualFunctions$Foo<*>} */ ($Casts.to(arg0, EqualFunctions$Foo)), /**@type {EqualFunctions$Foo<*>} */ ($Casts.to(arg1, EqualFunctions$Foo)));]
[UNKNOWN] => [EqualFunctions$3.$clinit();]
[return first == second;] => [return $Equality.$same(first, second);]
