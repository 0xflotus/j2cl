[public class EqualFunctions {
  private EqualFunctions() {}
...  }
}] => [class EqualFunctions extends java_lang_Object {
  /**
...exports = EqualFunctions;
] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions"
[public class EqualFunctions {
  private EqualFunctions() {}
...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions"
[UNKNOWN] => [super();]
[private EqualFunctions() {}] => [/**
   * Factory method corresponding to constructor 'EqualFunctions()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.<ctor>"
[UNKNOWN] => [EqualFunctions.$clinit();]
[UNKNOWN] => [let $instance = new EqualFunctions();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions__();]
[UNKNOWN] => [return $instance;]
[private EqualFunctions() {}] => [/**
   * Initialization from constructor 'EqualFunctions()'.
...    this.$init__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions();
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions();]
[@SuppressWarnings("unchecked")
  public static final <T> EqualFunction<T> objectEqualFunction() {
    return (EqualFunction<T>) forObject;
  }] => [/**
   * @template M_T
...    return /**@type {?function(*, *):boolean} */ ($Casts.$to(EqualFunctions.$f_forObject__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions, EqualFunction));
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.objectEqualFunction"
[UNKNOWN] => [EqualFunctions.$clinit();]
[return (EqualFunction<T>) forObject;] => [return /**@type {?function(*, *):boolean} */ ($Casts.$to(EqualFunctions.$f_forObject__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions, EqualFunction));]
[@SuppressWarnings("unchecked")
  public static final <T> EqualFunction<T> collectionEqualFunction() {
    return (EqualFunction<T>) forCollection;
  }] => [/**
   * @template M_T
...    return /**@type {?function(*, *):boolean} */ ($Casts.$to(EqualFunctions.$f_forCollection__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions, EqualFunction));
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.collectionEqualFunction"
[UNKNOWN] => [EqualFunctions.$clinit();]
[return (EqualFunction<T>) forCollection;] => [return /**@type {?function(*, *):boolean} */ ($Casts.$to(EqualFunctions.$f_forCollection__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions, EqualFunction));]
[/**
   * Returns a equals function that can handle array equal logic in addition to the custom equal
...    };
  }] => [/**
   * @template M_T
...    });
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.withCollection"
[customFunction] => [customFunction] "customFunction"
[UNKNOWN] => [EqualFunctions.$clinit();]
[return new EqualFunction<T>() {
      @Override
      public boolean equal(T objA, T objB) {
        return true;
      }
    };] => [return ((/** * */ objA, /** * */ objB) =>{
      return true;
    });]
[objA] => [objA] "objA"
[objB] => [objB] "objB"
[return true;] => [return true;]
[public static <T> EqualFunction<Foo<T>> createEqualFn(final EqualFunction<T> equalFn) {
    return new EqualFunction<Foo<T>>() {
...    };
  }] => [/**
   * @template M_T
...    });
  }] "com.google.j2cl.transpiler.readable.jsfunctiontests.EqualFunctions.createEqualFn"
[equalFn] => [equalFn] "equalFn"
[UNKNOWN] => [EqualFunctions.$clinit();]
[return new EqualFunction<Foo<T>>() {
      @Override
      public boolean equal(Foo<T> first, Foo<T> second) {
        return first == second;
      }
    };] => [return ((/** Foo<*> */ first, /** Foo<*> */ second) =>{
      return $Equality.$same(first, second);
    });]
[first] => [first] "first"
[second] => [second] "second"
[return first == second;] => [return $Equality.$same(first, second);]
[UNKNOWN] => [java_lang_Object.$clinit();]
[public static EqualFunction<Object> forObject =
      new EqualFunction<Object>() {
        @Override
        public boolean equal(Object first, Object second) {
          return first == second;
        }
      };] => [EqualFunctions.$f_forObject__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions = ((/** * */ first, /** * */ second) =>{
      return $Equality.$same(first, second);
    });]
[first] => [first] "first"
[second] => [second] "second"
[return first == second;] => [return $Equality.$same(first, second);]
[public static final EqualFunction<Integer> forInteger = objectEqualFunction();] => [EqualFunctions.$f_forInteger__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions = /**@type {?function(Integer, Integer):boolean} */ (EqualFunctions.m_objectEqualFunction__());]
[/**
   * Equal function handling array equal logic in addition to object equal.
   */
  public static EqualFunction<Object> forCollection = withCollection(forObject);] => [EqualFunctions.$f_forCollection__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions = /**@type {?function(*, *):boolean} */ (EqualFunctions.m_withCollection__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunction(EqualFunctions.$f_forObject__com_google_j2cl_transpiler_readable_jsfunctiontests_EqualFunctions));]
