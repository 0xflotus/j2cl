/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jsoptional.Main$AFunction.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.jsoptional.Main.AFunction$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');


class AFunction extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'AFunction()'.
   * @return {function(?string=, ...*):*}
   * @public
   */
  static $create__() {
    AFunction.$clinit();
    let $instance = new AFunction();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_AFunction__();
    return $Util.$makeLambdaFunction(
        AFunction.prototype.m_f1__java_lang_String__arrayOf_java_lang_Object,
        $instance, AFunction.$copy);
  }

  /**
   * Initialization from constructor 'AFunction()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsoptional_Main_AFunction__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @this {?function(?string=, ...*):*}
   * @param {?string=} i
   * @param {...*} args
   * @return {*}
   * @public
   */
  m_f1__java_lang_String__arrayOf_java_lang_Object(i, ...args) {
    return args[0];
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$is__com_google_j2cl_transpiler_readable_jsoptional_Main_AFunction;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AFunction);
  }

  /**
   * @param {AFunction} from
   * @param {*} to
   * @public
   */
  static $copy(from, to) {
    // Marks the object is an instance of this class.
    to.$is__com_google_j2cl_transpiler_readable_jsoptional_Main_AFunction =
        true;
  }

  /**
   * @public
   */
  static $clinit() {
    AFunction.$clinit = function() {};
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    AFunction,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jsoptional.Main$AFunction'));


$JavaScriptFunction.$markImplementor(AFunction);


exports = AFunction;
//# sourceMappingURL=Main$AFunction.js.map