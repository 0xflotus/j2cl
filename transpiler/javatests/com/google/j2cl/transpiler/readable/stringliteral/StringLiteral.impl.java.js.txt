/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.stringliteral.StringLiteral.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.stringliteral.StringLiteral$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let String = goog.forwardDeclare('java.lang.String$impl');


class StringLiteral extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {?string} */
    this.f_someString__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        null;
    /** @public {?string} */
    this.f_nonBmpChar__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        null;
    /** @public {?string} */
    this.f_wideColon__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!StringLiteral}
   * @public
   */
  static $create__() {
    StringLiteral.$clinit();
    let $instance = new StringLiteral();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof StringLiteral; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, StringLiteral);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    String = goog.module.get('java.lang.String$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral() {
    this.f_someString__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        'This is a string literal';
    this.f_nonBmpChar__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        'êçÜ';
    this.f_wideColon__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
        'Ôºö';
  }
};

$Util.$setClassMetadata(
    StringLiteral,
    'com.google.j2cl.transpiler.readable.stringliteral.StringLiteral');


/**
 * @public {?string}
 * @const
 */
StringLiteral
    .f_ESCAPE_CODES__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
    '\b\f\n\r\t"\'\\\u0000\u007F\uD800\uDF46\uFF1A';


/**
 * @public {?string}
 * @const
 */
StringLiteral
    .f_ESCAPE_CODES_COPY__com_google_j2cl_transpiler_readable_stringliteral_StringLiteral_ =
    '\b\f\n\r\t"\'\\\u0000\u007F\uD800\uDF46\uFF1A';



/**
 * Export class.
 */
exports = StringLiteral;
//# sourceMappingURL=StringLiteral.js.map