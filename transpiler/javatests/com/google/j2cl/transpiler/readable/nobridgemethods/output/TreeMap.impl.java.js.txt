/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire,
 * suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables,
 * uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap$impl');


const Map = goog.require('com.google.j2cl.transpiler.readable.nobridgemethods.Map$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InnerEntry = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap.InnerEntry$impl');


/**
 * @template C_K
 * @extends {Map<C_K>}
 */
class TreeMap extends Map {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'TreeMap()'.
   * @template C_K
   * @return {!TreeMap<C_K>}
   * @public
   */
  static $create__() {
    TreeMap.$clinit();
    let $instance = new TreeMap();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_TreeMap__();
    return $instance;
  }

  /**
   * Initialization from constructor 'TreeMap()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nobridgemethods_TreeMap__() {
    this.$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_Map__();
  }

  /**
   * @override
   * @param {C_K} key
   * @return {InnerEntry<C_K>}
   * @public
   */
  m_getCeilingEntry__java_lang_Object(key) {
    return /**@type {!InnerEntry<C_K>} */ (InnerEntry.$create__());
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    TreeMap.$clinit = (() => {});
    TreeMap.$loadModules();
    Map.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TreeMap;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TreeMap);
  }

  /**
   * @private
   */
  static $loadModules() {
    InnerEntry = goog.module.get(
        'com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap.InnerEntry$impl');
  }
};

$Util.$setClassMetadata(
    TreeMap,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap'));



exports = TreeMap;
//# sourceMappingURL=TreeMap.js.map