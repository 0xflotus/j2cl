/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.nobridgemethods.Map.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.nobridgemethods.Map$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Entry = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.nobridgemethods.Entry$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


/**
 * Abstract class, do not instantiate.
 * @template C_K
 */
class Map extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nobridgemethods_Map() {}

  /**
   * A particular Java constructor as a factory method.
   * @template C_K
   * @return {!Map<C_K>}
   * @public
   * @nocollapse
   */
  static $create() {
    Map.$clinit();
    let instance = new Map;
    instance.$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_Map();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_nobridgemethods_Map() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nobridgemethods_Map();
  }

  /**
   * Abstract method.
   * @param {C_K} key
   * @return {Entry<C_K>}
   * @public
   */
  m_getCeilingEntry__java_lang_Object(key) {}

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof Map; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Map);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    Map.$clinit();
    if (!Map.$classMap_) {
      Map.$classMap_ = Class.$createForClass(
          $Util.$generateId('Map'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nobridgemethods.Map'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nobridgemethods.Map'));
    }
    return Map.$classMap_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return Map.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   * @nocollapse
   */
  static $clinit() {
    Entry = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.nobridgemethods.Entry$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
Map.$classMap_ = null;



/**
 * Export class.
 */
exports = Map;
