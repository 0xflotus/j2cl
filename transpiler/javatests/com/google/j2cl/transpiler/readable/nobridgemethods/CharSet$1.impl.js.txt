/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$1.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$1$impl');


let TreeMap = goog.require('gen.com.google.j2cl.transpiler.readable.nobridgemethods.TreeMap$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let CharSet = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');


/**
 * @extends {TreeMap<?string>}
 */
class CharSet$1 extends TreeMap {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet$1() {}

  /**
   * A particular Java constructor as a factory method.
   * @return {!CharSet$1}
   * @public
   * @nocollapse
   */
  static $create() {
    CharSet$1.$clinit();
    let instance = new CharSet$1;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet$1();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet$1() {
    this.$ctor__com_google_j2cl_transpiler_readable_nobridgemethods_TreeMap();
    this.$init__com_google_j2cl_transpiler_readable_nobridgemethods_CharSet$1();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof CharSet$1; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CharSet$1);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    CharSet$1.$clinit();
    if (!CharSet$1.$classCharSet$1_) {
      CharSet$1.$classCharSet$1_ = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$1'),
          TreeMap.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.nobridgemethods.CharSet.1'));
    }
    return CharSet$1.$classCharSet$1_;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    CharSet = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.nobridgemethods.CharSet$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    TreeMap.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
CharSet$1.$classCharSet$1_ = null;



/**
 * Export class.
 */
exports = CharSet$1;
