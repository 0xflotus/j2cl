/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.lambdawithgenericsanddefaults.Function$1apply.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdawithgenericsanddefaults.Function$1apply$impl');


let Function = goog.require('com.google.j2cl.transpiler.readable.lambdawithgenericsanddefaults.Function$impl');
let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');


/**
 * @template M_T
 * @implements {Function<M_T, M_T>}
 */
class Function$1apply extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @template M_T
   * @return {!Function$1apply<M_T>}
   * @public
   */
  static $create() {
    Function$1apply.$clinit();
    let $instance = new Function$1apply();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdawithgenericsanddefaults_Function$1apply();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdawithgenericsanddefaults_Function$1apply() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdawithgenericsanddefaults_Function$1apply();
  }

  /**
   * @param {M_T} t
   * @return {M_T}
   * @public
   */
  lambda1apply(t) { return t; }

  /**
   * @override
   * @param {*} arg0
   * @return {M_T}
   * @public
   */
  m_apply__java_lang_Object(arg0) { return this.lambda1apply(arg0); }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Function$1apply; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Function$1apply);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdawithgenericsanddefaults_Function$1apply() {
  }
};

$Util.$setClassMetadata(
    Function$1apply,
    'com.google.j2cl.transpiler.readable.lambdawithgenericsanddefaults.Function$1apply');


Function.$markImplementor(Function$1apply);


/**
 * Export class.
 */
exports = Function$1apply;
//# sourceMappingURL=Function$1apply.js.map