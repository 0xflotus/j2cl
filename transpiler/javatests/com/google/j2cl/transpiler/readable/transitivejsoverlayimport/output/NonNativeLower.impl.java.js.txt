/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.transitivejsoverlayimport.NonNativeLower.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.transitivejsoverlayimport.NonNativeLower$impl');


const NonNativeUpper = goog.require('com.google.j2cl.transpiler.readable.transitivejsoverlayimport.NonNativeUpper$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class NonNativeLower extends NonNativeUpper {
  /**
   * JsConstructor 'NonNativeLower()'.
   * @public
   */
  constructor() {
    NonNativeLower.$clinit();
    super();
    this.$ctor__com_google_j2cl_transpiler_readable_transitivejsoverlayimport_NonNativeLower__();
  }

  /**
   * Initialization from constructor 'NonNativeLower()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_transitivejsoverlayimport_NonNativeLower__() {
  }

  /**
   * @return {void}
   * @public
   */
  m_doNonNativeLowerInstanceMethod___$pp_com_google_j2cl_transpiler_readable_transitivejsoverlayimport() {
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof NonNativeLower;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NonNativeLower);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    NonNativeLower.$clinit = function() {};
    NonNativeUpper.$clinit();
  }
};

$Util.$setClassMetadata(
    NonNativeLower,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.transitivejsoverlayimport.NonNativeLower'));



/**
 * Export class.
 */
exports = NonNativeLower;
//# sourceMappingURL=NonNativeLower.js.map