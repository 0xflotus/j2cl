/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.packageinfosubpackage.Foo.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('woo.Foo$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Foo$NativeBar = goog.forwardDeclare('com.google.j2cl.transpiler.readable.packageinfosubpackage.subpackage.Bar');


class Foo extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {Foo$NativeBar} */
    this.f_nativeBar__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo_ =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Foo}
   * @public
   */
  static $create__() {
    Foo.$clinit();
    let $instance = new Foo();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Foo; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Foo);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Foo$NativeBar = goog.module.get(
        'com.google.j2cl.transpiler.readable.packageinfosubpackage.subpackage.Bar');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo() {
    this.f_nativeBar__com_google_j2cl_transpiler_readable_packageinfosubpackage_Foo_ =
        new Foo$NativeBar();
  }
};

$Util.$setClassMetadata(
    Foo, 'com.google.j2cl.transpiler.readable.packageinfosubpackage.Foo');



/**
 * Export class.
 */
exports = Foo;
//# sourceMappingURL=Foo.js.map