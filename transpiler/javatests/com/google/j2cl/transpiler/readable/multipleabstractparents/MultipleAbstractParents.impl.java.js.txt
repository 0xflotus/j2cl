/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let ArrayList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
let IStringList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');
let StringList = goog.forwardDeclare('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.StringList$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class MultipleAbstractParents extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!MultipleAbstractParents}
   * @public
   */
  static $create__() {
    MultipleAbstractParents.$clinit();
    let $instance = new MultipleAbstractParents();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents();
  }

  /**
   * @param {Array<?string>} args
   * @return {void}
   * @public
   */
  static m_main__arrayOf_java_lang_String(args) {
    MultipleAbstractParents.$clinit();
    $Asserts.$enabled() &&
        $Asserts.$assert(
            java_lang_String.m_equals__java_lang_String__java_lang_Object(
                /**@type {!ArrayList<?string>} */ (ArrayList.$create__())
                    .m_getFoo__java_lang_Object(null),
                'AbstractCollection'));
    $Asserts.$enabled() &&
        $Asserts.$assert(
            java_lang_String.m_equals__java_lang_String__java_lang_Object(
                StringList.$create__().m_getFoo__java_lang_Object(null),
                'AbstractCollection'));
    $Asserts.$enabled() &&
        $Asserts.$assert(
            java_lang_String.m_equals__java_lang_String__java_lang_Object(
                (/**@type {IStringList} */ (
                     $Casts.to(StringList.$create__(), IStringList)))
                    .m_getFoo__java_lang_String(null),
                'AbstractCollection'));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MultipleAbstractParents;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, MultipleAbstractParents);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    MultipleAbstractParents.$clinit = function() {};
    ArrayList = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.ArrayList$impl');
    IStringList = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.IStringList$impl');
    StringList = goog.module.get(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.StringList$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents() {
  }
};

$Util.$setClassMetadata(
    MultipleAbstractParents,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents'));



/**
 * Export class.
 */
exports = MultipleAbstractParents;
//# sourceMappingURL=MultipleAbstractParents.js.map