/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$AbstractStringList3.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractStringList3$impl');


const AbstractList2 = goog.require('com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents.AbstractList2$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @abstract
 * @extends {AbstractList2<?string>}
 */
class AbstractStringList3 extends AbstractList2 {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Initialization from constructor 'AbstractStringList3()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractStringList3__() {
    this.$ctor__com_google_j2cl_transpiler_readable_multipleabstractparents_MultipleAbstractParents_AbstractList2__();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AbstractStringList3;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AbstractStringList3);
  }

  /**
   * @public
   */
  static $clinit() {
    AbstractStringList3.$clinit = function() {};
    AbstractList2.$clinit();
  }
};

$Util.$setClassMetadata(
    AbstractStringList3,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.multipleabstractparents.MultipleAbstractParents$AbstractStringList3'));



exports = AbstractStringList3;
//# sourceMappingURL=MultipleAbstractParents$AbstractStringList3.js.map