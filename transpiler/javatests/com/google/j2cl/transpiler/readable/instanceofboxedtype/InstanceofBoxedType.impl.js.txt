/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.instanceofboxedtype.InstanceofBoxedType.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.instanceofboxedtype.InstanceofBoxedType$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Boolean = goog.forwardDeclare('gen.java.lang.Boolean$impl');
let Byte = goog.forwardDeclare('gen.java.lang.Byte$impl');
let Character = goog.forwardDeclare('gen.java.lang.Character$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Double = goog.forwardDeclare('gen.java.lang.Double$impl');
let Float = goog.forwardDeclare('gen.java.lang.Float$impl');
let Integer = goog.forwardDeclare('gen.java.lang.Integer$impl');
let Long = goog.forwardDeclare('gen.java.lang.Long$impl');
let Number = goog.forwardDeclare('gen.java.lang.Number$impl');
let Short = goog.forwardDeclare('gen.java.lang.Short$impl');
let $boolean = goog.forwardDeclare('vmbootstrap.primitives.$boolean$impl');


class InstanceofBoxedType extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!InstanceofBoxedType}
   * @public
   */
  static $create() {
    InstanceofBoxedType.$clinit();
    let $instance = new InstanceofBoxedType;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_instanceofboxedtype_InstanceofBoxedType();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_instanceofboxedtype_InstanceofBoxedType() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_instanceofboxedtype_InstanceofBoxedType();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let b = Integer.$create__int(1);
    let a = Byte.$isInstance(b);
    a = Double.$isInstance(b);
    a = Float.$isInstance(b);
    a = Integer.$isInstance(b);
    a = Long.$isInstance(b);
    a = Short.$isInstance(b);
    a = Number.$isInstance(b);
    a = Character.$isInstance(b);
    a = Boolean.$isInstance(b);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InstanceofBoxedType;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InstanceofBoxedType);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    InstanceofBoxedType.$clinit();
    if (!InstanceofBoxedType.$classInstanceofBoxedType_) {
      InstanceofBoxedType.$classInstanceofBoxedType_ = Class.$createForClass(
          $Util.$generateId('InstanceofBoxedType'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.instanceofboxedtype.InstanceofBoxedType'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.instanceofboxedtype.InstanceofBoxedType'));
    }
    return InstanceofBoxedType.$classInstanceofBoxedType_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return InstanceofBoxedType.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Boolean = goog.module.get('gen.java.lang.Boolean$impl');
    Byte = goog.module.get('gen.java.lang.Byte$impl');
    Character = goog.module.get('gen.java.lang.Character$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Double = goog.module.get('gen.java.lang.Double$impl');
    Float = goog.module.get('gen.java.lang.Float$impl');
    Integer = goog.module.get('gen.java.lang.Integer$impl');
    Long = goog.module.get('gen.java.lang.Long$impl');
    Number = goog.module.get('gen.java.lang.Number$impl');
    Short = goog.module.get('gen.java.lang.Short$impl');
    $boolean = goog.module.get('vmbootstrap.primitives.$boolean$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_instanceofboxedtype_InstanceofBoxedType() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
InstanceofBoxedType.$classInstanceofBoxedType_ = null;



/**
 * Export class.
 */
exports = InstanceofBoxedType;
//# sourceMappingURL=InstanceofBoxedType.js.map