/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let InnerClassWithConstructor$InnerClass = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor$InnerClass$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class InnerClassWithConstructor extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.f_a__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor =
        0;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!InnerClassWithConstructor}
   * @public
   */
  static $create() {
    InnerClassWithConstructor.$clinit();
    let instance = new InnerClassWithConstructor;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor();
  }

  /**
   * @param {number} b
   * @return {InnerClassWithConstructor$InnerClass}
   * @public
   */
  m_$create_InnerClassWithConstructor$InnerClass__int(b) {
    return InnerClassWithConstructor$InnerClass
        .$create__int__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor(
            b, this);
  }

  /**
   * @return {InnerClassWithConstructor$InnerClass}
   * @public
   */
  m_$create_InnerClassWithConstructor$InnerClass() {
    return InnerClassWithConstructor$InnerClass
        .$create__com_google_j2cl_transpiler_readable_innerclasswithconstructor_InnerClassWithConstructor(
            this);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InnerClassWithConstructor;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InnerClassWithConstructor);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    InnerClassWithConstructor.$clinit();
    if (!InnerClassWithConstructor.$classInnerClassWithConstructor_) {
      InnerClassWithConstructor
          .$classInnerClassWithConstructor_ = Class.$createForClass(
          $Util.$generateId('InnerClassWithConstructor'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor'));
    }
    return InnerClassWithConstructor.$classInnerClassWithConstructor_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return InnerClassWithConstructor.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    InnerClassWithConstructor$InnerClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.innerclasswithconstructor.InnerClassWithConstructor$InnerClass$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
InnerClassWithConstructor.$classInnerClassWithConstructor_ = null;



/**
 * Export class.
 */
exports = InnerClassWithConstructor;
