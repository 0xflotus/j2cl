/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface$impl');


let MyInterface = goog.require('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.MyInterface$impl');
let MyJsInterface = goog.require('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.MyJsInterface$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @interface
 * @extends {MyJsInterface}
 * @extends {MyInterface}
 */
class SubInterface {
  /**
   * @override
   * @param {number} a
   * @return {number}
   * @public
   */
  foo(a) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    MyJsInterface.$markImplementor(classConstructor);
    MyInterface.$markImplementor(classConstructor);
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_interfacejsbridge_SubInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_interfacejsbridge_SubInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_interfacejsbridge_SubInterface;
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    SubInterface.$clinit();
    if (!SubInterface.$classSubInterface_) {
      SubInterface.$classSubInterface_ = Class.$createForInterface(
          $Util.$generateId('SubInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface'));
    }
    return SubInterface.$classSubInterface_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
SubInterface.$classSubInterface_ = null;


SubInterface.$markImplementor(/** @type {Function} */ (SubInterface));

/**
 * Export class.
 */
exports = SubInterface;
