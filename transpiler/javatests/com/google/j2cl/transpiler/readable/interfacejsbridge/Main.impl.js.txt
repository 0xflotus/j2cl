/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.interfacejsbridge.Main.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.Main$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let MyJsInterface = goog.forwardDeclare('com.google.j2cl.transpiler.readable.interfacejsbridge.MyJsInterface$impl');
let InterfaceImpl = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.InterfaceImpl$impl');
let MyInterface = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.MyInterface$impl');
let SubInterface = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class Main extends Object {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Main}
   * @public
   */
  static $create() {
    Main.$clinit();
    let $instance = new Main();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_interfacejsbridge_Main();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_interfacejsbridge_Main() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_interfacejsbridge_Main();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let a = InterfaceImpl.$create();
    let b = InterfaceImpl.$create();
    let c = InterfaceImpl.$create();
    let d = InterfaceImpl.$create();
    a.foo(1);
    b.m_foo__int(1);
    c.foo(1);
    d.foo(1);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Main; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    MyJsInterface = goog.module.get(
        'com.google.j2cl.transpiler.readable.interfacejsbridge.MyJsInterface$impl');
    InterfaceImpl = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.interfacejsbridge.InterfaceImpl$impl');
    MyInterface = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.interfacejsbridge.MyInterface$impl');
    SubInterface = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.interfacejsbridge.SubInterface$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_interfacejsbridge_Main() {}
};

$Util.$setClassMetadata(
    Main, 'com.google.j2cl.transpiler.readable.interfacejsbridge.Main');



/**
 * Export class.
 */
exports = Main;
//# sourceMappingURL=Main.js.map