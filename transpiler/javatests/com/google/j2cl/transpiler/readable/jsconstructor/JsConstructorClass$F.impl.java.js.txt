/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$F.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.F$impl');


let C = goog.require('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.C$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class F extends C {
  /**
   * Real constructor.
   * @param {number} x
   * @public
   */
  constructor(x) {
    super(x + 2);
    /** @public {number} */
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F =
        0;
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F__int(
        x);
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} x
   * @return {!F}
   * @public
   */
  static $create__int(x) {
    F.$clinit();
    return new F(x);
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} x
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F__int(
      x) {
    this.$init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F();
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F =
        x + 3;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof F;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, F);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    C.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F() {
    this.f_fF__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass$F =
        13;
  }
};

$Util.$setClassMetadata(
    F,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$F'));



/**
 * Export class.
 */
exports = F;
//# sourceMappingURL=JsConstructorClass$F.js.map