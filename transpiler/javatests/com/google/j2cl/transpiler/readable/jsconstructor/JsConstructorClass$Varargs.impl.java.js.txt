/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$Varargs.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.Varargs$impl');


const A = goog.require('com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass.A$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class Varargs extends A {
  /**
   * Real constructor.
   * @param {...number} args
   * @public
   */
  constructor(args) {
    Varargs.$clinit();
    let $var_args_copy = /**@type {!Array<number>} */ (
        $Arrays.$create([arguments.length], $int));
    for (let $i = 0; $i < arguments.length; $i++) {
      $Arrays.$set($var_args_copy, $i, arguments[$i]);
    }
    super();
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_Varargs__arrayOf_int(
        $var_args_copy);
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {Array<number>} args
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_Varargs__arrayOf_int(
      args) {
    this.$ctor__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_A__int(
        args[1]);
    this.$init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_Varargs();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Varargs;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Varargs);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Varargs.$clinit = function() {};
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    A.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsconstructor_JsConstructorClass_Varargs() {
  }
};

$Util.$setClassMetadata(
    Varargs,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jsconstructor.JsConstructorClass$Varargs'));



/**
 * Export class.
 */
exports = Varargs;
//# sourceMappingURL=JsConstructorClass$Varargs.js.map