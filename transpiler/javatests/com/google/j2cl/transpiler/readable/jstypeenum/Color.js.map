[@JsType
public enum Color {
...  BLUE
}] => [/**
 * @extends {Enum<Color>}
...exports = Color;
] "com.google.j2cl.transpiler.readable.jstypeenum.Color"
[@JsType
public enum Color {
...  BLUE
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.jstypeenum.Color"
[UNKNOWN] => [super();]
[@JsType
public enum Color {
...  BLUE
}] => [/**
   * Factory method corresponding to constructor 'Color(String, int)'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.jstypeenum.Color.<ctor>"
[UNKNOWN] => [Color.$clinit();]
[UNKNOWN] => [let $instance = new Color();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jstypeenum_Color__java_lang_String__int($name, $ordinal);]
[UNKNOWN] => [return $instance;]
[@JsType
public enum Color {
...  BLUE
}] => [/**
   * Initialization from constructor 'Color(String, int)'.
...    this.$init__com_google_j2cl_transpiler_readable_jstypeenum_Color();
  }] "com.google.j2cl.transpiler.readable.jstypeenum.Color.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_jstypeenum_Color();]
[@JsType
public enum Color {
...  BLUE
}] => [/**
   * @param {?string} name
...    return $Enums.getValueFromNameAndMap(name, Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_);
  }] "com.google.j2cl.transpiler.readable.jstypeenum.Color"
[UNKNOWN] => [Color.$clinit();]
[UNKNOWN] => [if ($Equality.$same(Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_, null)) {
      Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_ = /**@type {Map<?string, !Color>} */ ($Enums.createMapFromValues(Color.values()));
    }]
[UNKNOWN] => [Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_ = /**@type {Map<?string, !Color>} */ ($Enums.createMapFromValues(Color.values()));]
[UNKNOWN] => [return $Enums.getValueFromNameAndMap(name, Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_);]
[@JsType
public enum Color {
...  BLUE
}] => [/**
   * @return {Array<Color>}
...    return /**@type {!Array<Color>} */ ($Arrays.$init([Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color, Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color, Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color], Color));
  }] "com.google.j2cl.transpiler.readable.jstypeenum.Color"
[UNKNOWN] => [Color.$clinit();]
[UNKNOWN] => [return /**@type {!Array<Color>} */ ($Arrays.$init([Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color, Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color, Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color], Color));]
[UNKNOWN] => [/**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return super.compareTo(/**@type {Color} */ ($Casts.$to(arg0, Color)));
  }]
[UNKNOWN] => [return super.compareTo(/**@type {Color} */ ($Casts.$to(arg0, Color)));]
[UNKNOWN] => [Enum.$clinit();]
[RED] => [Color.$f_RED__com_google_j2cl_transpiler_readable_jstypeenum_Color = Color.$create__java_lang_String__int($Util.$makeEnumName("RED"), 0);]
[GREEN] => [Color.$f_GREEN__com_google_j2cl_transpiler_readable_jstypeenum_Color = Color.$create__java_lang_String__int($Util.$makeEnumName("GREEN"), 1);]
[BLUE] => [Color.$f_BLUE__com_google_j2cl_transpiler_readable_jstypeenum_Color = Color.$create__java_lang_String__int($Util.$makeEnumName("BLUE"), 2);]
[UNKNOWN] => [Color.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_jstypeenum_Color_ = null;]
