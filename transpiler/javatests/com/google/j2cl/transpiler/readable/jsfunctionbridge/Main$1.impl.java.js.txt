/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jsfunctionbridge.Main$1.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.jsfunctionbridge.Main.$1$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');
const $JavaScriptFunction = goog.require('vmbootstrap.JavaScriptFunction$impl');

let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class $1 extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {?string} */
    this.f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1 =
        null;
  }

  /**
   * Factory method corresponding to constructor 'new ApplyFunction()'.
   * @return {function(?string):?string}
   * @public
   */
  static $create__() {
    $1.$clinit();
    let $instance = new $1();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1__();
    return $Util.$makeLambdaFunction(
        $Util.$getPrototype($1).m_apply__java_lang_Object, $instance, $1.$copy);
  }

  /**
   * Initialization from constructor 'new ApplyFunction()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1();
  }

  /**
   * Bridge method.
   * @this {?function(?string):?string}
   * @param {*} arg0
   * @return {?string}
   * @public
   */
  m_apply__java_lang_Object(arg0) {
    return $1
        .m_apply__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1__java_lang_String(
            this, /**@type {?string} */ ($Casts.$to(arg0, java_lang_String)));
  }

  /**
   * @param {?function(?string):?string} $thisArg
   * @param {?string} s
   * @return {?string}
   * @public
   */
  static m_apply__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1__java_lang_String(
      $thisArg, s) {
    $1.$clinit();
    return java_lang_String.m_valueOf__java_lang_Object(s) +
        java_lang_String.m_valueOf__java_lang_Object(
            $thisArg
                .f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1);
  }

  /**
   * @param {?function(?string):?string} $thisArg
   * @return {?string}
   * @public
   */
  static m_fun__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1(
      $thisArg) {
    $1.$clinit();
    return java_lang_String.m_valueOf__java_lang_Object(
               $thisArg
                   .f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1) +
        java_lang_String.m_valueOf__java_lang_Object($thisArg('a'));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$is__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $1);
  }

  /**
   * Copies the fields from {@code from} to {@code to}.
   * @param {$1} from
   * @param {*} to
   * @public
   */
  static $copy(from, to) {
    to.f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1 =
        from.f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1;
    // Marks the object is an instance of this class.
    to.$is__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1 = true;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $1.$clinit = function() {};
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1() {
    this.f_field__com_google_j2cl_transpiler_readable_jsfunctionbridge_Main_1 =
        'abc';
  }
};

$Util.$setClassMetadata(
    $1,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jsfunctionbridge.Main$1'));


$JavaScriptFunction.$markImplementor($1);


/**
 * Export class.
 */
exports = $1;
//# sourceMappingURL=Main$1.js.map