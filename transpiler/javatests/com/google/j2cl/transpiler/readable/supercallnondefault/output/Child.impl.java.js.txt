/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.supercallnondefault.Child.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.supercallnondefault.Child$impl');


const Parent = goog.require('com.google.j2cl.transpiler.readable.supercallnondefault.Parent$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class Child extends Parent {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Child(int)'.
   * @param {number} a
   * @return {!Child}
   * @public
   */
  static $create__int(a) {
    Child.$clinit();
    let $instance = new Child();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_supercallnondefault_Child__int(
            a);
    return $instance;
  }

  /**
   * Initialization from constructor 'Child(int)'.
   * @param {number} a
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_supercallnondefault_Child__int(a) {
    this.$ctor__com_google_j2cl_transpiler_readable_supercallnondefault_Parent__int(
        a);
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Child;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Child);
  }

  /**
   * @public
   */
  static $clinit() {
    Child.$clinit = function() {};
    Parent.$clinit();
  }
};

$Util.$setClassMetadata(
    Child,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.supercallnondefault.Child'));



exports = Child;
//# sourceMappingURL=Child.js.map