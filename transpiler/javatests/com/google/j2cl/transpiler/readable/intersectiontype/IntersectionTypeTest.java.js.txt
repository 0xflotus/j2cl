/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.
 *
 * @suppress {extraRequire, lateProvide, unusedLocalVariables}
 */
goog.module('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest');


// Imports headers for both eager and lazy dependencies to ensure that
// all files are included in the dependency tree.
const _java_lang_Object = goog.require('java.lang.Object');
const _$Util = goog.require('nativebootstrap.Util');
let _Cmp = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Cmp');
let _Cmp2 = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Cmp2');
let _Getable = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Getable');
let _$LambdaAdaptor$1 = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.$LambdaAdaptor$1');
let _$LambdaAdaptor$2 = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.$LambdaAdaptor$2');
let _A = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.A');
let _EmptyA = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.EmptyA');
let _EmptyB = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.EmptyB');
let _Serial = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Serial');
let _Setable = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Setable');
let _Comparable = goog.require('java.lang.Comparable');
let _java_lang_String = goog.require('java.lang.String');
let _$Equality = goog.require('nativebootstrap.Equality');
let _$Casts = goog.require('vmbootstrap.Casts');


// Re-exports the implementation.
var IntersectionTypeTest = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$impl');
exports = IntersectionTypeTest;
