/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let IntersectionType$Getable = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType.Getable$impl');
let IntersectionType$Setable = goog.forwardDeclare('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType.Setable$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');


class IntersectionType extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!IntersectionType}
   * @public
   */
  static $create() {
    IntersectionType.$clinit();
    let $instance = new IntersectionType();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionType();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionType() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionType();
  }

  /**
   * @template M_T
   * @param {M_T} object
   * @return {void}
   * @public
   */
  static m_getAndSet__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionType$Getable(
      object) {
    IntersectionType.$clinit();
    object.m_set__int(1);
    object.m_get();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof IntersectionType; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, IntersectionType);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    IntersectionType$Getable = goog.module.get(
        'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType.Getable$impl');
    IntersectionType$Setable = goog.module.get(
        'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType.Setable$impl');
    Class = goog.module.get('java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionType() {
  }
};

$Util.$setClassMetadata(
    IntersectionType,
    'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionType');



/**
 * Export class.
 */
exports = IntersectionType;
//# sourceMappingURL=IntersectionType.js.map