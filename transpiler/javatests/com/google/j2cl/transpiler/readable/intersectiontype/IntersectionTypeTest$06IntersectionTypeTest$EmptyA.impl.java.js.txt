/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$06IntersectionTypeTest$EmptyA.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.$Anonymous06IntersectionTypeTest$EmptyA$impl');


let IntersectionTypeTest$A = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.A$impl');
let IntersectionTypeTest$EmptyA = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.EmptyA$impl');
let IntersectionTypeTest$EmptyB = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.EmptyB$impl');
let $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @abstract
 * @implements {IntersectionTypeTest$EmptyA}
 * @implements {IntersectionTypeTest$EmptyB}
 */
class IntersectionTypeTest$06IntersectionTypeTest$EmptyA extends
    IntersectionTypeTest$A {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * Returns whether the provided instance matches the intersection type.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return IntersectionTypeTest$EmptyA.$isInstance(instance) &&
        IntersectionTypeTest$EmptyB.$isInstance(instance) &&
        IntersectionTypeTest$A.$isInstance(instance);
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, IntersectionTypeTest$06IntersectionTypeTest$EmptyA);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() { IntersectionTypeTest$A.$clinit(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest$06IntersectionTypeTest$EmptyA() {
  }
};

$Util.$setClassMetadata(
    IntersectionTypeTest$06IntersectionTypeTest$EmptyA,
    'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$06IntersectionTypeTest$EmptyA');


IntersectionTypeTest$EmptyA.$markImplementor(
    IntersectionTypeTest$06IntersectionTypeTest$EmptyA);
IntersectionTypeTest$EmptyB.$markImplementor(
    IntersectionTypeTest$06IntersectionTypeTest$EmptyA);


/**
 * Export class.
 */
exports = IntersectionTypeTest$06IntersectionTypeTest$EmptyA;
//# sourceMappingURL=IntersectionTypeTest$06IntersectionTypeTest$EmptyA.js.map