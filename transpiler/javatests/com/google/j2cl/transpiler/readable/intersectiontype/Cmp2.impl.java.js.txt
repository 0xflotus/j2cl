/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.intersectiontype.Cmp2.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.intersectiontype.Cmp2$impl');


let $Util = goog.require('nativebootstrap.Util$impl');

let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @interface
 */
class Cmp2 {
  /**
   * @abstract
   * @param {number} a
   * @return {number}
   * @public
   */
  m_cmp__int(a) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_intersectiontype_Cmp2 =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        instance
            .$implements__com_google_j2cl_transpiler_readable_intersectiontype_Cmp2;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        classConstructor.prototype
            .$implements__com_google_j2cl_transpiler_readable_intersectiontype_Cmp2;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
};

$Util.$setClassMetadataForInterface(
    Cmp2, 'com.google.j2cl.transpiler.readable.intersectiontype.Cmp2');


Cmp2.$markImplementor(/** @type {Function} */ (Cmp2));


/**
 * Export class.
 */
exports = Cmp2;
//# sourceMappingURL=Cmp2.js.map