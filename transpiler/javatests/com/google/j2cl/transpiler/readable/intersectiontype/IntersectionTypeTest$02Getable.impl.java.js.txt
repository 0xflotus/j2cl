/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$02Getable.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest.$Anonymous02Getable$impl');


let Getable = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Getable$impl');
let Setable = goog.require('com.google.j2cl.transpiler.readable.intersectiontype.Setable$impl');
let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @abstract
 * @implements {Getable<(Comparable<?string>|?boolean|?number|?string)>}
 * @implements {Setable}
 */
class IntersectionTypeTest$02Getable extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * @abstract
   * @override
   * @return {(Comparable<?string>|?boolean|?number|?string)}
   * @public
   */
  m_get__() {}

  /**
   * @abstract
   * @override
   * @param {number} arg0
   * @return {void}
   * @public
   */
  m_set__int(arg0) {}

  /**
   * Returns whether the provided instance matches the intersection type.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return Getable.$isInstance(instance) && Setable.$isInstance(instance);
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, IntersectionTypeTest$02Getable);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Comparable = goog.module.get('java.lang.Comparable$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_intersectiontype_IntersectionTypeTest$02Getable() {
  }
};

$Util.$setClassMetadata(
    IntersectionTypeTest$02Getable,
    'com.google.j2cl.transpiler.readable.intersectiontype.IntersectionTypeTest$02Getable');


Getable.$markImplementor(IntersectionTypeTest$02Getable);
Setable.$markImplementor(IntersectionTypeTest$02Getable);


/**
 * Export class.
 */
exports = IntersectionTypeTest$02Getable;
//# sourceMappingURL=IntersectionTypeTest$02Getable.js.map