/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.switchstatement.Numbers.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.switchstatement.Numbers$impl');


const Enum = goog.require('java.lang.Enum$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_Object = goog.forwardDeclare('java.lang.Object$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $Enums = goog.forwardDeclare('vmbootstrap.Enums$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @extends {Enum<Numbers>}
 */
class Numbers extends Enum {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Numbers(String, int)'.
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {!Numbers}
   * @public
   */
  static $create__java_lang_String__int($name, $ordinal) {
    Numbers.$clinit();
    let $instance = new Numbers();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_switchstatement_Numbers__java_lang_String__int(
            $name, $ordinal);
    return $instance;
  }

  /**
   * Initialization from constructor 'Numbers(String, int)'.
   * @param {?string} $name
   * @param {number} $ordinal
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_switchstatement_Numbers__java_lang_String__int(
      $name, $ordinal) {
    this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);
    this.$init__com_google_j2cl_transpiler_readable_switchstatement_Numbers();
  }

  /**
   * @param {?string} name
   * @return {Numbers}
   * @public
   */
  static m_valueOf__java_lang_String(name) {
    Numbers.$clinit();
    if ($Equality.$same(
            Numbers
                .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_,
            null)) {
      Numbers
          .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ =
          /**@type {Map<?string, !Numbers>} */ (
              $Enums.createMapFromValues(Numbers.m_values__()));
    }
    return $Enums.getValueFromNameAndMap(
        name,
        Numbers
            .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_);
  }

  /**
   * @return {Array<Numbers>}
   * @public
   */
  static m_values__() {
    Numbers.$clinit();
    return /**@type {!Array<Numbers>} */ ($Arrays.$init(
        [
          Numbers
              .$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers,
          Numbers
              .$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers
        ],
        Numbers));
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return super.compareTo(/**@type {Numbers} */ ($Casts.$to(arg0, Numbers)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Numbers;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Numbers);
  }

  /**
   * A static field getter.
   * @return {!Numbers}
   * @public
   */
  static get f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers() {
    return (
        Numbers.$clinit(),
        Numbers
            .$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers);
  }

  /**
   * A static field setter.
   * @param {!Numbers} value
   * @return {void}
   * @public
   */
  static set f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers(
      value) {
    (Numbers.$clinit(),
     Numbers
         .$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
         value);
  }

  /**
   * A static field getter.
   * @return {!Numbers}
   * @public
   */
  static get f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers() {
    return (
        Numbers.$clinit(),
        Numbers
            .$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers);
  }

  /**
   * A static field setter.
   * @param {!Numbers} value
   * @return {void}
   * @public
   */
  static set f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers(
      value) {
    (Numbers.$clinit(),
     Numbers
         .$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
         value);
  }

  /**
   * A static field getter.
   * @return {Map<?string, !Numbers>}
   * @public
   */
  static get f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_() {
    return (
        Numbers.$clinit(),
        Numbers
            .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_);
  }

  /**
   * A static field setter.
   * @param {Map<?string, !Numbers>} value
   * @return {void}
   * @public
   */
  static set f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_(
      value) {
    (Numbers.$clinit(),
     Numbers
         .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ =
         value);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Numbers.$clinit = function() {};
    java_lang_Object = goog.module.get('java.lang.Object$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $Enums = goog.module.get('vmbootstrap.Enums$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Enum.$clinit();
    Numbers
        .$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
        Numbers.$create__java_lang_String__int($Util.$makeEnumName('ONE'), 0);
    Numbers
        .$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
        Numbers.$create__java_lang_String__int($Util.$makeEnumName('TWO'), 1);
    Numbers
        .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_switchstatement_Numbers() {}
};

$Util.$setClassMetadataForEnum(
    Numbers,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.switchstatement.Numbers'));


/**
 * @private {!Numbers}
 */
Numbers.$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
    null;


/**
 * @private {!Numbers}
 */
Numbers.$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers =
    null;


/**
 * @private {Map<?string, !Numbers>}
 */
Numbers
    .$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ =
    null;



/**
 * Export class.
 */
exports = Numbers;
//# sourceMappingURL=Numbers.js.map