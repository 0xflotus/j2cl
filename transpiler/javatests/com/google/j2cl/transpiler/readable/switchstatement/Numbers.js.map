[public enum Numbers {
  ONE,
  TWO
}] => [/**
 * @extends {Enum<Numbers>}
...exports = Numbers;
] "com.google.j2cl.transpiler.readable.switchstatement.Numbers"
[public enum Numbers {
  ONE,
  TWO
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.switchstatement.Numbers"
[UNKNOWN] => [super();]
[public enum Numbers {
  ONE,
  TWO
}] => [/**
   * Factory method corresponding to constructor 'Numbers(String, int)'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.switchstatement.Numbers.<ctor>"
[UNKNOWN] => [Numbers.$clinit();]
[UNKNOWN] => [let $instance = new Numbers();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_switchstatement_Numbers__java_lang_String__int($name, $ordinal);]
[UNKNOWN] => [return $instance;]
[public enum Numbers {
  ONE,
  TWO
}] => [/**
   * Initialization from constructor 'Numbers(String, int)'.
...    this.$init__com_google_j2cl_transpiler_readable_switchstatement_Numbers();
  }] "com.google.j2cl.transpiler.readable.switchstatement.Numbers.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Enum__java_lang_String__int($name, $ordinal);]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_switchstatement_Numbers();]
[public enum Numbers {
  ONE,
  TWO
}] => [/**
   * @param {?string} name
...    return $Enums.getValueFromNameAndMap(name, Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_);
  }] "com.google.j2cl.transpiler.readable.switchstatement.Numbers"
[UNKNOWN] => [Numbers.$clinit();]
[UNKNOWN] => [if ($Equality.$same(Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_, null)) {
      Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ = /**@type {Object<?string, !Numbers>} */ ($Enums.createMapFromValues(Numbers.m_values__()));
    }]
[UNKNOWN] => [Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ = /**@type {Object<?string, !Numbers>} */ ($Enums.createMapFromValues(Numbers.m_values__()));]
[UNKNOWN] => [return $Enums.getValueFromNameAndMap(name, Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_);]
[public enum Numbers {
  ONE,
  TWO
}] => [/**
   * @return {Array<Numbers>}
...    return /**@type {!Array<Numbers>} */ ($Arrays.$init([Numbers.$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers, Numbers.$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers], Numbers));
  }] "com.google.j2cl.transpiler.readable.switchstatement.Numbers"
[UNKNOWN] => [Numbers.$clinit();]
[UNKNOWN] => [return /**@type {!Array<Numbers>} */ ($Arrays.$init([Numbers.$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers, Numbers.$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers], Numbers));]
[UNKNOWN] => [/**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {number}
   * @public
   */
  m_compareTo__java_lang_Object(arg0) {
    return super.compareTo(/**@type {Numbers} */ ($Casts.to(arg0, Numbers)));
  }]
[UNKNOWN] => [return super.compareTo(/**@type {Numbers} */ ($Casts.to(arg0, Numbers)));]
[UNKNOWN] => [Enum.$clinit();]
[ONE] => [Numbers.$f_ONE__com_google_j2cl_transpiler_readable_switchstatement_Numbers = Numbers.$create__java_lang_String__int($Util.$makeEnumName("ONE"), 0);]
[TWO] => [Numbers.$f_TWO__com_google_j2cl_transpiler_readable_switchstatement_Numbers = Numbers.$create__java_lang_String__int($Util.$makeEnumName("TWO"), 1);]
[UNKNOWN] => [Numbers.$f_namesToValuesMap__com_google_j2cl_transpiler_readable_switchstatement_Numbers_ = null;]
