/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.lambdas.Lambdas$JsSupplier$$LambdaAdaptor.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire,
 * suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables,
 * uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier.$LambdaAdaptor$impl');


const JsSupplier = goog.require('com.google.j2cl.transpiler.readable.lambdas.Lambdas.JsSupplier$impl');
const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Equals = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdas.Lambdas.Equals$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');


/**
 * @template C_JsSupplier_T
 * @implements {JsSupplier<C_JsSupplier_T>}
 */
class $LambdaAdaptor extends j_l_Object {
  /**
   * JsConstructor '$LambdaAdaptor($JsFunction)'.
   * @param {?function():C_JsSupplier_T} fn
   * @public
   */
  constructor(fn) {
    $LambdaAdaptor.$clinit();
    super();
    /** @public {?function():C_JsSupplier_T} */
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$LambdaAdaptor;
    this.$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$LambdaAdaptor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$JsFunction(
        fn);
  }

  /**
   * Initialization from constructor '$LambdaAdaptor($JsFunction)'.
   * @param {?function():C_JsSupplier_T} fn
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$LambdaAdaptor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$JsFunction(
      fn) {
    this.$ctor__java_lang_Object__();
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$LambdaAdaptor =
        fn;
  }

  /**
   * @return {C_JsSupplier_T}
   * @public
   */
  get() {
    let /** ?function():C_JsSupplier_T */ $function;
    return (
        $function =
            this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_JsSupplier_$LambdaAdaptor,
        $function());
  }

  /**
   * Bridge method for exposing non-JsMethod.
   * @override
   * @return {C_JsSupplier_T}
   * @public
   */
  m_get__() {
    return this.get();
  }

  /**
   * @return {void}
   * @public
   */
  static $clinit() {
    $LambdaAdaptor.$clinit = (() => {});
    $LambdaAdaptor.$loadModules();
    j_l_Object.$clinit();
    Equals.$clinit();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $LambdaAdaptor;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $LambdaAdaptor);
  }

  /**
   * @private
   */
  static $loadModules() {
    Equals = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas.Equals$impl');
  }
};

$Util.$setClassMetadata(
    $LambdaAdaptor,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.lambdas.Lambdas$JsSupplier$$LambdaAdaptor'));


JsSupplier.$markImplementor($LambdaAdaptor);


exports = $LambdaAdaptor;
//# sourceMappingURL=Lambdas$JsSupplier$$LambdaAdaptor.js.map