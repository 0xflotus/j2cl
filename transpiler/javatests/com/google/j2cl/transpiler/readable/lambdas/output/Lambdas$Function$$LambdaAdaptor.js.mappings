[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [$LambdaAdaptor.$clinit();] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [super();] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [/** @public {?function(C_Function_T):C_Function_R} */
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Function_$LambdaAdaptor;] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [this.$ctor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Function_$LambdaAdaptor__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Function_$JsFunction(fn);] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Function_$LambdaAdaptor = fn;] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<init>"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [let /** ?function(C_Function_T):C_Function_R */ $function;] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.apply"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [return ($function = this.f_$$fn__com_google_j2cl_transpiler_readable_lambdas_Lambdas_Function_$LambdaAdaptor, $function(arg0));] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.apply"
[interface Function<T, R> {
    static <T> Function<T, T> identity() {
...    R apply(T t);
  }] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.lambdas.Lambdas$Function$$LambdaAdaptor.<clinit>"
