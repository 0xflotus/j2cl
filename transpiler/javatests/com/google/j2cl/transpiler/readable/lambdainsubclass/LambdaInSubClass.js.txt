/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/lambdainsubclass/LambdaInSubClass.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInSubClassModule');


let Parent = goog.require('gen.com.google.j2cl.transpiler.readable.lambdainsubclass.ParentModule').Parent;
let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $int = goog.require('vmbootstrap.PrimitivesModule').$int;


/**
 * @interface
 */
class LambdaInterface {
  /**
   * @param {number} a
   * @return {number}
   * @public
   */
  m_foo__int(a) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInterface;
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaInterface.$classLambdaInterface) {
      LambdaInterface.$classLambdaInterface = Class.$createForInterface(
          $Util.$generateId('LambdaInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInterface'),
          null,
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInterface'));
    }
    return LambdaInterface.$classLambdaInterface;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {}
}
;


LambdaInterface.$markImplementor(/** @type {Function} */ (LambdaInterface));

/**
 * Export class.
 */
exports.LambdaInterface = LambdaInterface;



class LambdaInSubClass extends Parent {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass() {
  }

  /**
   * @return {void}
   * @public
   */
  m_test() { let l = (LambdaInSubClass$lambda$0.$create(this)); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LambdaInSubClass}
   * @public
   * @nocollapse
   */
  static $create() {
    LambdaInSubClass.$clinit();
    let instance = new LambdaInSubClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass() {
    this.$ctor__com_google_j2cl_transpiler_readable_lambdainsubclass_Parent();
    this.$init__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof LambdaInSubClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaInSubClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaInSubClass.$classLambdaInSubClass) {
      LambdaInSubClass.$classLambdaInSubClass = Class.$createForClass(
          $Util.$generateId('LambdaInSubClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInSubClass'),
          Parent.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInSubClass'));
    }
    return LambdaInSubClass.$classLambdaInSubClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Parent.$clinit(); }
}
;



/**
 * Export class.
 */
exports.LambdaInSubClass = LambdaInSubClass;



/**
 * @implements {LambdaInterface}
 */
class LambdaInSubClass$lambda$0 extends Parent {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {LambdaInSubClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0 =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0() {
  }

  /**
   * @param {number} i
   * @return {number}
   * @private
   */
  lambda$0(i) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
        .m_funInParent();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
        .m_funInParent();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
        .m_funInParent();
    let a =
        this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
            .f_fieldInParent__com_google_j2cl_transpiler_readable_lambdainsubclass_Parent;
    a = this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
            .f_fieldInParent__com_google_j2cl_transpiler_readable_lambdainsubclass_Parent;
    a = this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0
            .f_fieldInParent__com_google_j2cl_transpiler_readable_lambdainsubclass_Parent;
    return a;
  }

  /**
   * @override
   * @param {number} arg0
   * @return {number}
   * @public
   */
  m_foo__int(arg0) { return this.lambda$0(arg0); }

  /**
   * A particular Java constructor as a factory method.
   * @param {LambdaInSubClass} $outer_this
   * @return {!LambdaInSubClass$lambda$0}
   * @private
   * @nocollapse
   */
  static $create($outer_this) {
    LambdaInSubClass$lambda$0.$clinit();
    let instance = new LambdaInSubClass$lambda$0;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {LambdaInSubClass} $outer_this
   * @private
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0 =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdainsubclass_LambdaInSubClass$lambda$0();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LambdaInSubClass$lambda$0;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaInSubClass$lambda$0);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaInSubClass$lambda$0.$classLambdaInSubClass$lambda$0) {
      LambdaInSubClass$lambda$0
          .$classLambdaInSubClass$lambda$0 = Class.$createForClass(
          $Util.$generateId('lambda$0'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInSubClass$lambda$0'),
          Parent.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdainsubclass.LambdaInSubClass.lambda.0'));
    }
    return LambdaInSubClass$lambda$0.$classLambdaInSubClass$lambda$0;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Parent.$clinit(); }
}
;


LambdaInterface.$markImplementor(LambdaInSubClass$lambda$0);
