/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.nativeinjection.NativeClass.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.nativeinjection.NativeClass$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_String = goog.forwardDeclare('java.lang.String$impl');


class NativeClass extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!NativeClass}
   * @public
   */
  static $create__() {
    NativeClass.$clinit();
    let $instance = new NativeClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nativeinjection_NativeClass__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nativeinjection_NativeClass__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_nativeinjection_NativeClass();
  }

  /**
   * @return {?string}
   * @public
   */
  // native m_nativeInstanceMethod__()

  /**
   * @return {NativeClass}
   * @public
   */
  // native static m_nativeStaticMethod__()

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof NativeClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NativeClass);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    NativeClass.$clinit = function() {};
    java_lang_String = goog.module.get('java.lang.String$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nativeinjection_NativeClass() {}
};

$Util.$setClassMetadata(
    NativeClass,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.nativeinjection.NativeClass'));



/**
 * Native Method Injection
 */
// Alias for the class defined in this module
const __class = NativeClass;
/**
 * Replaces the native instance method 'nativeInstanceMethod' in NativeClass.
 * @return {string}
 * @public
 */
__class.prototype.m_nativeInstanceMethod__ = function() {
  return 'nativeInstanceMethod';
};

/**
 * Replaces the native static method 'nativeStaticMethod' in NativeClass.
 * @return {__class}
 * @public
 */
__class.m_nativeStaticMethod__ = function() {
  return null;
};


/**
 * Export class.
 */
exports = NativeClass;
//# sourceMappingURL=NativeClass.js.map