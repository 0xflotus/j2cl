/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.nestedtrycatch.NestedTryCatch.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.nestedtrycatch.NestedTryCatch$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');
let Exception = goog.forwardDeclare('java.lang.Exception$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let $Exceptions = goog.forwardDeclare('vmbootstrap.Exceptions$impl');


class NestedTryCatch extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!NestedTryCatch}
   * @public
   */
  static $create__() {
    NestedTryCatch.$clinit();
    let $instance = new NestedTryCatch();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedtrycatch_NestedTryCatch__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedtrycatch_NestedTryCatch__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_nestedtrycatch_NestedTryCatch();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    try {
      throw $Exceptions.toJs(Exception.$create__());
    } catch (/** @type {*} */ ae) {
      ae = $Exceptions.toJava(ae);
      if (Exception.$isInstance(ae)) {
        try {
          throw $Exceptions.toJs(Exception.$create__());
        } catch (/** @type {*} */ ie) {
          ie = $Exceptions.toJava(ie);
          if (Exception.$isInstance(ie)) {
          } else {
            throw $Exceptions.toJs(ie);
          }
        }
      } else {
        throw $Exceptions.toJs(ae);
      }
    }
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof NestedTryCatch; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NestedTryCatch);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('java.lang.Class$impl');
    Exception = goog.module.get('java.lang.Exception$impl');
    Throwable = goog.module.get('java.lang.Throwable$impl');
    $Exceptions = goog.module.get('vmbootstrap.Exceptions$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedtrycatch_NestedTryCatch() {}
};

$Util.$setClassMetadata(
    NestedTryCatch,
    'com.google.j2cl.transpiler.readable.nestedtrycatch.NestedTryCatch');



/**
 * Export class.
 */
exports = NestedTryCatch;
//# sourceMappingURL=NestedTryCatch.js.map