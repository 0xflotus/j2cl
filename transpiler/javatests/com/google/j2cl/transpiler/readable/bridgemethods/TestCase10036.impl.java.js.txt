/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.bridgemethods.TestCase10036.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.bridgemethods.TestCase10036$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class TestCase10036 extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'TestCase10036()'.
   * @return {!TestCase10036}
   * @public
   */
  static $create__() {
    TestCase10036.$clinit();
    let $instance = new TestCase10036();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgemethods_TestCase10036__();
    return $instance;
  }

  /**
   * Initialization from constructor 'TestCase10036()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_bridgemethods_TestCase10036__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_bridgemethods_TestCase10036();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TestCase10036;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TestCase10036);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    TestCase10036.$clinit = function() {};
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_bridgemethods_TestCase10036() {}
};

$Util.$setClassMetadata(
    TestCase10036,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.bridgemethods.TestCase10036'));



/**
 * Export class.
 */
exports = TestCase10036;
//# sourceMappingURL=TestCase10036.js.map