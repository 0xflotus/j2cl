[UNKNOWN] => [super();]
[UNKNOWN] => [ImplicitParenthesis.$clinit();]
[UNKNOWN] => [let $instance = new ImplicitParenthesis();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_implicitparenthesis_ImplicitParenthesis();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_implicitparenthesis_ImplicitParenthesis();]
[examples();] => [ImplicitParenthesis.m_examples_$p_com_google_j2cl_transpiler_readable_implicitparenthesis_ImplicitParenthesis();]
[nonExamples();] => [ImplicitParenthesis.m_nonExamples_$p_com_google_j2cl_transpiler_readable_implicitparenthesis_ImplicitParenthesis();]
[UNKNOWN] => [ImplicitParenthesis.$clinit();]
[int primitiveInt;] => [let primitiveInt;]
[Integer boxedInt;] => [let boxedInt;]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = primitiveInt == 5 ? new Integer(15) : new Integer(30);] => [primitiveInt = (primitiveInt == 5 ? Integer.$create__int(15) : Integer.$create__int(30)).m_intValue();]
[assert primitiveInt == 15;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 15);]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = boxedInt += primitiveInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int(boxedInt.m_intValue() + primitiveInt)).m_intValue();]
[assert primitiveInt == 15;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 15);]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = boxedInt = primitiveInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int(primitiveInt)).m_intValue();]
[assert primitiveInt == 5;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 5);]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = boxedInt++;] => [primitiveInt = ($Numbers.$v = boxedInt, boxedInt = Integer.m_valueOf__int(boxedInt.m_intValue() + 1), $Numbers.$v).m_intValue();]
[assert primitiveInt == 10;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 10);]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = ++boxedInt;] => [primitiveInt = (boxedInt = Integer.m_valueOf__int(boxedInt.m_intValue() + 1)).m_intValue();]
[assert primitiveInt == 11;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 11);]
[UNKNOWN] => [ImplicitParenthesis.$clinit();]
[int primitiveInt;] => [let primitiveInt;]
[Integer boxedInt;] => [let boxedInt;]
[Boolean boxedBoolean;] => [let boxedBoolean;]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[primitiveInt = boxedInt - primitiveInt;] => [primitiveInt = boxedInt.m_intValue() - primitiveInt;]
[assert primitiveInt == 5;] => [$Asserts.$enabled() && $Asserts.$assert(primitiveInt == 5);]
[primitiveInt = 5;] => [primitiveInt = 5;]
[boxedInt = new Integer(10);] => [boxedInt = Integer.$create__int(10);]
[boxedBoolean = true;] => [boxedBoolean = true;]
[boxedBoolean = boxedInt == primitiveInt;] => [boxedBoolean = boxedInt.m_intValue() == primitiveInt;]
[assert boxedBoolean == false;] => [$Asserts.$enabled() && $Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean(boxedBoolean) == false);]
