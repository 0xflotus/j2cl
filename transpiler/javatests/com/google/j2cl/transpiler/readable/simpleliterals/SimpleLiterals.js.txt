/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/simpleliterals/SimpleLiterals.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiteralsModule');


var Class = goog.require('gen.java.lang.CoreModule').Class;
var Object = goog.require('gen.java.lang.CoreModule').Object;
var String = goog.require('gen.java.lang.StringModule').String;
var $Util = goog.require('nativebootstrap.UtilModule').Util;
var $boolean = goog.require('vmbootstrap.PrimitivesModule').$boolean;
var $char = goog.require('vmbootstrap.PrimitivesModule').$char;
var $int = goog.require('vmbootstrap.PrimitivesModule').$int;


class SimpleLiterals extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals() {}

  /**
   * @return {void}
   * @public
   */
  m_main() {
    let a = false;
    let b = 97 /* 'a' */;
    let c = null;
    let d = 101;
    let e = "foo";
    let f = SimpleLiterals.$class;
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!SimpleLiterals}
   * @public
   * @nocollapse
   */
  static $create() {
    SimpleLiterals.$clinit();
    var instance = new SimpleLiterals;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SimpleLiterals; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @private
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLiterals);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
SimpleLiterals.$class = Class.$createForClass(
    $Util.$generateId('SimpleLiterals'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiterals'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiterals'));

/**
 * Export class.
 */
exports.SimpleLiterals = SimpleLiterals;
