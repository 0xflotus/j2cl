/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiterals.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiterals$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');


class SimpleLiterals extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'SimpleLiterals()'.
   * @return {!SimpleLiterals}
   * @public
   */
  static $create__() {
    SimpleLiterals.$clinit();
    let $instance = new SimpleLiterals();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals__();
    return $instance;
  }

  /**
   * Initialization from constructor 'SimpleLiterals()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let a = false;
    let b = 97 /* 'a' */;
    let c = null;
    let d = 101;
    let e = 'foo';
    let f = /**@type {Class<SimpleLiterals>} */ (Class.$get(SimpleLiterals));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SimpleLiterals;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLiterals);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SimpleLiterals.$clinit = function() {};
    Class = goog.module.get('java.lang.Class$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simpleliterals_SimpleLiterals() {}
};

$Util.$setClassMetadata(
    SimpleLiterals,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.simpleliterals.SimpleLiterals'));



/**
 * Export class.
 */
exports = SimpleLiterals;
//# sourceMappingURL=SimpleLiterals.js.map