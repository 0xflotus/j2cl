[@JsType(isNative = true, name = "Object", namespace = JsPackage.GLOBAL)
public class CastToTypeVariable<T extends CastToTypeVariable<T>> {
...  }
}] => [class CastToTypeVariable$$Overlay {
  /**
...exports = CastToTypeVariable$$Overlay;
] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable"
[@SuppressWarnings({"unused", "unchecked"})
  @JsOverlay
...    return (T) this;
  }] => [/**
   * @template C_T
...    return /**@type {Object} */ ($Casts.$to($thisArg, CastToTypeVariable$$Overlay));
  }] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable.setField"
[index] => [index] "index"
[value] => [value] "value"
[UNKNOWN] => [CastToTypeVariable$$Overlay.$clinit();]
[Object o = new Object();] => [let o = java_lang_Object.$create__();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable$$Overlay.setField"
[o] => [o] "o"
[T[] a = (T[]) o;] => [let a = /**@type {Array<Object>} */ ($Arrays.$castToNative(o));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable$$Overlay.setField"
[a] => [a] "a"
[return (T) this;] => [return /**@type {Object} */ ($Casts.$to($thisArg, CastToTypeVariable$$Overlay));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable$$Overlay.setField"
