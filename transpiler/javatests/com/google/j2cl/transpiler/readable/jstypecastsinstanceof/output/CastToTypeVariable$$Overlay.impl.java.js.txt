/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable$$Overlay.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable.$Overlay$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let j_l_Object = goog.forwardDeclare('java.lang.Object$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


class $Overlay {
  /**
   * @template C_T
   * @param {Object<string, C_T>} $thisArg
   * @param {number} index
   * @param {boolean} value
   * @return {C_T}
   * @public
   */
  static m_setField__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToTypeVariable__int__boolean(
      $thisArg, index, value) {
    $Overlay.$clinit();
    let o = j_l_Object.$create__();
    let a = /**@type {Array<Object>} */ ($Arrays.$castToNative(o));
    return /**@type {Object} */ ($Casts.$to($thisArg, $Overlay));
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Object;
  }

  /**
   * @public
   */
  static $clinit() {
    $Overlay.$clinit = function() {};
    j_l_Object = goog.module.get('java.lang.Object$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
  }
};

$Util.$setClassMetadata($Overlay, $Util.$makeClassName('Object'));


exports = $Overlay;
//# sourceMappingURL=CastToTypeVariable$$Overlay.js.map