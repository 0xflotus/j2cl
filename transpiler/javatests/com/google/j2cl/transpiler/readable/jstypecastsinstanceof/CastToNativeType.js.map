[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [class CastToNativeType extends java_lang_Object {
  /**
...exports = CastToNativeType;
] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType"
[UNKNOWN] => [super();]
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [/**
   * Factory method corresponding to constructor 'CastToNativeType()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<ctor>"
[UNKNOWN] => [CastToNativeType.$clinit();]
[UNKNOWN] => [let $instance = new CastToNativeType();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToNativeType__();]
[UNKNOWN] => [return $instance;]
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [/**
   * Initialization from constructor 'CastToNativeType()'.
...    this.$init__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToNativeType();
  }] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToNativeType();]
[@SuppressWarnings({"unused", "rawtypes", "unchecked"})
  public void test() {
...    c = a instanceof NativeObject[];
  }] => [/**
   * @return {void}
...    c = $Arrays.$instanceIsOfNative(a);
  }] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[Object a = new NativeJsType();] => [let a = new NativeJsType();]
[a] => [a] "a"
[NativeJsType b = (NativeJsType) a;] => [let b = /**@type {NativeJsType} */ ($Casts.$to(a, NativeJsType$$Overlay));]
[b] => [b] "b"
[boolean c = a instanceof NativeJsType;] => [let c = NativeJsType$$Overlay.$isInstance(a);]
[c] => [c] "c"
[NativeJsType d[] = (NativeJsType[]) a;] => [let d = /**@type {Array<NativeJsType>} */ ($Arrays.$castToNative(a));]
[d] => [d] "d"
[c = a instanceof NativeJsType[];] => [c = $Arrays.$instanceIsOfNative(a);]
[NativeObject e = (NativeObject) a;] => [let e = /**@type {Object} */ ($Casts.$to(a, NativeObject$$Overlay));]
[e] => [e] "e"
[NativeObject<String, Object> f = (NativeObject<String, Object>) a;] => [let f = /**@type {Object<?string, *>} */ ($Casts.$to(a, NativeObject$$Overlay));]
[f] => [f] "f"
[c = a instanceof NativeObject;] => [c = NativeObject$$Overlay.$isInstance(a);]
[NativeObject[] g = (NativeObject[]) a;] => [let g = /**@type {Array<Object>} */ ($Arrays.$castToNative(a));]
[g] => [g] "g"
[NativeObject<String, Object>[] h = (NativeObject<String, Object>[]) a;] => [let h = /**@type {Array<Object<?string, *>>} */ ($Arrays.$castToNative(a));]
[h] => [h] "h"
[c = a instanceof NativeObject[];] => [c = $Arrays.$instanceIsOfNative(a);]
[UNKNOWN] => [java_lang_Object.$clinit();]
