[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [super();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<synthetic: ctor_js>"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [CastToNativeType.$clinit();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<synthetic: ctor_create>"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [let $instance = new CastToNativeType();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<synthetic: ctor_create>"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToNativeType__();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<synthetic: ctor_create>"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<synthetic: ctor_create>"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<init>"
[Object a = new NativeJsType();] => [let a = new NativeJsType();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[a] => [a] "a"
[NativeJsType b = (NativeJsType) a;] => [let b = /**@type {NativeJsType} */ ($Casts.$to(a, $Overlay));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[b] => [b] "b"
[boolean c = a instanceof NativeJsType;] => [let c = $Overlay.$isInstance(a);] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[c] => [c] "c"
[NativeJsType d[] = (NativeJsType[]) a;] => [let d = /**@type {Array<NativeJsType>} */ ($Arrays.$castToNative(a));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[d] => [d] "d"
[c = a instanceof NativeJsType[];] => [c = $Arrays.$instanceIsOfNative(a);] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[NativeObject e = (NativeObject) a;] => [let e = /**@type {Object} */ ($Casts.$to(a, NativeObject_$Overlay));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[e] => [e] "e"
[NativeObject<String, Object> f = (NativeObject<String, Object>) a;] => [let f = /**@type {Object<?string, *>} */ ($Casts.$to(a, NativeObject_$Overlay));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[f] => [f] "f"
[c = a instanceof NativeObject;] => [c = NativeObject_$Overlay.$isInstance(a);] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[NativeObject[] g = (NativeObject[]) a;] => [let g = /**@type {Array<Object>} */ ($Arrays.$castToNative(a));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[g] => [g] "g"
[NativeObject<String, Object>[] h = (NativeObject<String, Object>[]) a;] => [let h = /**@type {Array<Object<?string, *>>} */ ($Arrays.$castToNative(a));] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[h] => [h] "h"
[c = a instanceof NativeObject[];] => [c = $Arrays.$instanceIsOfNative(a);] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.test"
[public class CastToNativeType {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [j_l_Object.$clinit();] "com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToNativeType.<clinit>"
