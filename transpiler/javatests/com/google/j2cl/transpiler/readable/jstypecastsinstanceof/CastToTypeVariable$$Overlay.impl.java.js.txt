/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable$$Overlay.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.jstypecastsinstanceof.CastToTypeVariable.$Overlay$impl');


let $Util = goog.require('nativebootstrap.Util$impl');

let Object = goog.forwardDeclare('java.lang.Object$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $boolean = goog.forwardDeclare('vmbootstrap.primitives.$boolean$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

/** @constructor */ let $CastToTypeVariable = window.Object;


class CastToTypeVariable$$Overlay {
  /**
   * @template C_T
   * @param {$CastToTypeVariable<string, C_T>} $thisArg
   * @param {number} index
   * @param {boolean} value
   * @return {C_T}
   * @public
   */
  static m_setField__com_google_j2cl_transpiler_readable_jstypecastsinstanceof_CastToTypeVariable__int__boolean(
      $thisArg, index, value) {
    CastToTypeVariable$$Overlay.$clinit();
    let o = Object.$create__();
    let a = /**@type {Array<$CastToTypeVariable>} */ ($Arrays.$castToNative(o));
    return /**@type {$CastToTypeVariable} */ (
        $Casts.to($thisArg, CastToTypeVariable$$Overlay));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $CastToTypeVariable;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Object = goog.module.get('java.lang.Object$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $boolean = goog.module.get('vmbootstrap.primitives.$boolean$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
};



/**
 * Export class.
 */
exports = CastToTypeVariable$$Overlay;
//# sourceMappingURL=CastToTypeVariable$$Overlay.js.map