/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.simplegenerictype.SimpleGenericType.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.simplegenerictype.SimpleGenericType$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');


/**
 * @template C_T, C_S
 */
class SimpleGenericType extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {C_T} */
    this.f_first__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        null;
    /** @public {C_S} */
    this.f_second__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        null;
  }

  /**
   * Factory method corresponding to constructor 'SimpleGenericType(Object,
   * Object)'.
   * @template C_T, C_S
   * @param {C_T} t
   * @param {C_S} s
   * @return {!SimpleGenericType<C_T, C_S>}
   * @public
   */
  static $create__java_lang_Object__java_lang_Object(t, s) {
    SimpleGenericType.$clinit();
    let $instance = new SimpleGenericType();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType__java_lang_Object__java_lang_Object(
            t, s);
    return $instance;
  }

  /**
   * Initialization from constructor 'SimpleGenericType(Object, Object)'.
   * @param {C_T} t
   * @param {C_S} s
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType__java_lang_Object__java_lang_Object(
      t, s) {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType();
    this.f_first__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        t;
    this.f_second__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType =
        s;
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let g = /**@type {!SimpleGenericType<*, Error>} */ (
        SimpleGenericType.$create__java_lang_Object__java_lang_Object(
            java_lang_Object.$create__(), Error.$create__()));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SimpleGenericType;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleGenericType);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SimpleGenericType.$clinit = function() {};
    Error = goog.module.get('java.lang.Error$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplegenerictype_SimpleGenericType() {
  }
};

$Util.$setClassMetadata(
    SimpleGenericType,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.simplegenerictype.SimpleGenericType'));



/**
 * Export class.
 */
exports = SimpleGenericType;
//# sourceMappingURL=SimpleGenericType.js.map