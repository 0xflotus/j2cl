/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.nativetype.MyTypedArray$$Overlay.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.nativetype.MyTypedArray.$Overlay$impl');


const $Util = goog.require('nativebootstrap.Util$impl');


class $Overlay {
  /**
   * @template C_T
   * @param {Array<C_T>} $thisArg
   * @return {number}
   * @public
   */
  static m_size__com_google_j2cl_transpiler_readable_nativetype_MyTypedArray(
      $thisArg) {
    $Overlay.$clinit();
    return $thisArg.length;
  }

  /**
   * @template C_T
   * @param {Array<C_T>} $thisArg
   * @param {number} index
   * @return {C_T}
   * @public
   */
  static m_get__com_google_j2cl_transpiler_readable_nativetype_MyTypedArray__int(
      $thisArg, index) {
    $Overlay.$clinit();
    return null;
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Array;
  }

  /**
   * @public
   */
  static $clinit() {
    $Overlay.$clinit = function() {};
  }
};

$Util.$setClassMetadata($Overlay, $Util.$makeClassName('Array'));


exports = $Overlay;
//# sourceMappingURL=MyTypedArray$$Overlay.js.map