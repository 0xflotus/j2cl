/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let A$B = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.A$B$impl');
let A = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.A$impl');
let AnonymousInnerClass$1 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$1$impl');
let AnonymousInnerClass$1C = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$1C$impl');
let AnonymousInnerClass$2 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$2$impl');
let AnonymousInnerClass$3 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$3$impl');
let AnonymousInnerClass$InnerClass = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$InnerClass$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class AnonymousInnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!AnonymousInnerClass}
   * @public
   * @nocollapse
   */
  static $create() {
    AnonymousInnerClass.$clinit();
    let instance = new AnonymousInnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass();
  }

  /**
   * @param {number} arg
   * @return {void}
   * @public
   */
  m_test__int(arg) {
    let ic =
        AnonymousInnerClass$1
            .$create__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass(
                this, this);
    let a = A.$create();
    let b =
        AnonymousInnerClass$2
            .$create__com_google_j2cl_transpiler_readable_anonymousinnerclass_A__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass(
                a, this);
    let c =
        AnonymousInnerClass$3
            .$create__int__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass(
                arg, this);
  }

  /**
   * @return {AnonymousInnerClass$InnerClass}
   * @public
   */
  m_$create_AnonymousInnerClass$InnerClass() {
    return AnonymousInnerClass$InnerClass
        .$create__com_google_j2cl_transpiler_readable_anonymousinnerclass_AnonymousInnerClass(
            this);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof AnonymousInnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnonymousInnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    AnonymousInnerClass.$clinit();
    if (!AnonymousInnerClass.$classAnonymousInnerClass_) {
      AnonymousInnerClass.$classAnonymousInnerClass_ = Class.$createForClass(
          $Util.$generateId('AnonymousInnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass'));
    }
    return AnonymousInnerClass.$classAnonymousInnerClass_;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    A$B = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.A$B$impl');
    A = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.A$impl');
    AnonymousInnerClass$1 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$1$impl');
    AnonymousInnerClass$1C = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$1C$impl');
    AnonymousInnerClass$2 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$2$impl');
    AnonymousInnerClass$3 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$3$impl');
    AnonymousInnerClass$InnerClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousinnerclass.AnonymousInnerClass$InnerClass$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
AnonymousInnerClass.$classAnonymousInnerClass_ = null;



/**
 * Export class.
 */
exports = AnonymousInnerClass;
