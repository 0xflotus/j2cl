/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/breakstatement/BreakStatement.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.breakstatement.BreakStatementModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;


class BreakStatement extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_breakstatement_BreakStatement() {}

  /**
   * @return {void}
   * @public
   */
  m_test() {
    for (;;) {
      break;
    }
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!BreakStatement}
   * @public
   * @nocollapse
   */
  static $create() {
    BreakStatement.$clinit();
    let instance = new BreakStatement;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_breakstatement_BreakStatement();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_breakstatement_BreakStatement() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_breakstatement_BreakStatement();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof BreakStatement; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, BreakStatement);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!BreakStatement.$classBreakStatement) {
      BreakStatement.$classBreakStatement = Class.$createForClass(
          $Util.$generateId('BreakStatement'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.breakstatement.BreakStatement'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.breakstatement.BreakStatement'));
    }
    return BreakStatement.$classBreakStatement;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.BreakStatement = BreakStatement;
