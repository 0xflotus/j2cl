/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall$impl');


let Main = goog.require('gen.com.google.j2cl.transpiler.readable.jsvarargs.Main$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let QualifiedSuperMethodCall$InnerClass = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall$InnerClass$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class QualifiedSuperMethodCall extends Main {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!QualifiedSuperMethodCall}
   * @public
   */
  static $create() {
    QualifiedSuperMethodCall.$clinit();
    let $instance = new QualifiedSuperMethodCall;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsvarargs_QualifiedSuperMethodCall();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_jsvarargs_QualifiedSuperMethodCall() {
    this.$ctor__com_google_j2cl_transpiler_readable_jsvarargs_Main__int(0);
    this.$init__com_google_j2cl_transpiler_readable_jsvarargs_QualifiedSuperMethodCall();
  }

  /**
   * @return {QualifiedSuperMethodCall$InnerClass}
   * @public
   */
  m_$create_QualifiedSuperMethodCall$InnerClass() {
    return QualifiedSuperMethodCall$InnerClass
        .$create__com_google_j2cl_transpiler_readable_jsvarargs_QualifiedSuperMethodCall(
            this);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof QualifiedSuperMethodCall;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, QualifiedSuperMethodCall);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    QualifiedSuperMethodCall.$clinit();
    if (!QualifiedSuperMethodCall.$classQualifiedSuperMethodCall_) {
      QualifiedSuperMethodCall
          .$classQualifiedSuperMethodCall_ = Class.$createForClass(
          $Util.$generateId('QualifiedSuperMethodCall'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall'));
    }
    return QualifiedSuperMethodCall.$classQualifiedSuperMethodCall_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return QualifiedSuperMethodCall.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    QualifiedSuperMethodCall$InnerClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.jsvarargs.QualifiedSuperMethodCall$InnerClass$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Main.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsvarargs_QualifiedSuperMethodCall() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
QualifiedSuperMethodCall.$classQualifiedSuperMethodCall_ = null;



/**
 * Export class.
 */
exports = QualifiedSuperMethodCall;
//# sourceMappingURL=QualifiedSuperMethodCall.js.map