/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.objectmap.ObjectMap$$Overlay.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.objectmap.ObjectMap.$Overlay$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_Object = goog.forwardDeclare('java.lang.Object$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');


class $Overlay {
  /**
   * @template M_T
   * @return {Object<string, M_T>}
   * @public
   */
  static m_create___$pp_com_google_j2cl_transpiler_readable_objectmap() {
    $Overlay.$clinit();
    return null;
  }

  /**
   * @return {Object<string, ?string>}
   * @public
   */
  static m_createForString___$pp_com_google_j2cl_transpiler_readable_objectmap() {
    $Overlay.$clinit();
    return null;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Object;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $Overlay.$clinit = function() {};
    java_lang_Object = goog.module.get('java.lang.Object$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
  }
};

$Util.$setClassMetadata($Overlay, $Util.$makeClassName('Object'));


/**
 * Export class.
 */
exports = $Overlay;
//# sourceMappingURL=ObjectMap$$Overlay.js.map