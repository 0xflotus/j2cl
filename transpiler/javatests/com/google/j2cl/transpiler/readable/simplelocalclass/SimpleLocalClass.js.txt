/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/simplelocalclass/SimpleLocalClass.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClassModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $int = goog.require('vmbootstrap.PrimitivesModule').$int;


class SimpleLocalClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass() {
  }

  /**
   * @param {number} p
   * @return {void}
   * @public
   */
  m_test__int(p) {
    let localVar = 1;
    SimpleLocalClass$1InnerClass.$create(localVar, p, this).m_fun();
    SimpleLocalClass$1InnerClassWithoutCaptures.$create(this);
  }

  /**
   * @return {void}
   * @public
   */
  m_fun() { let localVar = 1; }

  /**
   * A particular Java constructor as a factory method.
   * @return {!SimpleLocalClass}
   * @public
   * @nocollapse
   */
  static $create() {
    SimpleLocalClass.$clinit();
    let instance = new SimpleLocalClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SimpleLocalClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLocalClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!SimpleLocalClass.$classSimpleLocalClass) {
      SimpleLocalClass.$classSimpleLocalClass = Class.$createForClass(
          $Util.$generateId('SimpleLocalClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass'));
    }
    return SimpleLocalClass.$classSimpleLocalClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.SimpleLocalClass = SimpleLocalClass;



class SimpleLocalClass$1InnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {number}
     */
    this.$c_p = 0;
    /**
     * @public {SimpleLocalClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass() {
  }

  /**
   * @return {number}
   * @public
   */
  m_fun() { return this.$c_localVar + this.$c_p; }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {SimpleLocalClass} $outer_this
   * @return {!SimpleLocalClass$1InnerClass}
   * @package
   * @nocollapse
   */
  static $create($c_localVar, $c_p, $outer_this) {
    SimpleLocalClass$1InnerClass.$clinit();
    let instance = new SimpleLocalClass$1InnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass(
            $c_localVar, $c_p, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {SimpleLocalClass} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass(
      $c_localVar, $c_p, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.$c_p = $c_p;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof SimpleLocalClass$1InnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLocalClass$1InnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!SimpleLocalClass$1InnerClass.$classSimpleLocalClass$1InnerClass) {
      SimpleLocalClass$1InnerClass
          .$classSimpleLocalClass$1InnerClass = Class.$createForClass(
          $Util.$generateId('1InnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass.1InnerClass'));
    }
    return SimpleLocalClass$1InnerClass.$classSimpleLocalClass$1InnerClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



class SimpleLocalClass$1InnerClassWithoutCaptures extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {SimpleLocalClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {SimpleLocalClass} $outer_this
   * @return {!SimpleLocalClass$1InnerClassWithoutCaptures}
   * @package
   * @nocollapse
   */
  static $create($outer_this) {
    SimpleLocalClass$1InnerClassWithoutCaptures.$clinit();
    let instance = new SimpleLocalClass$1InnerClassWithoutCaptures;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {SimpleLocalClass} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$1InnerClassWithoutCaptures();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof SimpleLocalClass$1InnerClassWithoutCaptures;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor,
                               SimpleLocalClass$1InnerClassWithoutCaptures);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!SimpleLocalClass$1InnerClassWithoutCaptures
             .$classSimpleLocalClass$1InnerClassWithoutCaptures) {
      SimpleLocalClass$1InnerClassWithoutCaptures
          .$classSimpleLocalClass$1InnerClassWithoutCaptures = Class.$createForClass(
          $Util.$generateId('1InnerClassWithoutCaptures'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClassWithoutCaptures'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass.1InnerClassWithoutCaptures'));
    }
    return SimpleLocalClass$1InnerClassWithoutCaptures
        .$classSimpleLocalClass$1InnerClassWithoutCaptures;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



class SimpleLocalClass$2InnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @package {number}
     */
    this.f_field__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass =
        0;
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {SimpleLocalClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass() {
    this.f_field__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass =
        this.$c_localVar;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_localVar
   * @param {SimpleLocalClass} $outer_this
   * @return {!SimpleLocalClass$2InnerClass}
   * @package
   * @nocollapse
   */
  static $create($c_localVar, $outer_this) {
    SimpleLocalClass$2InnerClass.$clinit();
    let instance = new SimpleLocalClass$2InnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass(
            $c_localVar, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_localVar
   * @param {SimpleLocalClass} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass(
      $c_localVar, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass$2InnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof SimpleLocalClass$2InnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLocalClass$2InnerClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!SimpleLocalClass$2InnerClass.$classSimpleLocalClass$2InnerClass) {
      SimpleLocalClass$2InnerClass
          .$classSimpleLocalClass$2InnerClass = Class.$createForClass(
          $Util.$generateId('2InnerClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$2InnerClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass.2InnerClass'));
    }
    return SimpleLocalClass$2InnerClass.$classSimpleLocalClass$2InnerClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;
