/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let SimpleLocalClass$1InnerClass = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClass$impl');
let SimpleLocalClass$1InnerClassWithoutCaptures = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClassWithoutCaptures$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class SimpleLocalClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass() {
  }

  /**
   * @param {number} p
   * @return {void}
   * @public
   */
  m_test__int(p) {
    let localVar = 1;
    SimpleLocalClass$1InnerClass.$create(localVar, p, this).m_fun();
    SimpleLocalClass$1InnerClassWithoutCaptures.$create(this);
  }

  /**
   * @return {void}
   * @public
   */
  m_fun() { let localVar = 1; }

  /**
   * A particular Java constructor as a factory method.
   * @return {!SimpleLocalClass}
   * @public
   * @nocollapse
   */
  static $create() {
    SimpleLocalClass.$clinit();
    let instance = new SimpleLocalClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelocalclass_SimpleLocalClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SimpleLocalClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLocalClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    SimpleLocalClass.$clinit();
    if (!SimpleLocalClass.$classSimpleLocalClass) {
      SimpleLocalClass.$classSimpleLocalClass = Class.$createForClass(
          $Util.$generateId('SimpleLocalClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass'));
    }
    return SimpleLocalClass.$classSimpleLocalClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    SimpleLocalClass$1InnerClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClass$impl');
    SimpleLocalClass$1InnerClassWithoutCaptures = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelocalclass.SimpleLocalClass$1InnerClassWithoutCaptures$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = SimpleLocalClass;
