[public class Main {
  public void testCallBySuperParent() {
...  }
}] => [class Main extends java_lang_Object {
  /**
...exports = Main;
] "com.google.j2cl.transpiler.readable.instancejsmethods.Main"
[public class Main {
  public void testCallBySuperParent() {
...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.instancejsmethods.Main"
[UNKNOWN] => [super();]
[public class Main {
  public void testCallBySuperParent() {
...  }
}] => [/**
   * Factory method corresponding to constructor 'Main()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.instancejsmethods.Main.<ctor>"
[UNKNOWN] => [Main.$clinit();]
[UNKNOWN] => [let $instance = new Main();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_instancejsmethods_Main__();]
[UNKNOWN] => [return $instance;]
[public class Main {
  public void testCallBySuperParent() {
...  }
}] => [/**
   * Initialization from constructor 'Main()'.
...    this.$init__com_google_j2cl_transpiler_readable_instancejsmethods_Main();
  }] "com.google.j2cl.transpiler.readable.instancejsmethods.Main.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_instancejsmethods_Main();]
[public void testCallBySuperParent() {
    SuperParent sp = new SuperParent();
...    intf.intfFoo();
  }] => [/**
   * @return {void}
...    intf.m_intfFoo__();
  }] "com.google.j2cl.transpiler.readable.instancejsmethods.Main.testCallBySuperParent"
[SuperParent sp = new SuperParent();] => [let sp = SuperParent.$create__();]
[sp] => [sp] "sp"
[SuperParent p = new Parent();] => [let p = Parent.$create__();]
[p] => [p] "p"
[SuperParent c = new Child();] => [let c = Child.$create__();]
[c] => [c] "c"
[Parent pp = new Parent();] => [let pp = Parent.$create__();]
[pp] => [pp] "pp"
[Parent cc = new Child();] => [let cc = Child.$create__();]
[cc] => [cc] "cc"
[MyInterface intf = new Child();] => [let intf = Child.$create__();]
[intf] => [intf] "intf"
[sp.fun(12, 35);] => [sp.m_fun__int__int(12, 35);]
[sp.bar(6, 7);] => [sp.m_bar__int__int(6, 7);]
[p.fun(12, 35);] => [p.m_fun__int__int(12, 35);]
[p.bar(6, 7);] => [p.m_bar__int__int(6, 7);]
[c.fun(12, 35);] => [c.m_fun__int__int(12, 35);]
[c.bar(6, 7);] => [c.m_bar__int__int(6, 7);]
[pp.foo(1);] => [pp.myFoo(1);]
[cc.foo(1);] => [cc.myFoo(1);]
[intf.intfFoo();] => [intf.m_intfFoo__();]
[public static void testCallByConcreteType() {
    SuperParent sp = new SuperParent();
...    c.intfFoo();
  }] => [/**
   * @return {void}
...    c.intfFoo();
  }] "com.google.j2cl.transpiler.readable.instancejsmethods.Main.testCallByConcreteType"
[UNKNOWN] => [Main.$clinit();]
[SuperParent sp = new SuperParent();] => [let sp = SuperParent.$create__();]
[sp] => [sp] "sp"
[Parent p = new Parent();] => [let p = Parent.$create__();]
[p] => [p] "p"
[Child c = new Child();] => [let c = Child.$create__();]
[c] => [c] "c"
[sp.fun(12, 35);] => [sp.m_fun__int__int(12, 35);]
[sp.bar(6, 7);] => [sp.m_bar__int__int(6, 7);]
[p.fun(12, 35);] => [p.sum(12, 35);]
[p.bar(6, 7);] => [p.bar(6, 7);]
[p.foo(1);] => [p.myFoo(1);]
[c.fun(12, 35);] => [c.sum(12, 35);]
[c.bar(6, 7);] => [c.bar(6, 7);]
[c.foo(1);] => [c.myFoo(1);]
[c.intfFoo();] => [c.intfFoo();]
[UNKNOWN] => [java_lang_Object.$clinit();]
