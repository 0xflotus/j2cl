/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.devirtualizedcalls.NumberCalls.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.devirtualizedcalls.NumberCalls$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');
let $LongUtils = goog.require('vmbootstrap.LongUtils$impl');

let Boolean = goog.forwardDeclare('java.lang.Boolean$impl');
let Byte = goog.forwardDeclare('java.lang.Byte$impl');
let Character = goog.forwardDeclare('java.lang.Character$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');
let Double = goog.forwardDeclare('java.lang.Double$impl');
let Float = goog.forwardDeclare('java.lang.Float$impl');
let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let Long = goog.forwardDeclare('java.lang.Long$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let Short = goog.forwardDeclare('java.lang.Short$impl');
let $Numbers = goog.forwardDeclare('vmbootstrap.Numbers$impl');


class NumberCalls extends Object {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!NumberCalls}
   * @public
   */
  static $create() {
    NumberCalls.$clinit();
    let $instance = new NumberCalls();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_NumberCalls();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_NumberCalls() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_devirtualizedcalls_NumberCalls();
  }

  /**
   * @return {void}
   * @public
   */
  m_main() {
    let i = Integer.$create__int(1);
    $Numbers.m_byteValue__java_lang_Number(i);
    $Numbers.m_doubleValue__java_lang_Number(i);
    $Numbers.m_floatValue__java_lang_Number(i);
    $Numbers.m_intValue__java_lang_Number(i);
    $Numbers.m_longValue__java_lang_Number(i);
    $Numbers.m_shortValue__java_lang_Number(i);
    let ii = Integer.$create__int(1);
    ii.m_byteValue();
    ii.m_doubleValue();
    ii.m_floatValue();
    ii.m_intValue();
    ii.m_longValue();
    ii.m_shortValue();
    let d = Double.$create__double(1.1);
    $Numbers.m_byteValue__java_lang_Number(d);
    $Numbers.m_doubleValue__java_lang_Number(d);
    $Numbers.m_floatValue__java_lang_Number(d);
    $Numbers.m_intValue__java_lang_Number(d);
    $Numbers.m_longValue__java_lang_Number(d);
    $Numbers.m_shortValue__java_lang_Number(d);
    let dd = Double.$create__double(1.1);
    Double.m_byteValue__java_lang_Double(dd);
    Double.m_doubleValue__java_lang_Double(dd);
    Double.m_floatValue__java_lang_Double(dd);
    Double.m_intValue__java_lang_Double(dd);
    Double.m_longValue__java_lang_Double(dd);
    Double.m_shortValue__java_lang_Double(dd);
    let s = Short.$create__short(1);
    $Numbers.m_byteValue__java_lang_Number(s);
    $Numbers.m_doubleValue__java_lang_Number(s);
    $Numbers.m_floatValue__java_lang_Number(s);
    $Numbers.m_intValue__java_lang_Number(s);
    $Numbers.m_longValue__java_lang_Number(s);
    $Numbers.m_shortValue__java_lang_Number(s);
    let ss = Short.$create__short(1);
    ss.m_byteValue();
    ss.m_doubleValue();
    ss.m_floatValue();
    ss.m_intValue();
    ss.m_longValue();
    ss.m_shortValue();
    let b = Byte.$create__byte(1);
    $Numbers.m_byteValue__java_lang_Number(b);
    $Numbers.m_doubleValue__java_lang_Number(b);
    $Numbers.m_floatValue__java_lang_Number(b);
    $Numbers.m_intValue__java_lang_Number(b);
    $Numbers.m_longValue__java_lang_Number(b);
    $Numbers.m_shortValue__java_lang_Number(b);
    let bb = Byte.$create__byte(1);
    bb.m_byteValue();
    bb.m_doubleValue();
    bb.m_floatValue();
    bb.m_intValue();
    bb.m_longValue();
    bb.m_shortValue();
    let f = Float.$create__float(1.100000023841858);
    $Numbers.m_byteValue__java_lang_Number(f);
    $Numbers.m_doubleValue__java_lang_Number(f);
    $Numbers.m_floatValue__java_lang_Number(f);
    $Numbers.m_intValue__java_lang_Number(f);
    $Numbers.m_longValue__java_lang_Number(f);
    $Numbers.m_shortValue__java_lang_Number(f);
    let ff = Float.$create__float(1.100000023841858);
    ff.m_byteValue();
    ff.m_doubleValue();
    ff.m_floatValue();
    ff.m_intValue();
    ff.m_longValue();
    ff.m_shortValue();
    let l = Long.$create__long($LongUtils.$fromInt(1));
    $Numbers.m_byteValue__java_lang_Number(l);
    $Numbers.m_doubleValue__java_lang_Number(l);
    $Numbers.m_floatValue__java_lang_Number(l);
    $Numbers.m_intValue__java_lang_Number(l);
    $Numbers.m_longValue__java_lang_Number(l);
    $Numbers.m_shortValue__java_lang_Number(l);
    let ll = Long.$create__long($LongUtils.$fromInt(1));
    ll.m_byteValue();
    ll.m_doubleValue();
    ll.m_floatValue();
    ll.m_intValue();
    ll.m_longValue();
    ll.m_shortValue();
    let c = Character.$create__char(97 /* 'a' */);
    c.m_charValue();
    let bool = Boolean.$create__boolean(true);
    Boolean.m_booleanValue__java_lang_Boolean(bool);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof NumberCalls; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NumberCalls);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Boolean = goog.module.get('java.lang.Boolean$impl');
    Byte = goog.module.get('java.lang.Byte$impl');
    Character = goog.module.get('java.lang.Character$impl');
    Class = goog.module.get('java.lang.Class$impl');
    Double = goog.module.get('java.lang.Double$impl');
    Float = goog.module.get('java.lang.Float$impl');
    Integer = goog.module.get('java.lang.Integer$impl');
    Long = goog.module.get('java.lang.Long$impl');
    Number = goog.module.get('java.lang.Number$impl');
    Short = goog.module.get('java.lang.Short$impl');
    $Numbers = goog.module.get('vmbootstrap.Numbers$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_devirtualizedcalls_NumberCalls() {}
};

$Util.$setClassMetadata(
    NumberCalls,
    'com.google.j2cl.transpiler.readable.devirtualizedcalls.NumberCalls');



/**
 * Export class.
 */
exports = NumberCalls;
//# sourceMappingURL=NumberCalls.js.map