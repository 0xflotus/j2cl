/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.devirtualizedcalls.CharSequenceCalls.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.devirtualizedcalls.CharSequenceCalls$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let CharSequence = goog.forwardDeclare('java.lang.CharSequence$impl');
let $CharSequences = goog.forwardDeclare('vmbootstrap.CharSequences$impl');


class CharSequenceCalls extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'CharSequenceCalls()'.
   * @return {!CharSequenceCalls}
   * @public
   */
  static $create__() {
    CharSequenceCalls.$clinit();
    let $instance = new CharSequenceCalls();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_CharSequenceCalls__();
    return $instance;
  }

  /**
   * Initialization from constructor 'CharSequenceCalls()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_CharSequenceCalls__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {(CharSequence|string)} cs
   * @return {void}
   * @public
   */
  m_test__java_lang_CharSequence(cs) {
    $CharSequences.m_charAt__java_lang_CharSequence__int(cs, 0);
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let s = 's';
    this.m_test__java_lang_CharSequence(s);
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof CharSequenceCalls;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CharSequenceCalls);
  }

  /**
   * @public
   */
  static $clinit() {
    CharSequenceCalls.$clinit = function() {};
    $CharSequences = goog.module.get('vmbootstrap.CharSequences$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    CharSequenceCalls,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.devirtualizedcalls.CharSequenceCalls'));



exports = CharSequenceCalls;
//# sourceMappingURL=CharSequenceCalls.js.map