/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.devirtualizedcalls.StringCalls.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.devirtualizedcalls.StringCalls$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');


class StringCalls extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!StringCalls}
   * @public
   */
  static $create() {
    StringCalls.$clinit();
    let $instance = new StringCalls;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_StringCalls();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_StringCalls() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_devirtualizedcalls_StringCalls();
  }

  /**
   * @return {void}
   * @public
   */
  m_main() {
    let literal = "String";
    let sub = String.m_substring__java_lang_String__int(literal, 1);
    let sub2 = String.m_substring__java_lang_String__int__int(literal, 2, 3);
    let trimmed = String.m_trim__java_lang_String(literal);
    let newString = String.m_toString__java_lang_String(literal);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof StringCalls; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, StringCalls);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    StringCalls.$clinit();
    if (!StringCalls.$classStringCalls_) {
      StringCalls.$classStringCalls_ = Class.$createForClass(
          $Util.$generateId('StringCalls'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.devirtualizedcalls.StringCalls'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.devirtualizedcalls.StringCalls'));
    }
    return StringCalls.$classStringCalls_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return StringCalls.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_devirtualizedcalls_StringCalls() {}
};


/**
 * The class literal field.
 * @private {Class}
 */
StringCalls.$classStringCalls_ = null;



/**
 * Export class.
 */
exports = StringCalls;
//# sourceMappingURL=StringCalls.js.map