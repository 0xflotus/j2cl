/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.devirtualizedcalls.ObjectCalls.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.devirtualizedcalls.ObjectCalls$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');


class ObjectCalls extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!ObjectCalls}
   * @public
   */
  static $create__() {
    ObjectCalls.$clinit();
    let $instance = new ObjectCalls();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_ObjectCalls__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_devirtualizedcalls_ObjectCalls__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_devirtualizedcalls_ObjectCalls();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let object = java_lang_Object.$create__();
    $Objects.m_equals__java_lang_Object__java_lang_Object(object, object);
    $Objects.m_hashCode__java_lang_Object(object);
    $Objects.m_toString__java_lang_Object(object);
    $Objects.m_getClass__java_lang_Object(object);
    let objectCalls =
        /**@type {!Array<ObjectCalls>} */ ($Arrays.$create([1], ObjectCalls));
    $Objects.m_equals__java_lang_Object__java_lang_Object(
        objectCalls, objectCalls);
    $Objects.m_hashCode__java_lang_Object(objectCalls);
    $Objects.m_toString__java_lang_Object(objectCalls);
    $Objects.m_getClass__java_lang_Object(objectCalls);
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    this.equals(java_lang_Object.$create__());
    this.hashCode();
    this.toString();
    this.m_getClass__();
    this.equals(java_lang_Object.$create__());
    this.hashCode();
    this.toString();
    this.m_getClass__();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof ObjectCalls;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ObjectCalls);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Objects = goog.module.get('vmbootstrap.Objects$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_devirtualizedcalls_ObjectCalls() {}
};

$Util.$setClassMetadata(
    ObjectCalls,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.devirtualizedcalls.ObjectCalls'));



/**
 * Export class.
 */
exports = ObjectCalls;
//# sourceMappingURL=ObjectCalls.js.map