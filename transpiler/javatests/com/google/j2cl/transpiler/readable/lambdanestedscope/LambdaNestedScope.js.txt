/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/lambdanestedscope/LambdaNestedScope.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScopeModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;


class LambdaNestedScope extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope() {
  }

  /**
   * @return {void}
   * @public
   */
  m_test() { let runner = LambdaNestedScope$lambda$0.$create(this); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LambdaNestedScope}
   * @public
   * @nocollapse
   */
  static $create() {
    LambdaNestedScope.$clinit();
    let instance = new LambdaNestedScope;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof LambdaNestedScope; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaNestedScope);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaNestedScope.$classLambdaNestedScope) {
      LambdaNestedScope.$classLambdaNestedScope = Class.$createForClass(
          $Util.$generateId('LambdaNestedScope'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope'));
    }
    return LambdaNestedScope.$classLambdaNestedScope;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.LambdaNestedScope = LambdaNestedScope;



/**
 * @interface
 */
class LambdaNestedScope$Runner {
  /**
   * @return {*}
   * @public
   */
  m_run() {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$Runner =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$Runner;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$Runner;
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaNestedScope$Runner.$classLambdaNestedScope$Runner) {
      LambdaNestedScope$Runner
          .$classLambdaNestedScope$Runner = Class.$createForInterface(
          $Util.$generateId('Runner'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$Runner'),
          null,
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope.Runner'));
    }
    return LambdaNestedScope$Runner.$classLambdaNestedScope$Runner;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {}
}
;


LambdaNestedScope$Runner.$markImplementor(
    /** @type {Function} */ (LambdaNestedScope$Runner));

/**
 * Export class.
 */
exports.LambdaNestedScope$Runner = LambdaNestedScope$Runner;



class LambdaNestedScope$1 extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {LambdaNestedScope}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1 =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {LambdaNestedScope} $outer_this
   * @return {!LambdaNestedScope$1}
   * @package
   * @nocollapse
   */
  static $create($outer_this) {
    LambdaNestedScope$1.$clinit();
    let instance = new LambdaNestedScope$1;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {LambdaNestedScope} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1(
      $outer_this) {
    this.$ctor__java_lang_Object();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1 =
        $outer_this;
    this.$init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LambdaNestedScope$1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaNestedScope$1);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaNestedScope$1.$classLambdaNestedScope$1) {
      LambdaNestedScope$1.$classLambdaNestedScope$1 = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$1'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope.1'));
    }
    return LambdaNestedScope$1.$classLambdaNestedScope$1;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * @implements {LambdaNestedScope$Runner}
 */
class LambdaNestedScope$lambda$0 extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {LambdaNestedScope}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0 =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0() {
  }

  /**
   * @return {*}
   * @private
   */
  lambda$0() {
    return LambdaNestedScope$1.$create(
        this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0);
  }

  /**
   * @override
   * @return {*}
   * @public
   */
  m_run() { return this.lambda$0(); }

  /**
   * A particular Java constructor as a factory method.
   * @param {LambdaNestedScope} $outer_this
   * @return {!LambdaNestedScope$lambda$0}
   * @private
   * @nocollapse
   */
  static $create($outer_this) {
    LambdaNestedScope$lambda$0.$clinit();
    let instance = new LambdaNestedScope$lambda$0;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {LambdaNestedScope} $outer_this
   * @private
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0(
      $outer_this) {
    this.$ctor__java_lang_Object();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0 =
        $outer_this;
    this.$init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$lambda$0();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LambdaNestedScope$lambda$0;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaNestedScope$lambda$0);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!LambdaNestedScope$lambda$0.$classLambdaNestedScope$lambda$0) {
      LambdaNestedScope$lambda$0
          .$classLambdaNestedScope$lambda$0 = Class.$createForClass(
          $Util.$generateId('lambda$0'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$lambda$0'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope.lambda.0'));
    }
    return LambdaNestedScope$lambda$0.$classLambdaNestedScope$lambda$0;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


LambdaNestedScope$Runner.$markImplementor(LambdaNestedScope$lambda$0);
