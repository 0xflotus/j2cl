/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$1.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$1$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LambdaNestedScope = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class LambdaNestedScope$1 extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {LambdaNestedScope}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1 =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {LambdaNestedScope} $outer_this
   * @return {!LambdaNestedScope$1}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope(
      $outer_this) {
    LambdaNestedScope$1.$clinit();
    let $instance = new LambdaNestedScope$1;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope(
            $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {LambdaNestedScope} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1 =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LambdaNestedScope$1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaNestedScope$1);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    LambdaNestedScope$1.$clinit();
    if (!LambdaNestedScope$1.$classLambdaNestedScope$1_) {
      LambdaNestedScope$1.$classLambdaNestedScope$1_ = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope.1'));
    }
    return LambdaNestedScope$1.$classLambdaNestedScope$1_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return LambdaNestedScope$1.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LambdaNestedScope = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.lambdanestedscope.LambdaNestedScope$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdanestedscope_LambdaNestedScope$1() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
LambdaNestedScope$1.$classLambdaNestedScope$1_ = null;



/**
 * Export class.
 */
exports = LambdaNestedScope$1;
//# sourceMappingURL=LambdaNestedScope$1.js.map