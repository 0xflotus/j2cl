/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.Main.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.Main$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let FooCallsSuperObjectMethod = goog.forwardDeclare('com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.FooCallsSuperObjectMethod$impl');
let SubNumber = goog.forwardDeclare('com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.SubNumber$impl');
let $Numbers = goog.forwardDeclare('vmbootstrap.Numbers$impl');


class Main extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Main()'.
   * @return {!Main}
   * @public
   */
  static $create__() {
    Main.$clinit();
    let $instance = new Main();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_devirtualizedsupermethodcall_Main__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Main()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_devirtualizedsupermethodcall_Main__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let fooCallsSuperObjectMethods = FooCallsSuperObjectMethod.$create__();
    fooCallsSuperObjectMethods.hashCode();
    let sn = SubNumber.$create__();
    $Numbers.m_byteValue__java_lang_Number(sn);
    sn.m_doubleValue__();
    sn.m_floatValue__();
    sn.m_intValue__();
    $Numbers.m_shortValue__java_lang_Number(sn);
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * @public
   */
  static $clinit() {
    Main.$clinit = function() {};
    FooCallsSuperObjectMethod = goog.module.get(
        'com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.FooCallsSuperObjectMethod$impl');
    SubNumber = goog.module.get(
        'com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.SubNumber$impl');
    $Numbers = goog.module.get('vmbootstrap.Numbers$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    Main,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.devirtualizedsupermethodcall.Main'));



exports = Main;
//# sourceMappingURL=Main.js.map