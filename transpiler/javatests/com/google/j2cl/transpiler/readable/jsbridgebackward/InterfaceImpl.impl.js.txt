/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.jsbridgebackward.InterfaceImpl.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.jsbridgebackward.InterfaceImpl$impl');


let MyJsInterface = goog.require('com.google.j2cl.transpiler.readable.jsbridgebackward.MyJsInterface$impl');
let A = goog.require('gen.com.google.j2cl.transpiler.readable.jsbridgebackward.A$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @implements {MyJsInterface}
 */
class InterfaceImpl extends A {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!InterfaceImpl}
   * @public
   */
  static $create() {
    InterfaceImpl.$clinit();
    let $instance = new InterfaceImpl();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jsbridgebackward_InterfaceImpl();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_jsbridgebackward_InterfaceImpl() {
    this.$ctor__com_google_j2cl_transpiler_readable_jsbridgebackward_A();
    this.$init__com_google_j2cl_transpiler_readable_jsbridgebackward_InterfaceImpl();
  }

  /**
   * Bridge method for exposing non-JsMethod.
   * @override
   * @param {number} arg0
   * @return {number}
   * @public
   */
  foo(arg0) { return this.m_foo__int(arg0); }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof InterfaceImpl; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InterfaceImpl);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    A.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_jsbridgebackward_InterfaceImpl() {}
};

$Util.$setClassMetadata(
    InterfaceImpl,
    'com.google.j2cl.transpiler.readable.jsbridgebackward.InterfaceImpl');


MyJsInterface.$markImplementor(InterfaceImpl);


/**
 * Export class.
 */
exports = InterfaceImpl;
//# sourceMappingURL=InterfaceImpl.js.map