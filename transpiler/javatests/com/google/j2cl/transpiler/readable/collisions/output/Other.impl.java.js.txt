/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.collisions.Other.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire,
 * suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables,
 * uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.collisions.Other$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template C_T
 */
class Other extends j_l_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Other()'.
   * @template C_T
   * @return {!Other<C_T>}
   * @public
   */
  static $create__() {
    Other.$clinit();
    let $instance = new Other();
    $instance.$ctor__com_google_j2cl_transpiler_readable_collisions_Other__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Other()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_collisions_Other__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_collisions_Other();
  }

  /**
   * @template M_T
   * @return {M_T}
   * @public
   */
  m_m___$pp_com_google_j2cl_transpiler_readable_collisions() {
    let M_T = 5;
    let o = /**@type {Other<*>} */ ($Casts.$to(null, Other));
    return null;
  }

  /**
   * @return {void}
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_collisions_Other() {
    let C_T = 3;
    let o = /**@type {Other<C_T>} */ ($Casts.$to(null, Other));
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Other;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Other);
  }

  /**
   * @public
   */
  static $clinit() {
    Other.$clinit = function() {};
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    j_l_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    Other,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.collisions.Other'));



exports = Other;
//# sourceMappingURL=Other.js.map