/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/arrayliteral/ArrayLiteral.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.arrayliteral.ArrayLiteralModule');


var Class = goog.require('gen.java.lang.CoreModule').Class;
var Object = goog.require('gen.java.lang.CoreModule').Object;
var $Util = goog.require('nativebootstrap.UtilModule').Util;
var $Arrays = goog.require('vmbootstrap.ArraysModule').Arrays;
var $int = goog.require('vmbootstrap.PrimitivesModule').$int;


class ArrayLiteral extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_arrayliteral_ArrayLiteral() {}

  /**
   * @return {void}
   * @public
   */
  m_main() {
    let object = Object.$create();
    let ints = /**@type {Array<number>} */ ($Arrays.$init([0, 1, 2], $int));
    let objects2d = /**@type {Array<Array<*>>} */ (
        $Arrays.$init([[object, object], [object, object]], Object, 2));
    let partial =
        /**@type {Array<Array<number>>} */ ($Arrays.$init([], $int, 2));
    let unbalanced = /**@type {Array<Array<*>>} */ (
        $Arrays.$init([[object, object], null], Object, 2));
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!ArrayLiteral}
   * @public
   * @nocollapse
   */
  static $create() {
    ArrayLiteral.$clinit();
    var instance = new ArrayLiteral;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_arrayliteral_ArrayLiteral();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_arrayliteral_ArrayLiteral() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_arrayliteral_ArrayLiteral();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof ArrayLiteral; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ArrayLiteral);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
ArrayLiteral.$class = Class.$createForClass(
    $Util.$generateId('ArrayLiteral'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.arrayliteral.ArrayLiteral'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.arrayliteral.ArrayLiteral'));

/**
 * Export class.
 */
exports.ArrayLiteral = ArrayLiteral;
