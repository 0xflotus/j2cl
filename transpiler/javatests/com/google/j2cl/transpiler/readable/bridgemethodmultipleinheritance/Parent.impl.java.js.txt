/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.Parent.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.Parent$impl');


let SuperParent = goog.require('com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template C_T
 * @extends {SuperParent<C_T, (Number|?number)>}
 */
class Parent extends SuperParent {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @template C_T
   * @return {!Parent<C_T>}
   * @public
   */
  static $create__() {
    Parent.$clinit();
    let $instance = new Parent();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_Parent__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_Parent__() {
    this.$ctor__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_SuperParent__();
    this.$init__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_Parent();
  }

  /**
   * @param {C_T} t
   * @param {(Number|?number)} s
   * @return {void}
   * @public
   */
  m_foo__java_lang_Error__java_lang_Number(t, s) {}

  /**
   * @template M_T
   * @param {M_T} t
   * @return {void}
   * @public
   */
  m_bar__java_lang_Number(t) {}

  /**
   * @template M_T
   * @param {M_T} t
   * @return {void}
   * @public
   */
  m_fun__java_lang_Object(t) {}

  /**
   * Bridge method.
   * @override
   * @param {C_T} arg0
   * @param {(Number|?number)} arg1
   * @return {void}
   * @public
   */
  m_foo__java_lang_Object__java_lang_Object(arg0, arg1) {
    this.m_foo__java_lang_Error__java_lang_Number(
        /**@type {C_T} */ ($Casts.to(arg0, Error)),
        /**@type {(Number|?number)} */ ($Casts.to(arg1, Number)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Parent; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Parent);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Error = goog.module.get('java.lang.Error$impl');
    Number = goog.module.get('java.lang.Number$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    SuperParent.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_Parent() {
  }
};

$Util.$setClassMetadata(
    Parent,
    'com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.Parent');



/**
 * Export class.
 */
exports = Parent;
//# sourceMappingURL=Parent.js.map