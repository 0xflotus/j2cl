[class SuperParent<T, S> {
  public void foo(T t, S s) {}
}] => [/**
 * @template C_T, C_S
...exports = SuperParent;
] "com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent"
[class SuperParent<T, S> {
  public void foo(T t, S s) {}
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent"
[UNKNOWN] => [super();]
[class SuperParent<T, S> {
  public void foo(T t, S s) {}
}] => [/**
   * Factory method corresponding to constructor 'SuperParent()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent.<ctor>"
[UNKNOWN] => [SuperParent.$clinit();]
[UNKNOWN] => [let $instance = new SuperParent();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_SuperParent__();]
[UNKNOWN] => [return $instance;]
[class SuperParent<T, S> {
  public void foo(T t, S s) {}
}] => [/**
   * Initialization from constructor 'SuperParent()'.
...    this.$init__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_SuperParent();
  }] "com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_bridgemethodmultipleinheritance_SuperParent();]
[public void foo(T t, S s) {}] => [/**
   * @param {C_T} t
...  m_foo__java_lang_Object__java_lang_Object(t, s) {
  }] "com.google.j2cl.transpiler.readable.bridgemethodmultipleinheritance.SuperParent.foo"
[t] => [t] "t"
[s] => [s] "s"
[UNKNOWN] => [java_lang_Object.$clinit();]
