/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.nativejstypes.Main.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.nativejstypes.Main$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Bar = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nativejstypes.Bar$$Proxy');
let Foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nativejstypes.Foo$$Proxy');
let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nativejstypes.Main.$1$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');
let $JavaScriptObject = goog.forwardDeclare('vmbootstrap.JavaScriptObject$impl');
let $Objects = goog.forwardDeclare('vmbootstrap.Objects$impl');


class Main extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Main}
   * @public
   */
  static $create__() {
    Main.$clinit();
    let $instance = new Main();
    $instance.$ctor__com_google_j2cl_transpiler_readable_nativejstypes_Main__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nativejstypes_Main__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_nativejstypes_Main();
  }

  /**
   * @return {number}
   * @public
   */
  static m_testNativeJsTypeWithNamespace__() {
    Main.$clinit();
    let foo = new Foo();
    foo.x = 50;
    foo.y = 5;
    return foo.sum();
  }

  /**
   * @return {number}
   * @public
   */
  static m_testNativeJsTypeWithoutNamespace__() {
    Main.$clinit();
    let bar = new Bar(6, 7);
    bar.x = 50;
    bar.y = 5;
    Bar.f = 10;
    return bar.product();
  }

  /**
   * @return {void}
   * @public
   */
  static m_testInnerNativeJsType__() {
    Main.$clinit();
    let foo = $1.$create__();
  }

  /**
   * @return {void}
   * @public
   */
  static m_testGlobalNativeJsType__() {
    Main.$clinit();
    let header = new Headers();
    header.append('Content-Type', 'text/xml');
  }

  /**
   * @return {void}
   * @public
   */
  static m_testNativeTypeClassLiteral__() {
    Main.$clinit();
    let o1 = Class.$get($JavaScriptObject);
    o1 = Class.$get(java_lang_Object, 1);
  }

  /**
   * @return {void}
   * @public
   */
  static m_testNativeTypeObjectMethods__() {
    Main.$clinit();
    let bar = new Bar(6, 7);
    $Objects.m_toString__java_lang_Object(bar);
    $Objects.m_hashCode__java_lang_Object(bar);
    $Objects.m_equals__java_lang_Object__java_lang_Object(
        bar, java_lang_Object.$create__());
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Bar = goog.module.get(
        'com.google.j2cl.transpiler.readable.nativejstypes.Bar$$Proxy');
    Foo = goog.module.get(
        'com.google.j2cl.transpiler.readable.nativejstypes.Foo$$Proxy');
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.nativejstypes.Main.$1$impl');
    Class = goog.module.get('java.lang.Class$impl');
    $JavaScriptObject = goog.module.get('vmbootstrap.JavaScriptObject$impl');
    $Objects = goog.module.get('vmbootstrap.Objects$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nativejstypes_Main() {}
};

$Util.$setClassMetadata(
    Main, $Util.$makeClassName(
              'com.google.j2cl.transpiler.readable.nativejstypes.Main'));



/**
 * Export class.
 */
exports = Main;
//# sourceMappingURL=Main.js.map