/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$1foo.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda.$Anonymous1foo$impl');


let MyInterface = goog.require('com.google.j2cl.transpiler.readable.simplelambda.MyInterface$impl');
let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let SimpleLambda = goog.forwardDeclare('com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @implements {MyInterface}
 */
class SimpleLambda$1foo extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {SimpleLambda} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {SimpleLambda} $outer_this
   * @return {!SimpleLambda$1foo}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda(
      $outer_this) {
    SimpleLambda$1foo.$clinit();
    let $instance = new SimpleLambda$1foo();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda(
            $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {SimpleLambda} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo();
  }

  /**
   * @param {number} i
   * @return {number}
   * @public
   */
  lambda1foo(i) { return i + 2; }

  /**
   * @override
   * @param {number} arg0
   * @return {number}
   * @public
   */
  m_foo__int(arg0) { return this.lambda1foo(arg0); }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof SimpleLambda$1foo; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLambda$1foo);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SimpleLambda = goog.module.get(
        'com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$impl');
    Class = goog.module.get('java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda$1foo() {}
};

$Util.$setClassMetadata(
    SimpleLambda$1foo,
    'com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$1foo');


MyInterface.$markImplementor(SimpleLambda$1foo);


/**
 * Export class.
 */
exports = SimpleLambda$1foo;
//# sourceMappingURL=SimpleLambda$1foo.js.map