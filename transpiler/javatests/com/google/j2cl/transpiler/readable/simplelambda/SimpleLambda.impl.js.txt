/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let MyInterface = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.MyInterface$impl');
let SimpleLambda$lambda$0 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$0$impl');
let SimpleLambda$lambda$1 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$1$impl');
let SimpleLambda$lambda$2 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$2$impl');
let SimpleLambda$lambda$3 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$3$impl');
let SimpleLambda$lambda$4 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$4$impl');
let SimpleLambda$lambda$5 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$5$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class SimpleLambda extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.f_field__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda =
        0;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda() {
    this.f_field__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda =
        100;
  }

  /**
   * @return {void}
   * @public
   */
  m_funOuter() {}

  /**
   * @param {MyInterface} intf
   * @param {number} n
   * @return {number}
   * @public
   */
  m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
      intf, n) {
    return this.f_field__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda +
           intf.m_foo__int(n);
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaNoCapture() {
    let result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$0.$create(this), 10);
    result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$1.$create(this), 10);
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaCaptureField() {
    let result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$2.$create(this), 10);
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaCaptureLocal() {
    let x = 1;
    let result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$3.$create(x, this), 10);
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaCaptureFieldAndLocal() {
    let x = 1;
    let result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$4.$create(x, this), 10);
  }

  /**
   * @return {void}
   * @public
   */
  m_testLambdaCallOuterFunction() {
    let result =
        this.m_test__com_google_j2cl_transpiler_readable_simplelambda_MyInterface__int(
            SimpleLambda$lambda$5.$create(this), 10);
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!SimpleLambda}
   * @public
   * @nocollapse
   */
  static $create() {
    SimpleLambda.$clinit();
    let instance = new SimpleLambda;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_simplelambda_SimpleLambda();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SimpleLambda; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SimpleLambda);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    SimpleLambda.$clinit();
    if (!SimpleLambda.$classSimpleLambda) {
      SimpleLambda.$classSimpleLambda = Class.$createForClass(
          $Util.$generateId('SimpleLambda'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda'));
    }
    return SimpleLambda.$classSimpleLambda;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    MyInterface = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.MyInterface$impl');
    SimpleLambda$lambda$0 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$0$impl');
    SimpleLambda$lambda$1 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$1$impl');
    SimpleLambda$lambda$2 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$2$impl');
    SimpleLambda$lambda$3 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$3$impl');
    SimpleLambda$lambda$4 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$4$impl');
    SimpleLambda$lambda$5 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.simplelambda.SimpleLambda$lambda$5$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = SimpleLambda;
