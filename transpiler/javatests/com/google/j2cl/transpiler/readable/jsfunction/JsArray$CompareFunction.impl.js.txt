/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.jsfunction.JsArray$CompareFunction.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.jsfunction.JsArray$CompareFunction$impl');


let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Object = goog.forwardDeclare('gen.java.lang.Object$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

let $JsArray = window.Array;


/**
 * @interface
 */
class JsArray$CompareFunction {
  /**
   * Abstract method.
   * @param {*} o1
   * @param {*} o2
   * @return {number}
   * @public
   */
  m_apply__java_lang_Object__java_lang_Object(o1, o2) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {window.Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_jsfunction_JsArray$CompareFunction =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null && typeof instance == "function";
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        classConstructor.prototype
            .$implements__com_google_j2cl_transpiler_readable_jsfunction_JsArray$CompareFunction;
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    JsArray$CompareFunction.$clinit();
    if (!JsArray$CompareFunction.$classJsArray$CompareFunction_) {
      JsArray$CompareFunction
          .$classJsArray$CompareFunction_ = Class.$createForInterface(
          $Util.$generateId('CompareFunction'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.jsfunction.JsArray$CompareFunction'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.jsfunction.JsArray.CompareFunction'));
    }
    return JsArray$CompareFunction.$classJsArray$CompareFunction_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object = goog.module.get('gen.java.lang.Object$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
JsArray$CompareFunction.$classJsArray$CompareFunction_ = null;


JsArray$CompareFunction.$markImplementor(
    /** @type {window.Function} */ (JsArray$CompareFunction));


/**
 * Export class.
 */
exports = JsArray$CompareFunction;
//# sourceMappingURL=JsArray$CompareFunction.js.map