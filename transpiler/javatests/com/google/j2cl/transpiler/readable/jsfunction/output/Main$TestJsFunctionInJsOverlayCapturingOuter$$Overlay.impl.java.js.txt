/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jsfunction.Main$TestJsFunctionInJsOverlayCapturingOuter$$Overlay.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.jsfunction.Main.TestJsFunctionInJsOverlayCapturingOuter.$Overlay$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');


class $Overlay {
  /**
   * @param {Array} $thisArg
   * @return {void}
   * @public
   */
  static m_test__com_google_j2cl_transpiler_readable_jsfunction_Main_TestJsFunctionInJsOverlayCapturingOuter(
      $thisArg) {
    $Overlay.$clinit();
    $thisArg.sort(((/** number */ a) => {
      return $Equality.$same($thisArg, null) ? 0 : 1;
    }));
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return true;
  }

  /**
   * @public
   */
  static $clinit() {
    $Overlay.$clinit = function() {};
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
  }
};

$Util.$setClassMetadataForInterface($Overlay, $Util.$makeClassName('Array'));


exports = $Overlay;
//#
//sourceMappingURL=Main$TestJsFunctionInJsOverlayCapturingOuter$$Overlay.js.map