[public class InstanceofExpressions {

...  }
}] => [super();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<synthetic: ctor_js>"
[public class InstanceofExpressions {

...  }
}] => [InstanceofExpressions.$clinit();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<synthetic: ctor_create>"
[public class InstanceofExpressions {

...  }
}] => [let $instance = new InstanceofExpressions();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<synthetic: ctor_create>"
[public class InstanceofExpressions {

...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_instanceofexpression_InstanceofExpressions__();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<synthetic: ctor_create>"
[public class InstanceofExpressions {

...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<synthetic: ctor_create>"
[public class InstanceofExpressions {

...  }
}] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<init>"
[public class InstanceofExpressions {

...  }
}] => [this.$init__com_google_j2cl_transpiler_readable_instanceofexpression_InstanceofExpressions();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<init>"
[Object object = new InstanceofExpressions();] => [let object = InstanceofExpressions.$create__();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofClass"
[object] => [object] "object"
[assert object instanceof InstanceofExpressions;] => [$Asserts.$assert(InstanceofExpressions.$isInstance(object));] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofClass"
[assert object instanceof Object;] => [$Asserts.$assert(java_lang_Object.$isInstance(object));] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofClass"
[assert !(object instanceof String);] => [$Asserts.$assert(!java_lang_String.$isInstance(object));] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofClass"
[Object o = new Object();] => [let o = java_lang_Object.$create__();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofInterface"
[o] => [o] "o"
[return o instanceof Serializable;] => [return Serializable.$isInstance(o);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofInterface"
[Object b = new Integer(1);] => [let b = Integer.$create__int(1);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[b] => [b] "b"
[boolean a = b instanceof Byte;] => [let a = Byte.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a] => [a] "a"
[a = b instanceof Double;] => [a = Double.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Float;] => [a = Float.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Integer;] => [a = Integer.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Long;] => [a = Long.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Short;] => [a = Short.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Number;] => [a = Number.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Character;] => [a = Character.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[a = b instanceof Boolean;] => [a = Boolean.$isInstance(b);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceofBoxedType"
[Object object = new Object();] => [let object = java_lang_Object.$create__();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceOfArray"
[object] => [object] "object"
[boolean a = object instanceof Object[];] => [let a = $Arrays.$instanceIsOfType(object, java_lang_Object, 1);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceOfArray"
[a] => [a] "a"
[boolean b = object instanceof Object[][];] => [let b = $Arrays.$instanceIsOfType(object, java_lang_Object, 2);] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.testInstanceOfArray"
[b] => [b] "b"
[public class InstanceofExpressions {

...  }
}] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.instanceofexpression.InstanceofExpressions.<clinit>"
