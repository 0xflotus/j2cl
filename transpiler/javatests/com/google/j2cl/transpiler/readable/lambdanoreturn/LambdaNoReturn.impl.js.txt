/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LambdaNoReturn$Runner = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn$Runner$impl');
let LambdaNoReturn$lambda$0 = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn$lambda$0$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class LambdaNoReturn extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdanoreturn_LambdaNoReturn() {}

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let runner =
        LambdaNoReturn$lambda$0
            .$create__com_google_j2cl_transpiler_readable_lambdanoreturn_LambdaNoReturn(
                this);
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LambdaNoReturn}
   * @public
   * @nocollapse
   */
  static $create() {
    LambdaNoReturn.$clinit();
    let instance = new LambdaNoReturn;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdanoreturn_LambdaNoReturn();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdanoreturn_LambdaNoReturn() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_lambdanoreturn_LambdaNoReturn();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof LambdaNoReturn; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LambdaNoReturn);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    LambdaNoReturn.$clinit();
    if (!LambdaNoReturn.$classLambdaNoReturn) {
      LambdaNoReturn.$classLambdaNoReturn = Class.$createForClass(
          $Util.$generateId('LambdaNoReturn'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn'));
    }
    return LambdaNoReturn.$classLambdaNoReturn;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    LambdaNoReturn$Runner = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn$Runner$impl');
    LambdaNoReturn$lambda$0 = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.lambdanoreturn.LambdaNoReturn$lambda$0$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = LambdaNoReturn;
