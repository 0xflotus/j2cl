/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.boundedtypesupercall.Main$Foo.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Foo$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @abstract
 * @template C_Foo_T
 */
class Foo extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Initialization from constructor 'Foo(Object)'.
   * @param {C_Foo_T} foo
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Foo__java_lang_Object(
      foo) {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @abstract
   * @return {void}
   * @public
   */
  m_foo__() {}

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Foo;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Foo);
  }

  /**
   * @public
   */
  static $clinit() {
    Foo.$clinit = function() {};
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    Foo,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.boundedtypesupercall.Main$Foo'));



exports = Foo;
//# sourceMappingURL=Main$Foo.js.map