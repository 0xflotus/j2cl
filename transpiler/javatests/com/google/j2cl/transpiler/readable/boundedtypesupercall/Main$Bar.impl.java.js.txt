/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.boundedtypesupercall.Main$Bar.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Bar$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Bar.$1$impl');
let Foo = goog.forwardDeclare('com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Foo$impl');
let Comparable = goog.forwardDeclare('java.lang.Comparable$impl');


/**
 * @template C_Bar_T
 */
class Bar extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Bar()'.
   * @template C_Bar_T
   * @return {!Bar<C_Bar_T>}
   * @public
   */
  static $create__() {
    Bar.$clinit();
    let $instance = new Bar();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Bar__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Bar()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Bar__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Bar();
  }

  /**
   * @return {C_Bar_T}
   * @public
   */
  m_getSomething__() {
    return null;
  }

  /**
   * @return {Foo<C_Bar_T>}
   * @public
   */
  m_doSomething__() {
    return /**@type {!$1<C_Bar_T>} */ (
        $1.$create__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Bar__java_lang_Comparable(
            this, this.m_getSomething__()));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Bar;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Bar);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Bar.$clinit = function() {};
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Bar.$1$impl');
    Foo = goog.module.get(
        'com.google.j2cl.transpiler.readable.boundedtypesupercall.Main.Foo$impl');
    Comparable = goog.module.get('java.lang.Comparable$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_boundedtypesupercall_Main_Bar() {}
};

$Util.$setClassMetadata(
    Bar,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.boundedtypesupercall.Main$Bar'));



/**
 * Export class.
 */
exports = Bar;
//# sourceMappingURL=Main$Bar.js.map