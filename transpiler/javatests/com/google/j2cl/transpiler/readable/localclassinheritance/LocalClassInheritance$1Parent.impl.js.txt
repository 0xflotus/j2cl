/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$1Parent.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$1Parent$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LocalClassInheritance = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class LocalClassInheritance$1Parent extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.$c_f = 0;
    /**
     * @public {LocalClassInheritance}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_f
   * @param {LocalClassInheritance} $outer_this
   * @return {!LocalClassInheritance$1Parent}
   * @public
   * @nocollapse
   */
  static $create__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
      $c_f, $outer_this) {
    LocalClassInheritance$1Parent.$clinit();
    let instance = new LocalClassInheritance$1Parent;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
            $c_f, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_f
   * @param {LocalClassInheritance} $outer_this
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
      $c_f, $outer_this) {
    this.$c_f = $c_f;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent();
  }

  /**
   * @return {void}
   * @public
   */
  m_n() { let i = this.$c_f; }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof LocalClassInheritance$1Parent;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LocalClassInheritance$1Parent);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    LocalClassInheritance$1Parent.$clinit();
    if (!LocalClassInheritance$1Parent.$classLocalClassInheritance$1Parent_) {
      LocalClassInheritance$1Parent
          .$classLocalClassInheritance$1Parent_ = Class.$createForClass(
          $Util.$generateId('1Parent'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$1Parent'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance.1Parent'));
    }
    return LocalClassInheritance$1Parent.$classLocalClassInheritance$1Parent_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return LocalClassInheritance$1Parent.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   * @nocollapse
   */
  static $clinit() {
    LocalClassInheritance = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
LocalClassInheritance$1Parent.$classLocalClassInheritance$1Parent_ = null;



/**
 * Export class.
 */
exports = LocalClassInheritance$1Parent;
