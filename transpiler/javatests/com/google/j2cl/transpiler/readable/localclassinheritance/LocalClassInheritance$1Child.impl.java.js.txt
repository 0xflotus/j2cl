/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$1Child.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance.$Anonymous1Child$impl');


let LocalClassInheritance$1Parent = goog.require('com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance.$Anonymous1Parent$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LocalClassInheritance = goog.forwardDeclare('com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class LocalClassInheritance$1Child extends LocalClassInheritance$1Parent {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {number} */
    this.$c_f = 0;
    /** @public {LocalClassInheritance} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $c_f
   * @param {LocalClassInheritance} $outer_this
   * @return {!LocalClassInheritance$1Child}
   * @public
   */
  static $create__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
      $c_f, $outer_this) {
    LocalClassInheritance$1Child.$clinit();
    let $instance = new LocalClassInheritance$1Child();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
            $c_f, $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $c_f
   * @param {LocalClassInheritance} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
      $c_f, $outer_this) {
    this.$c_f = $c_f;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Parent__int__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance(
        $c_f, $outer_this);
    this.$init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child();
  }

  /**
   * @override
   * @return {void}
   * @public
   */
  m_n__() {
    let i = this.$c_f;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LocalClassInheritance$1Child;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LocalClassInheritance$1Child);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LocalClassInheritance = goog.module.get(
        'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    LocalClassInheritance$1Parent.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance$1Child() {
  }
};

$Util.$setClassMetadata(
    LocalClassInheritance$1Child,
    'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$1Child');



/**
 * Export class.
 */
exports = LocalClassInheritance$1Child;
//# sourceMappingURL=LocalClassInheritance$1Child.js.map