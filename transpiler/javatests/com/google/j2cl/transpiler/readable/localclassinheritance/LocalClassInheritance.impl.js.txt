/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class LocalClassInheritance extends Object {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!LocalClassInheritance}
   * @public
   */
  static $create() {
    LocalClassInheritance.$clinit();
    let $instance = new LocalClassInheritance;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() { let f = 1; }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LocalClassInheritance;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LocalClassInheritance);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    LocalClassInheritance.$clinit();
    if (!LocalClassInheritance.$classLocalClassInheritance_) {
      LocalClassInheritance
          .$classLocalClassInheritance_ = Class.$createForClass(
          $Util.$generateId('LocalClassInheritance'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclassinheritance.LocalClassInheritance'));
    }
    return LocalClassInheritance.$classLocalClassInheritance_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return LocalClassInheritance.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localclassinheritance_LocalClassInheritance() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
LocalClassInheritance.$classLocalClassInheritance_ = null;



/**
 * Export class.
 */
exports = LocalClassInheritance;
//# sourceMappingURL=LocalClassInheritance.js.map