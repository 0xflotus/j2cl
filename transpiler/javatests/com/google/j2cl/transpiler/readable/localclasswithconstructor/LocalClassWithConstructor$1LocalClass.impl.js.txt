/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$1LocalClass.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$1LocalClass$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let LocalClassWithConstructor = goog.forwardDeclare(
    'gen.com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class LocalClassWithConstructor$1LocalClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {number}
     */
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass =
        0;
    /**
     * @public {number}
     */
    this.$c_localVar = 0;
    /**
     * @public {number}
     */
    this.$c_p = 0;
    /**
     * @public {LocalClassWithConstructor}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} a
   * @param {number} b
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {LocalClassWithConstructor} $outer_this
   * @return {!LocalClassWithConstructor$1LocalClass}
   * @public
   */
  static $create__int__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
      a, b, $c_localVar, $c_p, $outer_this) {
    LocalClassWithConstructor$1LocalClass.$clinit();
    let $instance = new LocalClassWithConstructor$1LocalClass;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass__int__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
            a, b, $c_localVar, $c_p, $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} a
   * @param {number} b
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {LocalClassWithConstructor} $outer_this
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass__int__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
      a, b, $c_localVar, $c_p, $outer_this) {
    this.$c_localVar = $c_localVar;
    this.$c_p = $c_p;
    this.f_$outer_this__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass =
        $outer_this;
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass();
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass =
        $c_localVar + a + b;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} a
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {LocalClassWithConstructor} $outer_this
   * @return {!LocalClassWithConstructor$1LocalClass}
   * @public
   */
  static $create__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
      a, $c_localVar, $c_p, $outer_this) {
    LocalClassWithConstructor$1LocalClass.$clinit();
    let $instance = new LocalClassWithConstructor$1LocalClass;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
            a, $c_localVar, $c_p, $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} a
   * @param {number} $c_localVar
   * @param {number} $c_p
   * @param {LocalClassWithConstructor} $outer_this
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
      a, $c_localVar, $c_p, $outer_this) {
    this.$ctor__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass__int__int__int__int__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor(
        a, $c_p, $c_localVar, $c_p, $outer_this);
    this.f_field__com_google_j2cl_transpiler_readable_localclasswithconstructor_LocalClassWithConstructor$1LocalClass =
        $c_localVar;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LocalClassWithConstructor$1LocalClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, LocalClassWithConstructor$1LocalClass);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    LocalClassWithConstructor$1LocalClass.$clinit();
    if (!LocalClassWithConstructor$1LocalClass
             .$classLocalClassWithConstructor$1LocalClass_) {
      LocalClassWithConstructor$1LocalClass
          .$classLocalClassWithConstructor$1LocalClass_ = Class.$createForClass(
          $Util.$generateId('1LocalClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$1LocalClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor.1LocalClass'));
    }
    return LocalClassWithConstructor$1LocalClass
        .$classLocalClassWithConstructor$1LocalClass_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return LocalClassWithConstructor$1LocalClass.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LocalClassWithConstructor = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.localclasswithconstructor.LocalClassWithConstructor$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
LocalClassWithConstructor$1LocalClass
    .$classLocalClassWithConstructor$1LocalClass_ = null;



/**
 * Export class.
 */
exports = LocalClassWithConstructor$1LocalClass;
