[public class CastToGenerics<T, E extends Number> {

...  public static class Foo<V> { }
}] => [/**
 * @template C_T, C_E
...exports = CastToGenerics;
] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics"
[public class CastToGenerics<T, E extends Number> {

...  public static class Foo<V> { }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics"
[UNKNOWN] => [super();]
[public class CastToGenerics<T, E extends Number> {

...  public static class Foo<V> { }
}] => [/**
   * Factory method corresponding to constructor 'CastToGenerics()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.<ctor>"
[UNKNOWN] => [CastToGenerics.$clinit();]
[UNKNOWN] => [let $instance = new CastToGenerics();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics__();]
[UNKNOWN] => [return $instance;]
[public class CastToGenerics<T, E extends Number> {

...  public static class Foo<V> { }
}] => [/**
   * Initialization from constructor 'CastToGenerics()'.
...    this.$init__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics();
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics();]
[@SuppressWarnings({"unused", "unchecked", "rawtypes"})
  public void test() {
...    cc = (CastToGenerics) c;
  }] => [/**
   * @return {void}
...    cc = /**@type {CastToGenerics} */ ($Casts.$to(c, CastToGenerics));
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.test"
[Object o = new Integer(1);] => [let o = Integer.$create__int(1);]
[o] => [o] "o"
[E e = (E) o;] => [let e = /**@type {C_E} */ ($Casts.$to(o, Number));]
[e] => [e] "e"
[T t = (T) o;] => [let t = /**@type {C_T} */ ($Casts.$to(o, java_lang_Object));]
[t] => [t] "t"
[E[] es = (E[]) o;] => [let es = /**@type {Array<C_E>} */ ($Arrays.$castTo(o, Number, 1));]
[es] => [es] "es"
[T[] ts = (T[]) o;] => [let ts = /**@type {Array<C_T>} */ ($Arrays.$castTo(o, java_lang_Object, 1));]
[ts] => [ts] "ts"
[Object c = new CastToGenerics<String, Number>();] => [let c = /**@type {!CastToGenerics<?string, (Number|?number)>} */ (CastToGenerics.$create__());]
[c] => [c] "c"
[CastToGenerics<Error, Number> cc = (CastToGenerics<Error, Number>) c;] => [let cc = /**@type {CastToGenerics<Error, (Number|?number)>} */ ($Casts.$to(c, CastToGenerics));]
[cc] => [cc] "cc"
[cc = (CastToGenerics) c;] => [cc = /**@type {CastToGenerics} */ ($Casts.$to(c, CastToGenerics));]
[@SuppressWarnings({"unchecked", "unused", "cast"})
  public <S, V extends Enum<V>> void castToTypeVariable() {
...    String s1 = new ClassWithGenericField<String>().field;
  }] => [/**
   * @template M_S, M_V
...    let s1 = /**@type {?string} */ ($Casts.$to(/**@type {!ClassWithGenericField<?string>} */ (ClassWithGenericField.$create__()).f_field__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics_ClassWithGenericField, java_lang_String));
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.castToTypeVariable"
[Object o = new Integer(1);] => [let o = Integer.$create__int(1);]
[o] => [o] "o"
[S s = (S) o;] => [let s = /**@type {*} */ ($Casts.$to(o, java_lang_Object));]
[s] => [s] "s"
[Object c = (CastToGenerics<S, Number>) o;] => [let c = /**@type {CastToGenerics<*, (Number|?number)>} */ ($Casts.$to(o, CastToGenerics));]
[c] => [c] "c"
[c = (S[]) o;] => [c = /**@type {Array<*>} */ ($Arrays.$castTo(o, java_lang_Object, 1));]
[c = (V) o;] => [c = /**@type {Enum} */ ($Casts.$to(o, Enum));]
[String s1 = new ClassWithGenericField<String>().field;] => [let s1 = /**@type {?string} */ ($Casts.$to(/**@type {!ClassWithGenericField<?string>} */ (ClassWithGenericField.$create__()).f_field__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics_ClassWithGenericField, java_lang_String));]
[s1] => [s1] "s1"
[/**
   * This method tests that J2CL correctly sets the Generic to its bound inside a method since
...    }
  }] => [/**
   * @template M_TT
...  m_outerGenericMethod__() {
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.outerGenericMethod"
[public <EE extends Empty1 & Empty2<EE>> EE method(Object o) {
    if (o instanceof Empty1) {
...    return null;
  }] => [/**
   * @template M_EE
...    return null;
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.method"
[o] => [o] "o"
[if (o instanceof Empty1) {
      return (EE) o;
    }] => [if (Empty1.$isInstance(o)) {
      return /**@type {Empty1} */ ($Casts.$to(o, Empty1));
    }]
[return (EE) o;] => [return /**@type {Empty1} */ ($Casts.$to(o, Empty1));]
[return null;] => [return null;]
[public static <T> Foo<T> doSomething() {
    return new Foo<T>() { };
  }] => [/**
   * @template M_T
...    return /**@type {!$1<*>} */ ($1.$create__());
  }] "com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.doSomething"
[UNKNOWN] => [CastToGenerics.$clinit();]
[return new Foo<T>() { };] => [return /**@type {!$1<*>} */ ($1.$create__());]
[UNKNOWN] => [java_lang_Object.$clinit();]
