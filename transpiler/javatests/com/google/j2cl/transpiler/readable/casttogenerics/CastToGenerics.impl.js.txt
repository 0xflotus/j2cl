/**
 * Impl transpiled from
 * com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Error = goog.forwardDeclare('gen.java.lang.Error$impl');
let Integer = goog.forwardDeclare('gen.java.lang.Integer$impl');
let Number = goog.forwardDeclare('gen.java.lang.Number$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template C_T, C_E
 */
class CastToGenerics extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics() {}

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let o = Integer.$create__int(1);
    let e = /**@type {C_E} */ ($Casts.to(o, Number.$isInstance(o)));
    let t = /**@type {C_T} */ ($Casts.to(o, Object.$isInstance(o)));
    let es = /**@type {Array<C_E>} */ ($Arrays.$castTo(o, Number, 1));
    let ts = /**@type {Array<C_T>} */ ($Arrays.$castTo(o, Object, 1));
    let c = /**@type {CastToGenerics<?string, (Number|?number)>} */ (
        CastToGenerics.$create());
    let cc = /**@type {CastToGenerics<Error, (Number|?number)>} */ (
        $Casts.to(c, CastToGenerics.$isInstance(c)));
  }

  /**
   * A particular Java constructor as a factory method.
   * @template C_T, C_E
   * @return {!CastToGenerics<C_T, C_E>}
   * @public
   * @nocollapse
   */
  static $create() {
    CastToGenerics.$clinit();
    let instance = new CastToGenerics;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_casttogenerics_CastToGenerics();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof CastToGenerics; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CastToGenerics);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    CastToGenerics.$clinit();
    if (!CastToGenerics.$classCastToGenerics) {
      CastToGenerics.$classCastToGenerics = Class.$createForClass(
          $Util.$generateId('CastToGenerics'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.casttogenerics.CastToGenerics'));
    }
    return CastToGenerics.$classCastToGenerics;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    Error = goog.module.get('gen.java.lang.Error$impl');
    Integer = goog.module.get('gen.java.lang.Integer$impl');
    Number = goog.module.get('gen.java.lang.Number$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    Object.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = CastToGenerics;
