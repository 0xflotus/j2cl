/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod$impl');


let C = goog.require('com.google.j2cl.transpiler.readable.backwardbridgemethod.C$impl');
let I = goog.require('com.google.j2cl.transpiler.readable.backwardbridgemethod.I$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');
let Object = goog.forwardDeclare('java.lang.Object$impl');
let String = goog.forwardDeclare('java.lang.String$impl');


/**
 * @extends {C<?string>}
 * @implements {I}
 */
class BackwardBridgeMethod extends C {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!BackwardBridgeMethod}
   * @public
   */
  static $create() {
    BackwardBridgeMethod.$clinit();
    let $instance = new BackwardBridgeMethod();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod() {
    this.$ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_C();
    this.$init__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let i = BackwardBridgeMethod.$create();
    let c = BackwardBridgeMethod.$create();
    let a = BackwardBridgeMethod.$create();
    i.m_get__java_lang_String('');
    c.m_get__java_lang_Object('');
    a.m_get__java_lang_Object('');
  }

  /**
   * Bridge method.
   * @param {?string} arg0
   * @return {?string}
   * @public
   */
  m_get__java_lang_String(arg0) { return super.m_get__java_lang_Object(arg0); }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof BackwardBridgeMethod;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, BackwardBridgeMethod);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('java.lang.Class$impl');
    Object = goog.module.get('java.lang.Object$impl');
    String = goog.module.get('java.lang.String$impl');
    C.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod() {
  }
};

$Util.$setClassMetadata(
    BackwardBridgeMethod,
    'com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod');


I.$markImplementor(BackwardBridgeMethod);


/**
 * Export class.
 */
exports = BackwardBridgeMethod;
//# sourceMappingURL=BackwardBridgeMethod.js.map