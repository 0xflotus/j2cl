/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod$impl');


let C = goog.require('gen.com.google.j2cl.transpiler.readable.backwardbridgemethod.C$impl');
let I = goog.require('gen.com.google.j2cl.transpiler.readable.backwardbridgemethod.I$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Object = goog.forwardDeclare('gen.java.lang.Object$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');


/**
 * @extends {C<?string>}
 * @implements {I}
 */
class BackwardBridgeMethod extends C {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!BackwardBridgeMethod}
   * @public
   */
  static $create() {
    BackwardBridgeMethod.$clinit();
    let $instance = new BackwardBridgeMethod;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod() {
    this.$ctor__com_google_j2cl_transpiler_readable_backwardbridgemethod_C();
    this.$init__com_google_j2cl_transpiler_readable_backwardbridgemethod_BackwardBridgeMethod();
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    let i = BackwardBridgeMethod.$create();
    let c = BackwardBridgeMethod.$create();
    let a = BackwardBridgeMethod.$create();
    i.m_get__java_lang_String("");
    c.m_get__java_lang_Object("");
    a.m_get__java_lang_Object("");
  }

  /**
   * Synthetic method.
   * @param {?string} arg0
   * @return {?string}
   * @public
   */
  m_get__java_lang_String(arg0) { return this.m_get__java_lang_Object(arg0); }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof BackwardBridgeMethod;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, BackwardBridgeMethod);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    BackwardBridgeMethod.$clinit();
    if (!BackwardBridgeMethod.$classBackwardBridgeMethod_) {
      BackwardBridgeMethod.$classBackwardBridgeMethod_ = Class.$createForClass(
          $Util.$generateId('BackwardBridgeMethod'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod'),
          C.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.backwardbridgemethod.BackwardBridgeMethod'));
    }
    return BackwardBridgeMethod.$classBackwardBridgeMethod_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return BackwardBridgeMethod.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    Object = goog.module.get('gen.java.lang.Object$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    C.$clinit();
  }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
BackwardBridgeMethod.$classBackwardBridgeMethod_ = null;


I.$markImplementor(BackwardBridgeMethod);



/**
 * Export class.
 */
exports = BackwardBridgeMethod;
