/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.equality.Equality.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.equality.Equality$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');
let $Asserts = goog.forwardDeclare('vmbootstrap.Asserts$impl');


class Equality extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Equality}
   * @public
   */
  static $create__() {
    Equality.$clinit();
    let $instance = new Equality();
    $instance.$ctor__com_google_j2cl_transpiler_readable_equality_Equality__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_equality_Equality__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_equality_Equality();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    {
      $Asserts.$enabled() && $Asserts.$assert(false == false);
      $Asserts.$enabled() && $Asserts.$assert(0 != 1);
    }
    {
      $Asserts.$enabled() &&
          $Asserts.$assert(
              !$Equality.$same(Object.$create__(), Object.$create__()));
    }
    {
      $Asserts.$enabled() &&
          $Asserts.$assert(!$Equality.$same(null, Object.$create__()));
      $Asserts.$enabled() &&
          $Asserts.$assert(!$Equality.$same(Object.$create__(), null));
    }
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Equality; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Equality);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    $Asserts = goog.module.get('vmbootstrap.Asserts$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_equality_Equality() {}
};

$Util.$setClassMetadata(
    Equality, 'com.google.j2cl.transpiler.readable.equality.Equality');



/**
 * Export class.
 */
exports = Equality;
//# sourceMappingURL=Equality.js.map