[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [super();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<synthetic: constructor>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<synthetic: create>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [let $instance = new Main();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<synthetic: create>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_nativejstypeobjectmethods_Main__();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<synthetic: create>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<synthetic: create>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<init>"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [this.$init__com_google_j2cl_transpiler_readable_nativejstypeobjectmethods_Main();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<init>"
[public static void test() {
    NativeJsTypeWithToString n1 = new NativeJsTypeWithToString();
...    n4.toString();
  }] => [Main.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[NativeJsTypeWithToString n1 = new NativeJsTypeWithToString();] => [let n1 = new NativeJsTypeWithToString();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[n1] => [n1] "n1"
[n1.toString();] => [n1.toString();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[Object n2 = new NativeJsTypeWithToString();] => [let n2 = new NativeJsTypeWithToString();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[n2] => [n2] "n2"
[n2.toString();] => [$Objects.m_toString__java_lang_Object(n2);] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[NativeJsTypeWithoutToString n3 = new NativeJsTypeWithoutToString();] => [let n3 = new NativeJsTypeWithoutToString();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[n3] => [n3] "n3"
[n3.toString();] => [$Objects.m_toString__java_lang_Object(n3);] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[Object n4 = new NativeJsTypeWithoutToString();] => [let n4 = new NativeJsTypeWithoutToString();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[n4] => [n4] "n4"
[n4.toString();] => [$Objects.m_toString__java_lang_Object(n4);] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.test"
[public class Main {
  @JsType(isNative = true, namespace = "test.foo")
...  }
}] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.nativejstypeobjectmethods.Main.<clinit>"
