/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.lambdajsinterop.Main$$LambdaAdaptor$1.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdajsinterop.Main.$LambdaAdaptor$1$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdajsinterop.Main.Thenable.$Overlay$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let Void = goog.forwardDeclare('java.lang.Void$impl');
let $JavaScriptFunction = goog.forwardDeclare('vmbootstrap.JavaScriptFunction$impl');
let $void = goog.forwardDeclare('vmbootstrap.primitives.$void$impl');


/**
 * @template C_Thenable_T
 */
class $LambdaAdaptor$1 extends java_lang_Object {
  /**
   * JsConstructor '$LambdaAdaptor$1($JsFunction)'.
   * @param {?function(?function(C_Thenable_T):?void, ?function(Throwable):?void):void} fn
   * @public
   */
  constructor(fn) {
    $LambdaAdaptor$1.$clinit();
    super();
    /**
     * @public {?function(?function(C_Thenable_T):?void, ?function(Throwable):?void):void}
     */
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1 =
        null;
    this.$ctor__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_Thenable_$JsFunction(
        fn);
  }

  /**
   * Initialization from constructor '$LambdaAdaptor$1($JsFunction)'.
   * @param {?function(?function(C_Thenable_T):?void, ?function(Throwable):?void):void} fn
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_Thenable_$JsFunction(
      fn) {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1();
    this.f_$$fn__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1 =
        fn;
  }

  /**
   * @param {?function(C_Thenable_T):?void} arg0
   * @param {?function(Throwable):?void} arg1
   * @return {void}
   * @public
   */
  then(arg0, arg1) {
    {
      let $function =
          this.f_$$fn__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1;
      $function(arg0, arg1);
    }
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $LambdaAdaptor$1;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $LambdaAdaptor$1);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $LambdaAdaptor$1.$clinit = function() {};
    $Overlay = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdajsinterop.Main.Thenable.$Overlay$impl');
    Throwable = goog.module.get('java.lang.Throwable$impl');
    Void = goog.module.get('java.lang.Void$impl');
    $JavaScriptFunction =
        goog.module.get('vmbootstrap.JavaScriptFunction$impl');
    $void = goog.module.get('vmbootstrap.primitives.$void$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdajsinterop_Main_$LambdaAdaptor$1() {
  }
};

$Util.$setClassMetadata(
    $LambdaAdaptor$1,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.lambdajsinterop.Main$$LambdaAdaptor$1'));



/**
 * Export class.
 */
exports = $LambdaAdaptor$1;
//# sourceMappingURL=Main$$LambdaAdaptor$1.js.map