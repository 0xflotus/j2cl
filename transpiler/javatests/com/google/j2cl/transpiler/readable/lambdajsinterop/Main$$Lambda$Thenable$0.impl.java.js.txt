/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.lambdajsinterop.Main$$Lambda$Thenable$0.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.lambdajsinterop.Main.$Lambda$Thenable$0$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let JsFunc = goog.forwardDeclare('com.google.j2cl.transpiler.readable.lambdajsinterop.Main.JsFunc$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let Throwable = goog.forwardDeclare('java.lang.Throwable$impl');
let Void = goog.forwardDeclare('java.lang.Void$impl');


/**
 * @implements {Thenable<?string>}
 */
class $Lambda$Thenable$0 extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!$Lambda$Thenable$0}
   * @public
   */
  static $create__() {
    $Lambda$Thenable$0.$clinit();
    let $instance = new $Lambda$Thenable$0();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_lambdajsinterop_Main$$Lambda$Thenable$0__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_lambdajsinterop_Main$$Lambda$Thenable$0__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_lambdajsinterop_Main$$Lambda$Thenable$0();
  }

  /**
   * @param {?function(?string):Void} f1
   * @param {?function(Throwable):Void} f2
   * @return {void}
   * @public
   */
  lambda$Lambda$Thenable$0(f1, f2) {
    f1(null);
  }

  /**
   * @override
   * @param {?function(?string):Void} arg0
   * @param {?function(Throwable):Void} arg1
   * @return {void}
   * @public
   */
  then(arg0, arg1) {
    this.lambda$Lambda$Thenable$0(arg0, arg1);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $Lambda$Thenable$0;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $Lambda$Thenable$0);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    JsFunc = goog.module.get(
        'com.google.j2cl.transpiler.readable.lambdajsinterop.Main.JsFunc$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    Throwable = goog.module.get('java.lang.Throwable$impl');
    Void = goog.module.get('java.lang.Void$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_lambdajsinterop_Main$$Lambda$Thenable$0() {
  }
};

$Util.$setClassMetadata(
    $Lambda$Thenable$0,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.lambdajsinterop.Main$$Lambda$Thenable$0'));



/**
 * Export class.
 */
exports = $Lambda$Thenable$0;
//# sourceMappingURL=Main$$Lambda$Thenable$0.js.map