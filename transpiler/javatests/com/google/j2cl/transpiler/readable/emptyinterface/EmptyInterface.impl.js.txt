/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.emptyinterface.EmptyInterface.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.emptyinterface.EmptyInterface$impl');


let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


/**
 * @interface
 */
class EmptyInterface {
  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_emptyinterface_EmptyInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        instance
            .$implements__com_google_j2cl_transpiler_readable_emptyinterface_EmptyInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        classConstructor.prototype
            .$implements__com_google_j2cl_transpiler_readable_emptyinterface_EmptyInterface;
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    EmptyInterface.$clinit();
    if (!EmptyInterface.$classEmptyInterface_) {
      EmptyInterface.$classEmptyInterface_ = Class.$createForInterface(
          $Util.$generateId('EmptyInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.emptyinterface.EmptyInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.emptyinterface.EmptyInterface'));
    }
    return EmptyInterface.$classEmptyInterface_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() { Class = goog.module.get('gen.java.lang.Class$impl'); }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
EmptyInterface.$classEmptyInterface_ = null;


EmptyInterface.$markImplementor(/** @type {Function} */ (EmptyInterface));

/**
 * Export class.
 */
exports = EmptyInterface;
