/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.longimplicitcasts.LongImplicitCasts.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.longimplicitcasts.LongImplicitCasts$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Long = goog.require('nativebootstrap.Long$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let $LongUtils = goog.forwardDeclare('vmbootstrap.LongUtils$impl');
let $Primitives = goog.forwardDeclare('vmbootstrap.Primitives$impl');
let $long = goog.forwardDeclare('vmbootstrap.primitives.$long$impl');


class LongImplicitCasts extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {!$Long} */
    this.f_fieldLong__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts =
        $Long.fromBits(0, 0) /* 0 */;
  }

  /**
   * @param {!$Long} leftValue
   * @return {void}
   * @public
   */
  m_compareLong__long(leftValue) {}

  /**
   * Factory method corresponding to constructor 'LongImplicitCasts()'.
   * @return {!LongImplicitCasts}
   * @public
   */
  static $create__() {
    LongImplicitCasts.$clinit();
    let $instance = new LongImplicitCasts();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts__();
    return $instance;
  }

  /**
   * Initialization from constructor 'LongImplicitCasts()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts__() {
    this.$ctor__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts__long(
        $Primitives.$widenIntToLong(100));
  }

  /**
   * Factory method corresponding to constructor 'LongImplicitCasts(long)'.
   * @param {!$Long} someValue
   * @return {!LongImplicitCasts}
   * @public
   */
  static $create__long(someValue) {
    LongImplicitCasts.$clinit();
    let $instance = new LongImplicitCasts();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts__long(
            someValue);
    return $instance;
  }

  /**
   * Initialization from constructor 'LongImplicitCasts(long)'.
   * @param {!$Long} someValue
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts__long(
      someValue) {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let fbyte = 11;
    let fchar = 12 /* "\f" */;
    let fshort = 13;
    let fint = 14;
    let flong = $Primitives.$widenIntToLong(15);
    let ffloat = 16;
    let fdouble = 17;
    let tlong = $Primitives.$widenIntToLong(0);
    {
      tlong = $Primitives.$widenByteToLong(fbyte);
      tlong = flong;
    }
    {
      tlong = $Primitives.$widenIntToLong(fint);
      tlong = $LongUtils.$plus(tlong, $Primitives.$widenIntToLong(fint));
      tlong = $LongUtils.$leftShift(tlong, $Primitives.$widenIntToLong(fint));
    }
    {
      tlong = $LongUtils.$plus(tlong, $Primitives.$widenCharToLong(fchar));
      tlong = $LongUtils.$plus(tlong, flong);
      tlong = $Primitives.$narrowFloatToLong(
          $Primitives.$widenLongToFloat(tlong) + ffloat);
    }
    {
      tlong = $LongUtils.$times(flong, $Primitives.$widenIntToLong(fint));
      tlong = $LongUtils.$rightShiftSigned(
          flong, $Primitives.$widenIntToLong(fint));
    }
    {
      tlong = $LongUtils.$plus(flong, $Primitives.$widenShortToLong(fshort));
      tlong = $LongUtils.$plus(flong, flong);
    }
    {
      this.m_compareLong__long($Primitives.$widenIntToLong(fint));
      LongImplicitCasts.$create__long($Primitives.$widenIntToLong(fint));
      this.m_compareLong__long(flong);
      LongImplicitCasts.$create__long(flong);
    }
    {
      tlong = $LongUtils.$leftShift(flong, flong);
      tlong = $LongUtils.$leftShift(tlong, flong);
    }
    {
      tlong = $LongUtils.$plus(
          $Primitives.$widenIntToLong(0 + 1), $Long.fromBits(2, 0) /* 2 */);
    }
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof LongImplicitCasts;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, LongImplicitCasts);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    LongImplicitCasts.$clinit = function() {};
    $LongUtils = goog.module.get('vmbootstrap.LongUtils$impl');
    $Primitives = goog.module.get('vmbootstrap.Primitives$impl');
    $long = goog.module.get('vmbootstrap.primitives.$long$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts() {
    this.f_fieldLong__com_google_j2cl_transpiler_readable_longimplicitcasts_LongImplicitCasts =
        $Primitives.$widenIntToLong(100);
  }
};

$Util.$setClassMetadata(
    LongImplicitCasts,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.longimplicitcasts.LongImplicitCasts'));



/**
 * Export class.
 */
exports = LongImplicitCasts;
//# sourceMappingURL=LongImplicitCasts.js.map