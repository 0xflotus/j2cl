/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.unimplementedbridgemethod.I.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.unimplementedbridgemethod.I$impl');


let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


/**
 * @interface
 * @template C_T
 */
class I {
  /**
   * Abstract method.
   * @param {C_T} t
   * @return {number}
   * @public
   */
  m_foo__java_lang_Object(t) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {window.Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_unimplementedbridgemethod_I =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        instance
            .$implements__com_google_j2cl_transpiler_readable_unimplementedbridgemethod_I;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        classConstructor.prototype
            .$implements__com_google_j2cl_transpiler_readable_unimplementedbridgemethod_I;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() { Class = goog.module.get('gen.java.lang.Class$impl'); }
};

$Util.$setClassMetadataForInterface(
    I, 'com.google.j2cl.transpiler.readable.unimplementedbridgemethod.I');


I.$markImplementor(/** @type {window.Function} */ (I));


/**
 * Export class.
 */
exports = I;
//# sourceMappingURL=I.js.map