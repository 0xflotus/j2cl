/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.wideningandboxing.Main.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.wideningandboxing.Main$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Double = goog.forwardDeclare('java.lang.Double$impl');
let Float = goog.forwardDeclare('java.lang.Float$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class Main extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Main}
   * @public
   */
  static $create__() {
    Main.$clinit();
    let $instance = new Main();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_wideningandboxing_Main__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_wideningandboxing_Main__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_wideningandboxing_Main();
  }

  /**
   * @param {Array<?number>} elements
   * @return {void}
   * @public
   */
  static m_fun__arrayOf_java_lang_Double(elements) {
    Main.$clinit();
  }

  /**
   * @param {Array<Float>} elements
   * @return {void}
   * @public
   */
  static m_bar__arrayOf_java_lang_Float(elements) {
    Main.$clinit();
  }

  /**
   * @return {void}
   * @public
   */
  static m_foo__() {
    Main.$clinit();
    let numbers = /**@type {!Array<number>} */ ($Arrays.$init([1, 2], $int));
    Main.m_fun__arrayOf_java_lang_Double(/**@type {!Array<?number>} */ (
        $Arrays.$init([97 /* 'a' */, 4, numbers[0]], Double)));
    Main.m_bar__arrayOf_java_lang_Float(
        /**@type {!Array<Float>} */ ($Arrays.$init(
            [
              Float.m_valueOf__float(97 /* 'a' */), Float.m_valueOf__float(4),
              Float.m_valueOf__float(numbers[0])
            ],
            Float)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Main;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Main);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Double = goog.module.get('java.lang.Double$impl');
    Float = goog.module.get('java.lang.Float$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_wideningandboxing_Main() {}
};

$Util.$setClassMetadata(
    Main, $Util.$makeClassName(
              'com.google.j2cl.transpiler.readable.wideningandboxing.Main'));



/**
 * Export class.
 */
exports = Main;
//# sourceMappingURL=Main.js.map