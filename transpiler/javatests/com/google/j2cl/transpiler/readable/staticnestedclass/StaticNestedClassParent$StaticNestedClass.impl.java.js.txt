/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.staticnestedclass.StaticNestedClassParent$StaticNestedClass.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.staticnestedclass.StaticNestedClassParent.StaticNestedClass$impl');


let Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');


class StaticNestedClassParent$StaticNestedClass extends Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!StaticNestedClassParent$StaticNestedClass}
   * @public
   */
  static $create() {
    StaticNestedClassParent$StaticNestedClass.$clinit();
    let $instance = new StaticNestedClassParent$StaticNestedClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_staticnestedclass_StaticNestedClassParent$StaticNestedClass();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_staticnestedclass_StaticNestedClassParent$StaticNestedClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_staticnestedclass_StaticNestedClassParent$StaticNestedClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof StaticNestedClassParent$StaticNestedClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, StaticNestedClassParent$StaticNestedClass);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('java.lang.Class$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_staticnestedclass_StaticNestedClassParent$StaticNestedClass() {
  }
};

$Util.$setClassMetadata(
    StaticNestedClassParent$StaticNestedClass,
    'com.google.j2cl.transpiler.readable.staticnestedclass.StaticNestedClassParent$StaticNestedClass');



/**
 * Export class.
 */
exports = StaticNestedClassParent$StaticNestedClass;
//# sourceMappingURL=StaticNestedClassParent$StaticNestedClass.js.map