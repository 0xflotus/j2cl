/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.importglobaljstypes.Number.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.importglobaljstypes.Number$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $double = goog.forwardDeclare('vmbootstrap.primitives.$double$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');

let $Number = window.Number;
let $String = window.String;


class Number extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!Number}
   * @public
   */
  static $create() {
    Number.$clinit();
    let $instance = new Number;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number();
  }

  /**
   * @param {number} x
   * @return {boolean}
   * @public
   */
  static m_test__double(x) {
    Number.$clinit();
    return $Number.isInteger(x);
  }

  /**
   * @param {Array<number>} array
   * @return {?string}
   * @public
   */
  static m_fromCharCode__arrayOf_int(array) {
    Number.$clinit();
    return $String.fromCharCode.apply(null, array);
  }

  /**
   * @param {*} a
   * @return {*}
   * @public
   */
  m_testJsDocForLiteralType__com_google_j2cl_transpiler_readable_importglobaljstypes_Number$MyLiteralType(
      a) {
    return a;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof Number; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Number);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    Number.$clinit();
    if (!Number.$classNumber_) {
      Number.$classNumber_ = Class.$createForClass(
          $Util.$generateId('Number'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.importglobaljstypes.Number'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.importglobaljstypes.Number'));
    }
    return Number.$classNumber_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return Number.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $double = goog.module.get('vmbootstrap.primitives.$double$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number() {}
};


/**
 * The class literal field.
 * @private {Class}
 */
Number.$classNumber_ = null;



/**
 * Export class.
 */
exports = Number;
//# sourceMappingURL=Number.js.map