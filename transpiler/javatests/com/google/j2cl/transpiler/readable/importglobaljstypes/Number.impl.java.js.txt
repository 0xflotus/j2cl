/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.importglobaljstypes.Number.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.importglobaljstypes.Number$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let com_google_j2cl_transpiler_readable_importglobaljstypes_Number_MyLiteralType_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.importglobaljstypes.Number.MyLiteralType.$Overlay$impl');
let com_google_j2cl_transpiler_readable_importglobaljstypes_Number_NativeFunction_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.importglobaljstypes.Number.NativeFunction.$Overlay$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');
let $double = goog.forwardDeclare('vmbootstrap.primitives.$double$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class com_google_j2cl_transpiler_readable_importglobaljstypes_Number extends
    java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Number()'.
   * @return {!com_google_j2cl_transpiler_readable_importglobaljstypes_Number}
   * @public
   */
  static $create__() {
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();
    let $instance =
        new com_google_j2cl_transpiler_readable_importglobaljstypes_Number();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Number()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number();
  }

  /**
   * @param {number} x
   * @return {boolean}
   * @public
   */
  static m_test__double(x) {
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();
    return Number.isInteger(x);
  }

  /**
   * @param {Array<number>} array
   * @return {?string}
   * @public
   */
  static m_fromCharCode__arrayOf_int(array) {
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();
    return /**@type {?string} */ ($Casts.$to(
        /**@type {Function<?string>} */ (String.fromCharCode)
            .apply(null, array),
        java_lang_String));
  }

  /**
   * @param {Object} a
   * @return {Object}
   * @public
   */
  m_testJsDocForLiteralType__com_google_j2cl_transpiler_readable_importglobaljstypes_Number_MyLiteralType(
      a) {
    return a;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof
        com_google_j2cl_transpiler_readable_importglobaljstypes_Number;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor,
        com_google_j2cl_transpiler_readable_importglobaljstypes_Number);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit =
        function() {};
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number_MyLiteralType_$Overlay =
        goog.module.get(
            'com.google.j2cl.transpiler.readable.importglobaljstypes.Number.MyLiteralType.$Overlay$impl');
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number_NativeFunction_$Overlay =
        goog.module.get(
            'com.google.j2cl.transpiler.readable.importglobaljstypes.Number.NativeFunction.$Overlay$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    $double = goog.module.get('vmbootstrap.primitives.$double$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number() {}
};

$Util.$setClassMetadata(
    com_google_j2cl_transpiler_readable_importglobaljstypes_Number,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.importglobaljstypes.Number'));



/**
 * Export class.
 */
exports = com_google_j2cl_transpiler_readable_importglobaljstypes_Number;
//# sourceMappingURL=Number.js.map