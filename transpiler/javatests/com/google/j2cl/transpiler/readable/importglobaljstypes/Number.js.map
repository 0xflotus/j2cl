[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [super();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<synthetic: ctor_js>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<synthetic: ctor_create>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [let $instance = new com_google_j2cl_transpiler_readable_importglobaljstypes_Number();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<synthetic: ctor_create>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [$instance.$ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number__();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<synthetic: ctor_create>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [return $instance;] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<synthetic: ctor_create>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<init>"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [this.$init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<init>"
[x] => [x] "x"
[public static boolean test(double x) {
    return Number.fun(x);
  }] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.test"
[return Number.fun(x);] => [return Number.isInteger(x);] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.test"
[array] => [array] "array"
[public static String fromCharCode(int[] array) {
    return getFromCharCodeFunction().apply(null, array);
  }] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.fromCharCode"
[return getFromCharCodeFunction().apply(null, array);] => [return /**@type {?string} */ ($Casts.$to(/**@type {Function<?string>} */ (String.fromCharCode).apply(null, array), java_lang_String));] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.fromCharCode"
[a] => [a] "a"
[return a;] => [return a;] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.testJsDocForLiteralType"
[/**
 * Tests explicit import by namespaced JsMethod.
...  }
}] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.<clinit>"
