[UNKNOWN] => [super();]
[UNKNOWN] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();]
[UNKNOWN] => [let $instance = new com_google_j2cl_transpiler_readable_importglobaljstypes_Number();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_importglobaljstypes_Number__();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_importglobaljstypes_Number();]
[x] => [x] "x"
[UNKNOWN] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();]
[return Number.fun(x);] => [return Number.isInteger(x);] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.test"
[array] => [array] "array"
[UNKNOWN] => [com_google_j2cl_transpiler_readable_importglobaljstypes_Number.$clinit();]
[return getFromCharCodeFunction().apply(null, array);] => [return /**@type {?string} */ ($Casts.$to(/**@type {Function<?string>} */ (String.fromCharCode).apply(null, array), java_lang_String));] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.fromCharCode"
[a] => [a] "a"
[return a;] => [return a;] "com.google.j2cl.transpiler.readable.importglobaljstypes.Number.testJsDocForLiteralType"
[UNKNOWN] => [java_lang_Object.$clinit();]
