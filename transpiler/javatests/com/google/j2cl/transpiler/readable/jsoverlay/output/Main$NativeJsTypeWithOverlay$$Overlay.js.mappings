[@JsOverlay
    public final int callM() {
      return m();
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.callM"
[return m();] => [return $thisArg.m();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.callM"
[@JsOverlay
    public static final int fun() {
      return 1;
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.fun"
[return 1;] => [return 1;] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.fun"
[@JsOverlay
    private static final int bar() {
      return 1;
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.bar"
[return 1;] => [return 1;] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.bar"
[@JsOverlay
    private final int foo() {
      return 1;
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.foo"
[return 1;] => [return 1;] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.foo"
[a] => [a] "a"
[@JsOverlay
    public static int varargs(int... a) {
      return a[0];
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.varargs"
[return a[0];] => [return a[0];] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.varargs"
[@JsOverlay
    private int baz() {
      return 1;
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.baz"
[return 1;] => [return 1;] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.baz"
[@JsOverlay
    public final void overlayWithJsFunction() {
...      }.run();
    }] => [$Overlay.$clinit();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.overlayWithJsFunction"
[new Intf() {
        @Override
        public void run() {}
      }.run();] => [(() =>{
    })();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.overlayWithJsFunction"
[@JsOverlay public static Object staticField = new Object();] => [return ($Overlay.$clinit(), $Overlay.$f_staticField__com_google_j2cl_transpiler_readable_jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay);] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.<synthetic: getter>"
[@JsOverlay public static Object staticField = new Object();] => [($Overlay.$clinit(), $Overlay.$f_staticField__com_google_j2cl_transpiler_readable_jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay = value);] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.<synthetic: setter>"
[@JsOverlay public static Object staticField = new Object();] => [$Overlay.$f_staticField__com_google_j2cl_transpiler_readable_jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay = java_lang_Object.$create__();] "com.google.j2cl.transpiler.readable.jsoverlay.Main$NativeJsTypeWithOverlay$$Overlay.<clinit>"
[@JsOverlay public static final int COMPILE_TIME_CONSTANT = 10;] => [/** @public {number} @const */
$Overlay.f_COMPILE_TIME_CONSTANT__com_google_j2cl_transpiler_readable_jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay = 10;]
[@JsType(isNative = true, namespace = "test.foo")
  public static class NativeJsTypeWithOverlay {
    public static int nonJsOverlayField;

    @JsOverlay public static final int COMPILE_TIME_CONSTANT = 10;

    @JsOverlay public static Object staticField = new Object();

    public native int m();

    // non JsOverlay static method.
    public static native void n();

    @JsOverlay
    public final int callM() {
      return m();
    }

    @JsOverlay
    public static final int fun() {
      return 1;
    }

    @JsOverlay
    private static final int bar() {
      return 1;
    }

    @JsOverlay
    private final int foo() {
      return 1;
    }

    @JsOverlay
    public static int varargs(int... a) {
      return a[0];
    }

    @JsOverlay
    private int baz() {
      return 1;
    }

    @JsOverlay
    public final void overlayWithJsFunction() {
      new Intf() {
        @Override
        public void run() {}
      }.run();
    }
  }] => [/** @private {*} */
$Overlay.$f_staticField__com_google_j2cl_transpiler_readable_jsoverlay_Main_NativeJsTypeWithOverlay_$Overlay;]
