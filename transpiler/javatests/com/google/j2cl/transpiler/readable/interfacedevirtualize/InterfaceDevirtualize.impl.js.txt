/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.interfacedevirtualize.InterfaceDevirtualize.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.interfacedevirtualize.InterfaceDevirtualize$impl');


let Object = goog.require('gen.java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Boolean = goog.forwardDeclare('gen.java.lang.Boolean$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let Comparable = goog.forwardDeclare('gen.java.lang.Comparable$impl');
let Double = goog.forwardDeclare('gen.java.lang.Double$impl');
let Integer = goog.forwardDeclare('gen.java.lang.Integer$impl');
let $Comparables = goog.forwardDeclare('vmbootstrap.Comparables$impl');


class InterfaceDevirtualize extends Object {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!InterfaceDevirtualize}
   * @public
   */
  static $create() {
    InterfaceDevirtualize.$clinit();
    let $instance = new InterfaceDevirtualize();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_interfacedevirtualize_InterfaceDevirtualize();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_interfacedevirtualize_InterfaceDevirtualize() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_interfacedevirtualize_InterfaceDevirtualize();
  }

  /**
   * @template M_T
   * @param {(Comparable<M_T>|?number|?boolean|?string)} c
   * @param {M_T} t
   * @return {number}
   * @public
   */
  m_compare0__java_lang_Comparable__java_lang_Object(c, t) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, t);
  }

  /**
   * @param {(Comparable|?number|?boolean|?string)} c
   * @param {*} o
   * @return {number}
   * @public
   */
  m_compare1__java_lang_Comparable__java_lang_Object(c, o) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, o);
  }

  /**
   * @param {(Comparable<?number>|?number|?boolean|?string)} c
   * @param {?number} d
   * @return {number}
   * @public
   */
  m_compare2__java_lang_Comparable__java_lang_Double(c, d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }

  /**
   * @param {?number} d1
   * @param {?number} d2
   * @return {number}
   * @public
   */
  m_compare3__java_lang_Double__java_lang_Double(d1, d2) {
    return Double.m_compareTo__java_lang_Double__java_lang_Double(d1, d2);
  }

  /**
   * @param {(Comparable<?boolean>|?number|?boolean|?string)} c
   * @param {?boolean} d
   * @return {number}
   * @public
   */
  m_compare2__java_lang_Comparable__java_lang_Boolean(c, d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }

  /**
   * @param {?boolean} d1
   * @param {?boolean} d2
   * @return {number}
   * @public
   */
  m_compare3__java_lang_Boolean__java_lang_Boolean(d1, d2) {
    return Boolean.m_compareTo__java_lang_Boolean__java_lang_Boolean(d1, d2);
  }

  /**
   * @param {(Comparable<Integer>|?number|?boolean|?string)} c
   * @param {Integer} d
   * @return {number}
   * @public
   */
  m_compare2__java_lang_Comparable__java_lang_Integer(c, d) {
    return $Comparables.m_compareTo__java_lang_Comparable__java_lang_Object(
        c, d);
  }

  /**
   * @param {Integer} d1
   * @param {Integer} d2
   * @return {number}
   * @public
   */
  m_compare3__java_lang_Integer__java_lang_Integer(d1, d2) {
    return d1.m_compareTo__java_lang_Integer(d2);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InterfaceDevirtualize;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InterfaceDevirtualize);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Boolean = goog.module.get('gen.java.lang.Boolean$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    Comparable = goog.module.get('gen.java.lang.Comparable$impl');
    Double = goog.module.get('gen.java.lang.Double$impl');
    Integer = goog.module.get('gen.java.lang.Integer$impl');
    $Comparables = goog.module.get('vmbootstrap.Comparables$impl');
    Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_interfacedevirtualize_InterfaceDevirtualize() {
  }
};

$Util.$setClassMetadata(
    InterfaceDevirtualize,
    'com.google.j2cl.transpiler.readable.interfacedevirtualize.InterfaceDevirtualize');



/**
 * Export class.
 */
exports = InterfaceDevirtualize;
//# sourceMappingURL=InterfaceDevirtualize.js.map