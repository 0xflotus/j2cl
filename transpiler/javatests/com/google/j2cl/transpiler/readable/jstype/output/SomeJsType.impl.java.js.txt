/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jstype.SomeJsType.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.jstype.SomeJsType$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let com_google_j2cl_transpiler_readable_jstype_SomeJsType_Star_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jstype.SomeJsType.Star.$Overlay$impl');
let com_google_j2cl_transpiler_readable_jstype_SomeJsType_Wildcard_$Overlay = goog.forwardDeclare('com.google.j2cl.transpiler.readable.jstype.SomeJsType.Wildcard.$Overlay$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @template C_T
 */
class SomeJsType extends java_lang_Object {
  /**
   * JsConstructor 'SomeJsType()'.
   * @public
   */
  constructor() {
    SomeJsType.$clinit();
    super();
    /** @public {number} */
    this.publicField = 0;
    /** @public {number} */
    this.f_privateField__com_google_j2cl_transpiler_readable_jstype_SomeJsType_ =
        0;
    /** @public {number} */
    this.f_packageField__com_google_j2cl_transpiler_readable_jstype_SomeJsType =
        0;
    /** @public {number} */
    this.f_protectedField__com_google_j2cl_transpiler_readable_jstype_SomeJsType =
        0;
    this.$ctor__com_google_j2cl_transpiler_readable_jstype_SomeJsType__();
  }

  /**
   * Initialization from constructor 'SomeJsType()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jstype_SomeJsType__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  publicMethod() {}

  /**
   * @return {void}
   * @public
   */
  m_privateMethod___$p_com_google_j2cl_transpiler_readable_jstype_SomeJsType() {
  }

  /**
   * @return {void}
   * @public
   */
  m_packageMethod___$pp_com_google_j2cl_transpiler_readable_jstype() {}

  /**
   * @return {void}
   * @public
   */
  m_protectedMethod__() {}

  /**
   * @return {void}
   * @public
   */
  useFieldsAndMethods() {
    let value = this.publicField +
        this.f_privateField__com_google_j2cl_transpiler_readable_jstype_SomeJsType_ +
        this.f_packageField__com_google_j2cl_transpiler_readable_jstype_SomeJsType +
        this.f_protectedField__com_google_j2cl_transpiler_readable_jstype_SomeJsType;
    this.publicMethod();
    this.m_privateMethod___$p_com_google_j2cl_transpiler_readable_jstype_SomeJsType();
    this.m_packageMethod___$pp_com_google_j2cl_transpiler_readable_jstype();
    this.m_protectedMethod__();
  }

  /**
   * @param {*} s
   * @param {?} w
   * @return {?}
   * @public
   */
  testStarAndWildCard(s, w) {
    let object = java_lang_Object.$create__();
    let star = /**@type {*} */ ($Casts.$to(
        $Casts.$to(3.0, java_lang_Object),
        com_google_j2cl_transpiler_readable_jstype_SomeJsType_Star_$Overlay));
    return /**@type {?} */ ($Casts.$to(
        star,
        com_google_j2cl_transpiler_readable_jstype_SomeJsType_Wildcard_$Overlay));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof SomeJsType;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SomeJsType);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SomeJsType.$clinit = function() {};
    com_google_j2cl_transpiler_readable_jstype_SomeJsType_Star_$Overlay =
        goog.module.get(
            'com.google.j2cl.transpiler.readable.jstype.SomeJsType.Star.$Overlay$impl');
    com_google_j2cl_transpiler_readable_jstype_SomeJsType_Wildcard_$Overlay =
        goog.module.get(
            'com.google.j2cl.transpiler.readable.jstype.SomeJsType.Wildcard.$Overlay$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    SomeJsType,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jstype.SomeJsType'));



/**
 * Export class.
 */
exports = SomeJsType;
//# sourceMappingURL=SomeJsType.js.map