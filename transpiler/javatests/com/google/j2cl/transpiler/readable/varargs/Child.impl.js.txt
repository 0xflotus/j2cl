/**
 * Impl transpiled from com.google.j2cl.transpiler.readable.varargs.Child.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.varargs.Child$impl');


let Varargs = goog.require('gen.com.google.j2cl.transpiler.readable.varargs.Varargs$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class Child extends Varargs {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_varargs_Child() {}

  /**
   * A particular Java constructor as a factory method.
   * @return {!Child}
   * @public
   * @nocollapse
   */
  static $create() {
    Child.$clinit();
    let instance = new Child;
    instance.$ctor__com_google_j2cl_transpiler_readable_varargs_Child();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_varargs_Child() {
    this.$ctor__com_google_j2cl_transpiler_readable_varargs_Varargs__arrayOf_int(
        [1]);
    this.$init__com_google_j2cl_transpiler_readable_varargs_Child();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof Child; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Child);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    Child.$clinit();
    if (!Child.$classChild) {
      Child.$classChild = Class.$createForClass(
          $Util.$generateId('Child'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.varargs.Child'),
          Varargs.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.varargs.Child'));
    }
    return Child.$classChild;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    Varargs.$clinit();
  }
}
;



/**
 * Export class.
 */
exports = Child;
