/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/nestedinstanceinnerclass/OuterClass.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClassModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let $Util = goog.require('nativebootstrap.UtilModule').Util;


class OuterClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass() {
  }

  /**
   * @return {OuterClass$InnerClass}
   * @public
   */
  m_$create_OuterClass$InnerClass() {
    return OuterClass$InnerClass.$create(this);
  }

  /**
   * @return {void}
   * @public
   */
  m_test() {
    OuterClass.$create()
        .m_$create_OuterClass$InnerClass()
        .m_$create_OuterClass$InnerClass$InnerInnerClass();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!OuterClass}
   * @public
   * @nocollapse
   */
  static $create() {
    OuterClass.$clinit();
    let instance = new OuterClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof OuterClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, OuterClass);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
OuterClass.$class = Class.$createForClass(
    $Util.$generateId('OuterClass'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass'));

/**
 * Export class.
 */
exports.OuterClass = OuterClass;



class OuterClass$InnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {OuterClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass() {
  }

  /**
   * @return {OuterClass$InnerClass$InnerInnerClass}
   * @public
   */
  m_$create_OuterClass$InnerClass$InnerInnerClass() {
    return OuterClass$InnerClass$InnerInnerClass.$create(this);
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {OuterClass} $outer_this
   * @return {!OuterClass$InnerClass}
   * @public
   * @nocollapse
   */
  static $create($outer_this) {
    OuterClass$InnerClass.$clinit();
    let instance = new OuterClass$InnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {OuterClass} $outer_this
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass(
      $outer_this) {
    this.$ctor__java_lang_Object();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass =
        $outer_this;
    this.$init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof OuterClass$InnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, OuterClass$InnerClass);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
OuterClass$InnerClass.$class = Class.$createForClass(
    $Util.$generateId('InnerClass'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass$InnerClass'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass'));

/**
 * Export class.
 */
exports.OuterClass$InnerClass = OuterClass$InnerClass;



class OuterClass$InnerClass$InnerInnerClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {OuterClass$InnerClass}
     */
    this.f_x__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        null;
    /**
     * @public {OuterClass}
     */
    this.f_y__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        null;
    /**
     * @public {OuterClass$InnerClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass() {
    this.f_x__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass;
    this.f_y__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass
            .f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {OuterClass$InnerClass} $outer_this
   * @return {!OuterClass$InnerClass$InnerInnerClass}
   * @public
   * @nocollapse
   */
  static $create($outer_this) {
    OuterClass$InnerClass$InnerInnerClass.$clinit();
    let instance = new OuterClass$InnerClass$InnerInnerClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass(
            $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {OuterClass$InnerClass} $outer_this
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass(
      $outer_this) {
    this.$ctor__java_lang_Object();
    this.f_$outer_this__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass =
        $outer_this;
    this.$init__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass$InnerClass$InnerInnerClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof OuterClass$InnerClass$InnerInnerClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor,
                               OuterClass$InnerClass$InnerInnerClass);
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


/**
 * @public {Class}
 * @nocollapse
 */
OuterClass$InnerClass$InnerInnerClass.$class = Class.$createForClass(
    $Util.$generateId('InnerInnerClass'),
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass$InnerClass$InnerInnerClass'),
    Object.$class,
    $Util.$generateId(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass'));

/**
 * Export class.
 */
exports.OuterClass$InnerClass$InnerInnerClass =
    OuterClass$InnerClass$InnerInnerClass;
