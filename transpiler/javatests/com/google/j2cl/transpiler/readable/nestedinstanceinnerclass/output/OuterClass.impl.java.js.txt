/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InnerClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass$impl');
let InnerInnerClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass$impl');


class OuterClass extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'OuterClass()'.
   * @return {!OuterClass}
   * @public
   */
  static $create__() {
    OuterClass.$clinit();
    let $instance = new OuterClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass__();
    return $instance;
  }

  /**
   * Initialization from constructor 'OuterClass()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    InnerInnerClass
        .$create__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass_InnerClass(
            InnerClass
                .$create__com_google_j2cl_transpiler_readable_nestedinstanceinnerclass_OuterClass(
                    OuterClass.$create__()));
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof OuterClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, OuterClass);
  }

  /**
   * @public
   */
  static $clinit() {
    OuterClass.$clinit = function() {};
    InnerClass = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass$impl');
    InnerInnerClass = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass.InnerClass.InnerInnerClass$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    OuterClass,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.nestedinstanceinnerclass.OuterClass'));



exports = OuterClass;
//# sourceMappingURL=OuterClass.js.map