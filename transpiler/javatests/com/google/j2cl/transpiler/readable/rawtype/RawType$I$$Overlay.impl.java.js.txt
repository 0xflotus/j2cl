/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.rawtype.RawType$I$$Overlay.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.rawtype.RawType.I$$Overlay$impl');


const I = goog.require('com.google.j2cl.transpiler.readable.rawtype.RawType.I$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let RawType = goog.forwardDeclare('com.google.j2cl.transpiler.readable.rawtype.RawType$impl');


class I$$Overlay {
  /**
   * @template C_I_T
   * @param {I<C_I_T>} $thisArg
   * @param {C_I_T} t
   * @return {void}
   * @public
   */
  static m_f__com_google_j2cl_transpiler_readable_rawtype_RawType_I__com_google_j2cl_transpiler_readable_rawtype_RawType(
      $thisArg, t) {
    I$$Overlay.$clinit();
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return true;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    I$$Overlay.$clinit = function() {};
    RawType = goog.module.get(
        'com.google.j2cl.transpiler.readable.rawtype.RawType$impl');
  }
};

$Util.$setClassMetadataForInterface(
    I$$Overlay,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.rawtype.RawType.I'));


/**
 * Export class.
 */
exports = I$$Overlay;
//# sourceMappingURL=RawType$I$$Overlay.js.map