[UNKNOWN] => [super();]
[UNKNOWN] => [ArrayOfBoxedType.$clinit();]
[UNKNOWN] => [let $instance = new ArrayOfBoxedType();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_arrayofboxedtype_ArrayOfBoxedType();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_arrayofboxedtype_ArrayOfBoxedType();]
[Object[] numberArray = new Number[2];] => [let numberArray = /**@type {!Array<(Number|?number)>} */ ($Arrays.$create([2], Number));]
[Object[] byteArray = new Byte[2];] => [let byteArray = /**@type {!Array<Byte>} */ ($Arrays.$create([2], Byte));]
[Object[] doublerArray = new Double[2];] => [let doublerArray = /**@type {!Array<?number>} */ ($Arrays.$create([2], Double));]
[Object[] floatArray = new Float[2];] => [let floatArray = /**@type {!Array<Float>} */ ($Arrays.$create([2], Float));]
[Object[] integerArray = new Integer[2];] => [let integerArray = /**@type {!Array<Integer>} */ ($Arrays.$create([2], Integer));]
[Object[] longArray = new Long[2];] => [let longArray = /**@type {!Array<Long>} */ ($Arrays.$create([2], Long));]
[Object[] shortArray = new Short[2];] => [let shortArray = /**@type {!Array<Short>} */ ($Arrays.$create([2], Short));]
[Object[] characterArray = new Character[2];] => [let characterArray = /**@type {!Array<Character>} */ ($Arrays.$create([2], Character));]
[Object[] booleanArray = new Boolean[2];] => [let booleanArray = /**@type {!Array<?boolean>} */ ($Arrays.$create([2], Boolean));]
[Number[] nArray = (Number[]) byteArray;] => [let nArray = /**@type {Array<(Number|?number)>} */ ($Arrays.$castTo(byteArray, Number, 1));]
[Byte[] bArray = (Byte[]) byteArray;] => [let bArray = /**@type {Array<Byte>} */ ($Arrays.$castTo(byteArray, Byte, 1));]
[Double[] dArray = (Double[]) byteArray;] => [let dArray = /**@type {Array<?number>} */ ($Arrays.$castTo(byteArray, Double, 1));]
[Float[] fArray = (Float[]) byteArray;] => [let fArray = /**@type {Array<Float>} */ ($Arrays.$castTo(byteArray, Float, 1));]
[Integer[] iArray = (Integer[]) byteArray;] => [let iArray = /**@type {Array<Integer>} */ ($Arrays.$castTo(byteArray, Integer, 1));]
[Long[] lArray = (Long[]) byteArray;] => [let lArray = /**@type {Array<Long>} */ ($Arrays.$castTo(byteArray, Long, 1));]
[Short[] sArray = (Short[]) byteArray;] => [let sArray = /**@type {Array<Short>} */ ($Arrays.$castTo(byteArray, Short, 1));]
[Character[] cArray = (Character[]) byteArray;] => [let cArray = /**@type {Array<Character>} */ ($Arrays.$castTo(byteArray, Character, 1));]
[Boolean[] boolArray = (Boolean[]) byteArray;] => [let boolArray = /**@type {Array<?boolean>} */ ($Arrays.$castTo(byteArray, Boolean, 1));]
[numberArray[1] = new Integer(1);] => [$Arrays.$set(numberArray, 1, Integer.$create__int(1));]
