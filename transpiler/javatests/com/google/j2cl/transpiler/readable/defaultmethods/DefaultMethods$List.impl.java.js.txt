/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.defaultmethods.DefaultMethods$List.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.defaultmethods.DefaultMethods.List$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


/**
 * @interface
 * @template C_List_T
 */
class List {
  /**
   * @param {C_List_T} elem
   * @return {void}
   * @public
   */
  m_add__java_lang_Object(elem) {}

  /**
   * @param {Array<C_List_T>} elems
   * @return {void}
   * @public
   */
  m_remove__arrayOf_java_lang_Object(elems) {}

  /**
   * @param {number} startIndex
   * @param {number} endIndex
   * @return {List<C_List_T>}
   * @public
   */
  m_sublist__int__int(startIndex, endIndex) {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_defaultmethods_DefaultMethods_List =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_defaultmethods_DefaultMethods_List;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        !!classConstructor.prototype
              .$implements__com_google_j2cl_transpiler_readable_defaultmethods_DefaultMethods_List;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    List.$clinit = function() {};
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
  }
};

$Util.$setClassMetadataForInterface(
    List,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.defaultmethods.DefaultMethods$List'));


List.$markImplementor(/** @type {Function} */ (List));


/**
 * Export class.
 */
exports = List;
//# sourceMappingURL=DefaultMethods$List.js.map