/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$1.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$1$impl');


let SomeClass = goog.require('gen.com.google.j2cl.transpiler.readable.anonymousclass.SomeClass$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let AnonymousClass = goog.forwardDeclare('gen.com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$impl');
let Class = goog.forwardDeclare('gen.java.lang.Class$impl');
let String = goog.forwardDeclare('gen.java.lang.String$impl');
let $int = goog.forwardDeclare('vmbootstrap.primitives.$int$impl');


class AnonymousClass$1 extends SomeClass {
  /**
   * Defines instance fields.
   */
  constructor() {
    super();
    /**
     * @public {AnonymousClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1 =
        null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $_0
   * @param {AnonymousClass} $outer_this
   * @return {!AnonymousClass$1}
   * @public
   */
  static $create__int__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass(
      $_0, $outer_this) {
    AnonymousClass$1.$clinit();
    let $instance = new AnonymousClass$1;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1__int__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass(
            $_0, $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $_0
   * @param {AnonymousClass} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1__int__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass(
      $_0, $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1 =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass__int(
        $_0);
    this.$init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1();
  }

  /**
   * @override
   * @return {?string}
   * @public
   */
  m_foo() { return "a"; }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) { return instance instanceof AnonymousClass$1; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnonymousClass$1);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    AnonymousClass$1.$clinit();
    if (!AnonymousClass$1.$classAnonymousClass$1_) {
      AnonymousClass$1.$classAnonymousClass$1_ = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass.1'));
    }
    return AnonymousClass$1.$classAnonymousClass$1_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return AnonymousClass$1.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    AnonymousClass = goog.module.get(
        'gen.com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$impl');
    Class = goog.module.get('gen.java.lang.Class$impl');
    String = goog.module.get('gen.java.lang.String$impl');
    $int = goog.module.get('vmbootstrap.primitives.$int$impl');
    SomeClass.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
AnonymousClass$1.$classAnonymousClass$1_ = null;



/**
 * Export class.
 */
exports = AnonymousClass$1;
//# sourceMappingURL=AnonymousClass$1.js.map