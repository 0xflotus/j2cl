/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.anonymousclass.SomeInterface.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.anonymousclass.SomeInterface$impl');


const $Util = goog.require('nativebootstrap.Util$impl');

let SomeClass = goog.forwardDeclare('com.google.j2cl.transpiler.readable.anonymousclass.SomeClass$impl');
let $1 = goog.forwardDeclare('com.google.j2cl.transpiler.readable.anonymousclass.SomeInterface.$1$impl');


/**
 * @interface
 */
class SomeInterface {
  /**
   * A static field getter.
   * @return {SomeClass}
   * @public
   */
  static get f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface() {
    return (
        SomeInterface.$clinit(),
        SomeInterface
            .$f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface);
  }

  /**
   * A static field setter.
   * @param {SomeClass} value
   * @return {void}
   * @public
   */
  static set f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface(
      value) {
    (SomeInterface.$clinit(),
     SomeInterface
         .$f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface =
         value);
  }

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
        !!instance
              .$implements__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
        !!classConstructor.prototype
              .$implements__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    SomeInterface.$clinit = function() {};
    $1 = goog.module.get(
        'com.google.j2cl.transpiler.readable.anonymousclass.SomeInterface.$1$impl');
    SomeInterface
        .$f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface =
        $1.$create__int(1);
  }
};

$Util.$setClassMetadataForInterface(
    SomeInterface,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.anonymousclass.SomeInterface'));


/**
 * @private {SomeClass}
 */
SomeInterface
    .$f_implicitlyStatic__com_google_j2cl_transpiler_readable_anonymousclass_SomeInterface;


SomeInterface.$markImplementor(/** @type {Function} */ (SomeInterface));


/**
 * Export class.
 */
exports = SomeInterface;
//# sourceMappingURL=SomeInterface.js.map