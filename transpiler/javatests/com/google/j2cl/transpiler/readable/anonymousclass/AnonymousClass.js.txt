/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/anonymousclass/AnonymousClass.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClassModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let String = goog.require('gen.java.lang.StringModule').String;
let $Util = goog.require('nativebootstrap.UtilModule').Util;
let $int = goog.require('vmbootstrap.PrimitivesModule').$int;


class SomeClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass() {}

  /**
   * @return {?string}
   * @public
   */
  m_foo() {}

  /**
   * A particular Java constructor as a factory method.
   * @param {number} i
   * @return {!SomeClass}
   * @package
   * @nocollapse
   */
  static $create__int(i) {
    SomeClass.$clinit();
    let instance = new SomeClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass__int(
            i);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} i
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass__int(i) {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof SomeClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, SomeClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!SomeClass.$classSomeClass) {
      SomeClass.$classSomeClass = Class.$createForClass(
          $Util.$generateId('SomeClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.SomeClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.SomeClass'));
    }
    return SomeClass.$classSomeClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.SomeClass = SomeClass;



class AnonymousClass extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass() {}

  /**
   * @return {void}
   * @public
   */
  m_main() { let instance = AnonymousClass$1.$create__int(1, this); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!AnonymousClass}
   * @public
   * @nocollapse
   */
  static $create() {
    AnonymousClass.$clinit();
    let instance = new AnonymousClass;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof AnonymousClass; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnonymousClass);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!AnonymousClass.$classAnonymousClass) {
      AnonymousClass.$classAnonymousClass = Class.$createForClass(
          $Util.$generateId('AnonymousClass'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass'));
    }
    return AnonymousClass.$classAnonymousClass;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;



/**
 * Export class.
 */
exports.AnonymousClass = AnonymousClass;



class AnonymousClass$1 extends SomeClass {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() {
    super();
    /**
     * @public {AnonymousClass}
     */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1 =
        null;
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1() {
  }

  /**
   * @override
   * @return {?string}
   * @public
   */
  m_foo() { return "a"; }

  /**
   * A particular Java constructor as a factory method.
   * @param {number} $_0
   * @param {AnonymousClass} $outer_this
   * @return {!AnonymousClass$1}
   * @package
   * @nocollapse
   */
  static $create__int($_0, $outer_this) {
    AnonymousClass$1.$clinit();
    let instance = new AnonymousClass$1;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1__int(
            $_0, $outer_this);
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {number} $_0
   * @param {AnonymousClass} $outer_this
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1__int(
      $_0, $outer_this) {
    this.$ctor__com_google_j2cl_transpiler_readable_anonymousclass_SomeClass__int(
        $_0);
    this.f_$outer_this__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1 =
        $outer_this;
    this.$init__com_google_j2cl_transpiler_readable_anonymousclass_AnonymousClass$1();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) { return instance instanceof AnonymousClass$1; }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnonymousClass$1);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!AnonymousClass$1.$classAnonymousClass$1) {
      AnonymousClass$1.$classAnonymousClass$1 = Class.$createForClass(
          $Util.$generateId('1'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass$1'),
          SomeClass.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.anonymousclass.AnonymousClass.1'));
    }
    return AnonymousClass$1.$classAnonymousClass$1;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { SomeClass.$clinit(); }
}
;
