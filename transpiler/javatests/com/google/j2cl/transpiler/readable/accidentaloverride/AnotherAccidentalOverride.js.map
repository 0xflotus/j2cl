[/**
 * Class that subclasses a parameterized type with argument that is not the type bound of the
...  // delegates to Parent.foo__Error().
}] => [/**
 * @extends {Parent<AssertionError>}
...exports = AnotherAccidentalOverride;
] "com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride"
[/**
 * Class that subclasses a parameterized type with argument that is not the type bound of the
...  // delegates to Parent.foo__Error().
}] => [/**
   * Defines instance fields.
...    super();
  }] "com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride"
[UNKNOWN] => [super();]
[/**
 * Class that subclasses a parameterized type with argument that is not the type bound of the
...  // delegates to Parent.foo__Error().
}] => [/**
   * A particular Java constructor as a factory method.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride.<ctor>"
[UNKNOWN] => [AnotherAccidentalOverride.$clinit();]
[UNKNOWN] => [let $instance = new AnotherAccidentalOverride();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_AnotherAccidentalOverride__();]
[UNKNOWN] => [return $instance;]
[/**
 * Class that subclasses a parameterized type with argument that is not the type bound of the
...  // delegates to Parent.foo__Error().
}] => [/**
   * Initializes instance fields for a particular Java constructor.
...    this.$init__com_google_j2cl_transpiler_readable_accidentaloverride_AnotherAccidentalOverride();
  }] "com.google.j2cl.transpiler.readable.accidentaloverride.AnotherAccidentalOverride.<ctor>"
[UNKNOWN] => [this.$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_Parent__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_accidentaloverride_AnotherAccidentalOverride();]
[UNKNOWN] => [/**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {void}
   * @public
   */
  m_foo__java_lang_Object(arg0) {
    super.m_foo__java_lang_Error(/**@type {AssertionError} */ ($Casts.to(arg0, AssertionError)));
  }]
[UNKNOWN] => [super.m_foo__java_lang_Error(/**@type {AssertionError} */ ($Casts.to(arg0, AssertionError)));]
[UNKNOWN] => [Parent.$clinit();]
