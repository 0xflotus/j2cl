/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.accidentaloverride.AccidentalOverride.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.accidentaloverride.AccidentalOverride$impl');


let Parent = goog.require('com.google.j2cl.transpiler.readable.accidentaloverride.Parent$impl');
let SuperInterface = goog.require('com.google.j2cl.transpiler.readable.accidentaloverride.SuperInterface$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Error = goog.forwardDeclare('java.lang.Error$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @extends {Parent<Error>}
 * @implements {SuperInterface<Error>}
 */
class AccidentalOverride extends Parent {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!AccidentalOverride}
   * @public
   */
  static $create__() {
    AccidentalOverride.$clinit();
    let $instance = new AccidentalOverride();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_AccidentalOverride__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_accidentaloverride_AccidentalOverride__() {
    this.$ctor__com_google_j2cl_transpiler_readable_accidentaloverride_Parent__();
    this.$init__com_google_j2cl_transpiler_readable_accidentaloverride_AccidentalOverride();
  }

  /**
   * Bridge method.
   * @override
   * @param {Error} arg0
   * @return {void}
   * @public
   */
  m_foo__java_lang_Object(arg0) {
    super.m_foo__java_lang_Error(/**@type {Error} */ ($Casts.to(arg0, Error)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AccidentalOverride;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AccidentalOverride);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Error = goog.module.get('java.lang.Error$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    Parent.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_accidentaloverride_AccidentalOverride() {
  }
};

$Util.$setClassMetadata(
    AccidentalOverride,
    'com.google.j2cl.transpiler.readable.accidentaloverride.AccidentalOverride');


SuperInterface.$markImplementor(AccidentalOverride);


/**
 * Export class.
 */
exports = AccidentalOverride;
//# sourceMappingURL=AccidentalOverride.js.map