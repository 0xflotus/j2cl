/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.interfaceuse.AnotherInterface.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.interfaceuse.AnotherInterface$impl');


let SomeInterface = goog.require('gen.com.google.j2cl.transpiler.readable.interfaceuse.SomeInterface$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


/**
 * @interface
 * @extends {SomeInterface}
 */
class AnotherInterface {
  /**
   * @return {number}
   * @public
   */
  m_run() {}

  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    SomeInterface.$markImplementor(classConstructor);
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_interfaceuse_AnotherInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_interfaceuse_AnotherInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_interfaceuse_AnotherInterface;
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    AnotherInterface.$clinit();
    if (!AnotherInterface.$classAnotherInterface_) {
      AnotherInterface.$classAnotherInterface_ = Class.$createForInterface(
          $Util.$generateId('AnotherInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.interfaceuse.AnotherInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.interfaceuse.AnotherInterface'));
    }
    return AnotherInterface.$classAnotherInterface_;
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() { Class = goog.module.get('gen.java.lang.Class$impl'); }
}
;


/**
 * The class literal field.
 * @private {Class}
 */
AnotherInterface.$classAnotherInterface_ = null;


AnotherInterface.$markImplementor(/** @type {Function} */ (AnotherInterface));

/**
 * Export class.
 */
exports = AnotherInterface;
