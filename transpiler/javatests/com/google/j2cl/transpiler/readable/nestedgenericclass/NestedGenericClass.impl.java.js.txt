/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let NestedGenericClass$1E = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1E$impl');
let NestedGenericClass$1F = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1F$impl');
let NestedGenericClass$1G = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1G$impl');
let NestedGenericClass$A = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A$impl');
let NestedGenericClass$A$B = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A.B$impl');
let NestedGenericClass$C = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');
let NestedGenericClass$C$D = goog.forwardDeclare('com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C.D$impl');
let Error = goog.forwardDeclare('java.lang.Error$impl');
let Exception = goog.forwardDeclare('java.lang.Exception$impl');
let Number = goog.forwardDeclare('java.lang.Number$impl');


/**
 * @template C_T
 */
class NestedGenericClass extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @template C_T
   * @return {!NestedGenericClass<C_T>}
   * @public
   */
  static $create__() {
    NestedGenericClass.$clinit();
    let $instance = new NestedGenericClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass();
  }

  /**
   * @template M_S
   * @param {M_S} t
   * @return {void}
   * @public
   */
  m_fun__java_lang_Object(t) {
    /**@type {!NestedGenericClass$1E<(Number|?number)>} */
    (NestedGenericClass$1E
         .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
             this));
    /**@type {!NestedGenericClass$1F<C_T>} */
    (NestedGenericClass$1F
         .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
             this));
  }

  /**
   * @template M_T
   * @return {void}
   * @public
   */
  m_bar__() {
    /**@type {!NestedGenericClass$1G<Error>} */
    (NestedGenericClass$1G
         .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
             this))
        .m_bar__();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let n = /**@type {!NestedGenericClass<(Number|?number)>} */ (
        NestedGenericClass.$create__());
    let a = /**@type {!NestedGenericClass$A<Error>} */ (
        NestedGenericClass$A
            .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
                n));
    let b = /**@type {!NestedGenericClass$A$B<Exception>} */ (
        NestedGenericClass$A$B
            .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass$A(
                a));
    /**@type {!NestedGenericClass$C<(Number|?number)>} */
    (NestedGenericClass$C
         .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
             n));
    /**@type {!NestedGenericClass$C$D<(Number|?number)>} */
    (NestedGenericClass$C$D
         .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass$C(
             /**@type {!NestedGenericClass$C<(Number|?number)>} */
             (NestedGenericClass$C
                  .$create__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass(
                      n))));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof NestedGenericClass;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, NestedGenericClass);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    NestedGenericClass$1E = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1E$impl');
    NestedGenericClass$1F = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1F$impl');
    NestedGenericClass$1G = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.$Anonymous1G$impl');
    NestedGenericClass$A = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A$impl');
    NestedGenericClass$A$B = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.A.B$impl');
    NestedGenericClass$C = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C$impl');
    NestedGenericClass$C$D = goog.module.get(
        'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass.C.D$impl');
    Error = goog.module.get('java.lang.Error$impl');
    Exception = goog.module.get('java.lang.Exception$impl');
    Number = goog.module.get('java.lang.Number$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_nestedgenericclass_NestedGenericClass() {
  }
};

$Util.$setClassMetadata(
    NestedGenericClass,
    'com.google.j2cl.transpiler.readable.nestedgenericclass.NestedGenericClass');



/**
 * Export class.
 */
exports = NestedGenericClass;
//# sourceMappingURL=NestedGenericClass.js.map