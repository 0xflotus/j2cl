/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let ArrayList = goog.forwardDeclare('java.util.ArrayList$impl');
let $Equality = goog.forwardDeclare('nativebootstrap.Equality$impl');


/**
 * @template C_T
 */
class CastGenericReturnType extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @template C_T
   * @return {!CastGenericReturnType<C_T>}
   * @public
   */
  static $create__() {
    CastGenericReturnType.$clinit();
    let $instance = new CastGenericReturnType();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();
  }

  /**
   * @template M_T
   * @param {M_T} foo
   * @return {CastGenericReturnType<M_T>}
   * @public
   */
  static m_inferGeneric__java_lang_Object(foo) {
    CastGenericReturnType.$clinit();
    return /**@type {!CastGenericReturnType<*>} */ (
        CastGenericReturnType.$create__());
  }

  /**
   * @param {CastGenericReturnType<?string>} foo
   * @return {CastGenericReturnType<CastGenericReturnType<?string>>}
   * @public
   */
  static m_tightenType__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType(
      foo) {
    CastGenericReturnType.$clinit();
    if (!$Equality.$same(foo, null)) {
      return CastGenericReturnType.m_inferGeneric__java_lang_Object(foo);
    }
    return null;
  }

  /**
   * @template M_V
   * @param {M_V} foo
   * @return {ArrayList<M_V>}
   * @public
   */
  static m_newArrayList__java_lang_Object(foo) {
    CastGenericReturnType.$clinit();
    return /**@type {!ArrayList<*>} */ (ArrayList.$create__());
  }

  /**
   * @param {ArrayList<*>} foo
   * @return {void}
   * @public
   */
  static m_acceptsArrayListOfSuper__java_util_ArrayList(foo) {
    CastGenericReturnType.$clinit();
  }

  /**
   * @return {void}
   * @public
   */
  static m_main__() {
    CastGenericReturnType.$clinit();
    let list = CastGenericReturnType.m_newArrayList__java_lang_Object('foo');
    CastGenericReturnType.m_acceptsArrayListOfSuper__java_util_ArrayList(list);
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof CastGenericReturnType;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, CastGenericReturnType);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    CastGenericReturnType.$clinit = function() {};
    java_lang_String = goog.module.get('java.lang.String$impl');
    ArrayList = goog.module.get('java.util.ArrayList$impl');
    $Equality = goog.module.get('nativebootstrap.Equality$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType() {
  }
};

$Util.$setClassMetadata(
    CastGenericReturnType,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType'));



/**
 * Export class.
 */
exports = CastGenericReturnType;
//# sourceMappingURL=CastGenericReturnType.js.map