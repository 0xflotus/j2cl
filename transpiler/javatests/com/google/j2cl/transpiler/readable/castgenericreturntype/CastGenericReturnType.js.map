[/**
 * Tests that a cast is inserted when a method call returns a generic type.
...  }
}] => [/**
 * @template C_T
...exports = CastGenericReturnType;
] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType"
[/**
 * Tests that a cast is inserted when a method call returns a generic type.
...  }
}] => [/**
   * Defines instance fields.
...    super();
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType"
[UNKNOWN] => [super();]
[/**
 * Tests that a cast is inserted when a method call returns a generic type.
...  }
}] => [/**
   * A particular Java constructor as a factory method.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.<ctor>"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[UNKNOWN] => [let $instance = new CastGenericReturnType();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType__();]
[UNKNOWN] => [return $instance;]
[/**
 * Tests that a cast is inserted when a method call returns a generic type.
...  }
}] => [/**
   * Initializes instance fields for a particular Java constructor.
...    this.$init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();]
[public static <T> CastGenericReturnType<T> inferGeneric(T foo) {
    return new CastGenericReturnType<>();
  }] => [/**
   * @template M_T
...    return /**@type {!CastGenericReturnType<*>} */ (CastGenericReturnType.$create__());
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.inferGeneric"
[foo] => [foo] "foo"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[return new CastGenericReturnType<>();] => [return /**@type {!CastGenericReturnType<*>} */ (CastGenericReturnType.$create__());]
[public static CastGenericReturnType<CastGenericReturnType<String>> tightenType(
      CastGenericReturnType<String> foo) {
...    return null;
  }] => [/**
   * @param {CastGenericReturnType<?string>} foo
...    return null;
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.tightenType"
[foo] => [foo] "foo"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[if (foo != null) {
      // Without a cast to fix it, JSCompiler will infer the type of this return statement to be
      // ?Foo<!Foo<?string>>, which does not match the return type, ?Foo<?Foo<?string>>.
      return inferGeneric(foo);
    }] => [if (!$Equality.$same(foo, null)) {
      return CastGenericReturnType.m_inferGeneric__java_lang_Object(foo);
    }]
[return inferGeneric(foo);] => [return CastGenericReturnType.m_inferGeneric__java_lang_Object(foo);]
[return null;] => [return null;]
[public static <V> ArrayList<V> newArrayList(V foo) {
    return new ArrayList<>();
  }] => [/**
   * @template M_V
...    return /**@type {!ArrayList<*>} */ (ArrayList.$create__());
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.newArrayList"
[foo] => [foo] "foo"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[return new ArrayList<>();] => [return /**@type {!ArrayList<*>} */ (ArrayList.$create__());]
[public static void acceptsArrayListOfSuper(ArrayList<Object> foo) {
    // empty
  }] => [/**
   * @param {ArrayList<*>} foo
...    CastGenericReturnType.$clinit();
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.acceptsArrayListOfSuper"
[foo] => [foo] "foo"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[public static void main() {
    ArrayList<Object> list = newArrayList("foo");
    acceptsArrayListOfSuper(list);
  }] => [/**
   * @return {void}
...    CastGenericReturnType.m_acceptsArrayListOfSuper__java_util_ArrayList(list);
  }] "com.google.j2cl.transpiler.readable.castgenericreturntype.CastGenericReturnType.main"
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[ArrayList<Object> list = newArrayList("foo");] => [let list = CastGenericReturnType.m_newArrayList__java_lang_Object("foo");]
[list] => [list] "list"
[acceptsArrayListOfSuper(list);] => [CastGenericReturnType.m_acceptsArrayListOfSuper__java_util_ArrayList(list);]
[UNKNOWN] => [java_lang_Object.$clinit();]
