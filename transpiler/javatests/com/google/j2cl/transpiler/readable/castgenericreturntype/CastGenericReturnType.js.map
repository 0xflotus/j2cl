[UNKNOWN] => [super();]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[UNKNOWN] => [let $instance = new CastGenericReturnType();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[return new CastGenericReturnType<>();] => [return /**@type {!CastGenericReturnType<*>} */ (CastGenericReturnType.$create());]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[if (foo != null) {
      // Without a cast to fix it, JSCompiler will infer the type of this return statement to be
      // ?Foo<!Foo<?string>>, which does not match the return type, ?Foo<?Foo<?string>>.
      return inferGeneric(foo);
    }] => [if (!$Equality.$same(foo, null)) {
      return /**@type {CastGenericReturnType<CastGenericReturnType<?string>>} */ (CastGenericReturnType.m_inferGeneric__java_lang_Object(foo));
    }]
[return inferGeneric(foo);] => [return /**@type {CastGenericReturnType<CastGenericReturnType<?string>>} */ (CastGenericReturnType.m_inferGeneric__java_lang_Object(foo));]
[return null;] => [return null;]
