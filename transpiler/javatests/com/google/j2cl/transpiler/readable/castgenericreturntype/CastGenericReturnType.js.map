[UNKNOWN] => [super();]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[UNKNOWN] => [let $instance = new CastGenericReturnType();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType__();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_castgenericreturntype_CastGenericReturnType();]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[return new CastGenericReturnType<>();] => [return /**@type {!CastGenericReturnType<*>} */ (CastGenericReturnType.$create__());]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[if (foo != null) {
      // Without a cast to fix it, JSCompiler will infer the type of this return statement to be
      // ?Foo<!Foo<?string>>, which does not match the return type, ?Foo<?Foo<?string>>.
      return inferGeneric(foo);
    }] => [if (!$Equality.$same(foo, null)) {
      return CastGenericReturnType.m_inferGeneric__java_lang_Object(foo);
    }]
[return inferGeneric(foo);] => [return CastGenericReturnType.m_inferGeneric__java_lang_Object(foo);]
[return null;] => [return null;]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[return new ArrayList<>();] => [return /**@type {!ArrayList<*>} */ (ArrayList.$create__());]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[UNKNOWN] => [CastGenericReturnType.$clinit();]
[ArrayList<Object> list = newArrayList("foo");] => [let list = CastGenericReturnType.m_newArrayList__java_lang_Object("foo");]
[acceptsArrayListOfSuper(list);] => [CastGenericReturnType.m_acceptsArrayListOfSuper__java_util_ArrayList(list);]
