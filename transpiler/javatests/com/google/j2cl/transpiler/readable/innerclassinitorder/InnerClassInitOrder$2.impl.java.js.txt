/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$2.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.$2$impl');


const OuterIsNotSuper = goog.require('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsNotSuper$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let InnerClassInitOrder = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$impl');
let OuterIsSuper = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsSuper$impl');


class $2 extends OuterIsNotSuper {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
    /** @public {InnerClassInitOrder} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2 =
        null;
  }

  /**
   * Factory method corresponding to constructor 'new
   * OuterIsNotSuper(InnerClassInitOrder, OuterIsSuper)'.
   * @param {InnerClassInitOrder} $outer_this
   * @param {OuterIsSuper} $super_outer_this
   * @return {!$2}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_Outer_OuterIsSuper(
      $outer_this, $super_outer_this) {
    $2.$clinit();
    let $instance = new $2();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_Outer_OuterIsSuper(
            $outer_this, $super_outer_this);
    return $instance;
  }

  /**
   * Initialization from constructor 'new OuterIsNotSuper(InnerClassInitOrder,
   * OuterIsSuper)'.
   * @param {InnerClassInitOrder} $outer_this
   * @param {OuterIsSuper} $super_outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_Outer_OuterIsSuper(
      $outer_this, $super_outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2 =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_Outer_OuterIsNotSuper__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_Outer(
        $super_outer_this);
    this.$init__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof $2;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, $2);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    $2.$clinit = function() {};
    InnerClassInitOrder = goog.module.get(
        'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$impl');
    OuterIsSuper = goog.module.get(
        'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsSuper$impl');
    OuterIsNotSuper.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder_2() {
  }
};

$Util.$setClassMetadata(
    $2,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$2'));



/**
 * Export class.
 */
exports = $2;
//# sourceMappingURL=InnerClassInitOrder$2.js.map