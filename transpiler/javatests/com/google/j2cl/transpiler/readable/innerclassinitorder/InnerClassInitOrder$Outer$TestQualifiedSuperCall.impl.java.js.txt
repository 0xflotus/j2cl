/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$Outer$TestQualifiedSuperCall.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.TestQualifiedSuperCall$impl');


let InnerClassInitOrder$Outer$OuterIsNotSuper = goog.require('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsNotSuper$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let InnerClassInitOrder$Outer = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer$impl');
let InnerClassInitOrder$Outer$OuterIsSuper = goog.forwardDeclare('com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsSuper$impl');
let Class = goog.forwardDeclare('java.lang.Class$impl');


class InnerClassInitOrder$Outer$TestQualifiedSuperCall extends
    InnerClassInitOrder$Outer$OuterIsNotSuper {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!InnerClassInitOrder$Outer$TestQualifiedSuperCall}
   * @public
   */
  static $create__() {
    InnerClassInitOrder$Outer$TestQualifiedSuperCall.$clinit();
    let $instance = new InnerClassInitOrder$Outer$TestQualifiedSuperCall();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer$TestQualifiedSuperCall__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer$TestQualifiedSuperCall__() {
    this.$ctor__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer$OuterIsNotSuper__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer(
        InnerClassInitOrder$Outer$OuterIsSuper
            .$create__int__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer(
                2, InnerClassInitOrder$Outer.$create__int(1)));
    this.$init__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer$TestQualifiedSuperCall();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InnerClassInitOrder$Outer$TestQualifiedSuperCall;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(
        classConstructor, InnerClassInitOrder$Outer$TestQualifiedSuperCall);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    InnerClassInitOrder$Outer = goog.module.get(
        'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer$impl');
    InnerClassInitOrder$Outer$OuterIsSuper = goog.module.get(
        'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder.Outer.OuterIsSuper$impl');
    Class = goog.module.get('java.lang.Class$impl');
    InnerClassInitOrder$Outer$OuterIsNotSuper.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_innerclassinitorder_InnerClassInitOrder$Outer$TestQualifiedSuperCall() {
  }
};

$Util.$setClassMetadata(
    InnerClassInitOrder$Outer$TestQualifiedSuperCall,
    'com.google.j2cl.transpiler.readable.innerclassinitorder.InnerClassInitOrder$Outer$TestQualifiedSuperCall');



/**
 * Export class.
 */
exports = InnerClassInitOrder$Outer$TestQualifiedSuperCall;
//# sourceMappingURL=InnerClassInitOrder$Outer$TestQualifiedSuperCall.js.map