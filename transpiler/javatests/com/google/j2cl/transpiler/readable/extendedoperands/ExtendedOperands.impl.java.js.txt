/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.extendedoperands.ExtendedOperands.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.extendedoperands.ExtendedOperands$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Long = goog.require('nativebootstrap.Long$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');
let $LongUtils = goog.forwardDeclare('vmbootstrap.LongUtils$impl');
let $Primitives = goog.forwardDeclare('vmbootstrap.Primitives$impl');


class ExtendedOperands extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'ExtendedOperands()'.
   * @return {!ExtendedOperands}
   * @public
   */
  static $create__() {
    ExtendedOperands.$clinit();
    let $instance = new ExtendedOperands();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_extendedoperands_ExtendedOperands__();
    return $instance;
  }

  /**
   * Initialization from constructor 'ExtendedOperands()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_extendedoperands_ExtendedOperands__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_extendedoperands_ExtendedOperands();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let boxedInteger = Integer.m_valueOf__int(3);
    let /** number */ i;
    let /** !$Long */ l;
    let /** number */ d;
    l = $LongUtils.$minus(
        $Primitives.$widenIntToLong(2 - boxedInteger.m_intValue__()),
        $Long.fromBits(2, 0) /* 2 */);
    l = $LongUtils.$or(
        $Primitives.$widenIntToLong(2 | boxedInteger.m_intValue__()),
        $Long.fromBits(2, 0) /* 2 */);
    l = $LongUtils.$times(
        $LongUtils.$times(
            $LongUtils.$times(
                $LongUtils.$times($Long.fromBits(1000000, 0) /* 1000000 */, l),
                $Primitives.$widenIntToLong(60)),
            $Primitives.$widenIntToLong(60)),
        $Primitives.$widenIntToLong(24));
    l = $LongUtils.$times(
        $LongUtils.$times($Primitives.$widenIntToLong(24 * 60 * 60), l),
        $Long.fromBits(1000000, 0) /* 1000000 */);
    d = $Primitives.$widenLongToDouble(l = $Primitives.$widenIntToLong(i = 20));
    l = $Primitives.$widenIntToLong(
        (boxedInteger = Integer.m_valueOf__int(i = 20)).m_intValue__());
    l = $LongUtils.$plus(
        $LongUtils.$plus(
            $Primitives.$widenIntToLong(i + boxedInteger.m_intValue__()), l),
        $Primitives.$widenIntToLong(20));
    d = $Primitives.$widenLongToDouble(
            $LongUtils.$plus($Primitives.$widenIntToLong(20), l)) +
        d;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof ExtendedOperands;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ExtendedOperands);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    ExtendedOperands.$clinit = function() {};
    Integer = goog.module.get('java.lang.Integer$impl');
    $LongUtils = goog.module.get('vmbootstrap.LongUtils$impl');
    $Primitives = goog.module.get('vmbootstrap.Primitives$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_extendedoperands_ExtendedOperands() {
  }
};

$Util.$setClassMetadata(
    ExtendedOperands,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.extendedoperands.ExtendedOperands'));



/**
 * Export class.
 */
exports = ExtendedOperands;
//# sourceMappingURL=ExtendedOperands.js.map