/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.multipletopclasses.MultipleTopClasses.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('gen.com.google.j2cl.transpiler.readable.multipletopclasses.MultipleTopClasses$impl');


let AnotherClass = goog.require('gen.com.google.j2cl.transpiler.readable.multipletopclasses.AnotherClass$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('gen.java.lang.Class$impl');


class MultipleTopClasses extends AnotherClass {
  /**
   * Defines instance fields.
   */
  constructor() { super(); }

  /**
   * A particular Java constructor as a factory method.
   * @return {!MultipleTopClasses}
   * @public
   */
  static $create() {
    MultipleTopClasses.$clinit();
    let $instance = new MultipleTopClasses;
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_multipletopclasses_MultipleTopClasses();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_multipletopclasses_MultipleTopClasses() {
    this.$ctor__com_google_j2cl_transpiler_readable_multipletopclasses_AnotherClass();
    this.$init__com_google_j2cl_transpiler_readable_multipletopclasses_MultipleTopClasses();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof MultipleTopClasses;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {window.Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, MultipleTopClasses);
  }

  /**
   * @return {Class}
   * @public
   */
  static $getClass() {
    MultipleTopClasses.$clinit();
    if (!MultipleTopClasses.$classMultipleTopClasses_) {
      MultipleTopClasses.$classMultipleTopClasses_ = Class.$createForClass(
          $Util.$generateId('MultipleTopClasses'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.multipletopclasses.MultipleTopClasses'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.multipletopclasses.MultipleTopClasses'));
    }
    return MultipleTopClasses.$classMultipleTopClasses_;
  }

  /**
   * @override
   * @return {Class}
   * @public
   */
  m_getClass() { return MultipleTopClasses.$getClass(); }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Class = goog.module.get('gen.java.lang.Class$impl');
    AnotherClass.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_multipletopclasses_MultipleTopClasses() {
  }
};


/**
 * The class literal field.
 * @private {Class}
 */
MultipleTopClasses.$classMultipleTopClasses_ = null;



/**
 * Export class.
 */
exports = MultipleTopClasses;
//# sourceMappingURL=MultipleTopClasses.js.map