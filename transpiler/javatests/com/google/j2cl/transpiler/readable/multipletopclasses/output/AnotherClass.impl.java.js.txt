/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.multipletopclasses.AnotherClass.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.multipletopclasses.AnotherClass$impl');


const j_l_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class AnotherClass extends j_l_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'AnotherClass()'.
   * @return {!AnotherClass}
   * @public
   */
  static $create__() {
    AnotherClass.$clinit();
    let $instance = new AnotherClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_multipletopclasses_AnotherClass__();
    return $instance;
  }

  /**
   * Initialization from constructor 'AnotherClass()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_multipletopclasses_AnotherClass__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof AnotherClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, AnotherClass);
  }

  /**
   * @public
   */
  static $clinit() {
    AnotherClass.$clinit = function() {};
    j_l_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    AnotherClass,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.multipletopclasses.AnotherClass'));



exports = AnotherClass;
//# sourceMappingURL=AnotherClass.js.map