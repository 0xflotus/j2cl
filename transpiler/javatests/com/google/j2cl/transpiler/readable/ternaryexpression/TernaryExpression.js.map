[public class TernaryExpression {

...  }
}] => [class TernaryExpression extends java_lang_Object {
  /**
...exports = TernaryExpression;
] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression"
[public class TernaryExpression {

...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression"
[UNKNOWN] => [super();]
[public class TernaryExpression {

...  }
}] => [/**
   * Factory method corresponding to constructor 'TernaryExpression()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.<ctor>"
[UNKNOWN] => [TernaryExpression.$clinit();]
[UNKNOWN] => [let $instance = new TernaryExpression();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression__();]
[UNKNOWN] => [return $instance;]
[public class TernaryExpression {

...  }
}] => [/**
   * Initialization from constructor 'TernaryExpression()'.
...    this.$init__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression();
  }] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.<ctor>"
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression();]
[public void test() {
    boolean a = true;
...    int value = b ? new Integer(15) : new Integer(30);
  }] => [/**
   * @return {void}
...    let value = (b ? Integer.$create__int(15) : Integer.$create__int(30)).m_intValue__();
  }] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.test"
[boolean a = true;] => [let a = true;] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.test"
[a] => [a] "a"
[int number = a ? 1 : 2;] => [let number$1$ = a ? 1 : 2;] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.test"
[number] => [number$1$] "number"
[boolean b = number == 1 ? number == 2 : number == 1;] => [let b = number$1$ == 1 ? number$1$ == 2 : number$1$ == 1;] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.test"
[b] => [b] "b"
[int value = b ? new Integer(15) : new Integer(30);] => [let value = (b ? Integer.$create__int(15) : Integer.$create__int(30)).m_intValue__();] "com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.test"
[value] => [value] "value"
[UNKNOWN] => [java_lang_Object.$clinit();]
