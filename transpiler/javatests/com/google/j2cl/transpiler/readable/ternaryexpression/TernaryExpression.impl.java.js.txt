/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Integer = goog.forwardDeclare('java.lang.Integer$impl');


class TernaryExpression extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!TernaryExpression}
   * @public
   */
  static $create__() {
    TernaryExpression.$clinit();
    let $instance = new TernaryExpression();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let a = true;
    let l_number = a ? 1 : 2;
    let b = l_number == 1 ? l_number == 2 : l_number == 1;
    let value = (b ? Integer.$create__int(15) : Integer.$create__int(30))
                    .m_intValue__();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof TernaryExpression;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, TernaryExpression);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    Integer = goog.module.get('java.lang.Integer$impl');
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_ternaryexpression_TernaryExpression() {
  }
};

$Util.$setClassMetadata(
    TernaryExpression,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.ternaryexpression.TernaryExpression'));



/**
 * Export class.
 */
exports = TernaryExpression;
//# sourceMappingURL=TernaryExpression.js.map