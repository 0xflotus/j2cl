/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.jstypeinnerclasswithnamespace.JsTypeInnerClassWithNamespace$InnerClass.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('bar.foo.baz.InnerClass$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


class InnerClass extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'InnerClass()'.
   * @return {!InnerClass}
   * @public
   */
  static $create__() {
    InnerClass.$clinit();
    let $instance = new InnerClass();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_jstypeinnerclasswithnamespace_JsTypeInnerClassWithNamespace_InnerClass__();
    return $instance;
  }

  /**
   * Initialization from constructor 'InnerClass()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_jstypeinnerclasswithnamespace_JsTypeInnerClassWithNamespace_InnerClass__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof InnerClass;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, InnerClass);
  }

  /**
   * @public
   */
  static $clinit() {
    InnerClass.$clinit = function() {};
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    InnerClass,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.jstypeinnerclasswithnamespace.JsTypeInnerClassWithNamespace$InnerClass'));



exports = InnerClass;
//# sourceMappingURL=JsTypeInnerClassWithNamespace$InnerClass.js.map