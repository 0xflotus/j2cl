[public class Child extends Parent {
  // This directly exposes Parent.foo, there should be one and only one dispatch method here.
...  }
}] => [class Child extends Parent {
  /**
...exports = Child;
] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child"
[public class Child extends Parent {
  // This directly exposes Parent.foo, there should be one and only one dispatch method here.
...  }
}] => [/**
   * Private implementation constructor.
...    super();
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child"
[UNKNOWN] => [super();]
[public class Child extends Parent {
  // This directly exposes Parent.foo, there should be one and only one dispatch method here.
...  }
}] => [/**
   * Factory method corresponding to constructor 'Child()'.
...    return $instance;
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child.<ctor>"
[UNKNOWN] => [Child.$clinit();]
[UNKNOWN] => [let $instance = new Child();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_packageprivatemethods_package1_Child__();]
[UNKNOWN] => [return $instance;]
[public class Child extends Parent {
  // This directly exposes Parent.foo, there should be one and only one dispatch method here.
...  }
}] => [/**
   * Initialization from constructor 'Child()'.
...    this.$init__com_google_j2cl_transpiler_readable_packageprivatemethods_package1_Child();
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child.<ctor>"
[UNKNOWN] => [this.$ctor__com_google_j2cl_transpiler_readable_packageprivatemethods_package1_Parent__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_packageprivatemethods_package1_Child();]
[@Override
  public int foo(int a) {
    return a + 1;
  }] => [/**
   * @param {number} a
...    return a + 1;
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child.foo"
[a] => [a] "a"
[return a + 1;] => [return a + 1;]
[@Override
  public int fun(int a, int b) {
    return a + b + 1;
  }] => [/**
   * @param {number} a
...    return a + b + 1;
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child.fun"
[a] => [a] "a"
[b] => [b] "b"
[return a + b + 1;] => [return a + b + 1;]
[@Override
  public int bar(int a, int b, int c) {
    return a + b + c + 2;
  }] => [/**
   * @override
...    return a + b + c + 2;
  }] "com.google.j2cl.transpiler.readable.packageprivatemethods.package1.Child.bar"
[a] => [a] "a"
[b] => [b] "b"
[c] => [c] "c"
[return a + b + c + 2;] => [return a + b + c + 2;]
[UNKNOWN] => [/**
   * Forwarding method for package private method.
   * @override
   * @param {number} arg0
   * @return {number}
   * @public
   */
  m_foo__int_$pp_com_google_j2cl_transpiler_readable_packageprivatemethods_package1(arg0) {
    return this.m_foo__int(arg0);
  }]
[UNKNOWN] => [return this.m_foo__int(arg0);]
[UNKNOWN] => [/**
   * Forwarding method for package private method.
   * @override
   * @param {number} arg0
   * @param {number} arg1
   * @return {number}
   * @public
   */
  m_fun__int__int_$pp_com_google_j2cl_transpiler_readable_packageprivatemethods_package1(arg0, arg1) {
    return this.m_fun__int__int(arg0, arg1);
  }]
[UNKNOWN] => [return this.m_fun__int__int(arg0, arg1);]
[UNKNOWN] => [Parent.$clinit();]
