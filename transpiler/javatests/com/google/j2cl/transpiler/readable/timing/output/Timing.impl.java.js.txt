/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.timing.Timing.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.timing.Timing$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Objects = goog.forwardDeclare('com.google.common.base.Objects$impl');
let Lists = goog.forwardDeclare('com.google.common.collect.Lists$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let ArrayList = goog.forwardDeclare('java.util.ArrayList$impl');
let $Arrays = goog.forwardDeclare('vmbootstrap.Arrays$impl');


class Timing extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'Timing()'.
   * @return {!Timing}
   * @public
   */
  static $create__() {
    Timing.$clinit();
    let $instance = new Timing();
    $instance.$ctor__com_google_j2cl_transpiler_readable_timing_Timing__();
    return $instance;
  }

  /**
   * Initialization from constructor 'Timing()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_timing_Timing__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {boolean}
   * @public
   */
  static m_run__() {
    Timing.$clinit();
    let fooStrings = /**@type {ArrayList<?string>} */ (
        Lists.m_newArrayList__arrayOf_java_lang_Object(
            /**@type {!Array<?string>} */ (
                $Arrays.$init(['foo'], java_lang_String))));
    let barStrings = /**@type {ArrayList<?string>} */ (
        Lists.m_newArrayList__arrayOf_java_lang_Object(
            /**@type {!Array<?string>} */ (
                $Arrays.$init(['bar'], java_lang_String))));
    return Objects.m_equal__java_lang_Object__java_lang_Object(
        fooStrings, barStrings);
  }

  /**
   * @param {?} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof Timing;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, Timing);
  }

  /**
   * @public
   */
  static $clinit() {
    Timing.$clinit = function() {};
    Objects = goog.module.get('com.google.common.base.Objects$impl');
    Lists = goog.module.get('com.google.common.collect.Lists$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Arrays = goog.module.get('vmbootstrap.Arrays$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    Timing,
    $Util.$makeClassName('com.google.j2cl.transpiler.readable.timing.Timing'));



exports = Timing;
//# sourceMappingURL=Timing.js.map