/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.classliteral.ClassLiteral.
 *
 * @suppress {const, extraRequire, missingOverride, missingRequire, suspiciousCode, transitionalSuspiciousCodeWarnings, unusedLocalVariables, uselessCode}
 */
goog.module('com.google.j2cl.transpiler.readable.classliteral.ClassLiteral$impl');


const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');

let Class = goog.forwardDeclare('java.lang.Class$impl');


class ClassLiteral extends java_lang_Object {
  /**
   * @private
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor 'ClassLiteral()'.
   * @return {!ClassLiteral}
   * @public
   */
  static $create__() {
    ClassLiteral.$clinit();
    let $instance = new ClassLiteral();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_classliteral_ClassLiteral__();
    return $instance;
  }

  /**
   * Initialization from constructor 'ClassLiteral()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_classliteral_ClassLiteral__() {
    this.$ctor__java_lang_Object__();
  }

  /**
   * @return {void}
   * @public
   */
  m_main__() {
    let o = Class.$get(ClassLiteral);
    o = Class.$get(ClassLiteral, 2);
  }

  /**
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof ClassLiteral;
  }

  /**
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, ClassLiteral);
  }

  /**
   * @public
   */
  static $clinit() {
    ClassLiteral.$clinit = function() {};
    Class = goog.module.get('java.lang.Class$impl');
    java_lang_Object.$clinit();
  }
};

$Util.$setClassMetadata(
    ClassLiteral,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.classliteral.ClassLiteral'));



exports = ClassLiteral;
//# sourceMappingURL=ClassLiteral.js.map