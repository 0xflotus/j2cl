[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [super();] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<synthetic: constructor>"
[UNKNOWN] => [D.$clinit();]
[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [let $instance = new D();] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<synthetic: create>"
[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [$instance.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_D__();] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<synthetic: create>"
[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [return $instance;] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<synthetic: create>"
[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_A__();] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<init>"
[public static class D extends A<Integer> implements I<Integer> {
    // Two JS bridges: fun__Object, and fun__Number, and should result in only one, and this real
...    }
  }] => [this.$init__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_D();] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.<init>"
[i] => [i] "i"
[return i;] => [return i;] "com.google.j2cl.transpiler.readable.bridgejsmethod.Main$D.fun"
[UNKNOWN] => [return this.m_fun__java_lang_Integer(/**@type {Integer} */ ($Casts.$to(arg0, Integer)));]
[UNKNOWN] => [A.$clinit();]
