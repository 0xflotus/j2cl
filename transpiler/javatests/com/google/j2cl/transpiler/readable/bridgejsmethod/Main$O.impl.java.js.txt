/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.bridgejsmethod.Main$O.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.O$impl');


let N = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.N$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let Main = goog.forwardDeclare('com.google.j2cl.transpiler.readable.bridgejsmethod.Main$impl');
let B = goog.forwardDeclare('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.B$impl');


class O extends N {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
    /** @public {Main} */
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O =
        null;
    /** @public {B} */
    this.f_b__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O_ = null;
  }

  /**
   * A particular Java constructor as a factory method.
   * @param {Main} $outer_this
   * @return {!O}
   * @public
   */
  static $create__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      $outer_this) {
    O.$clinit();
    let $instance = new O();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
            $outer_this);
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @param {Main} $outer_this
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
      $outer_this) {
    this.f_$outer_this__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O =
        $outer_this;
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_N__com_google_j2cl_transpiler_readable_bridgejsmethod_Main(
        $outer_this);
    this.$init__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O();
  }

  /**
   * @override
   * @return {B}
   * @public
   */
  getB() {
    return this.f_b__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O_;
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof O;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, O);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    O.$clinit = function() {};
    Main = goog.module.get(
        'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$impl');
    B = goog.module.get(
        'com.google.j2cl.transpiler.readable.bridgejsmethod.Main.B$impl');
    N.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_bridgejsmethod_Main_O() {}
};

$Util.$setClassMetadata(
    O,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$O'));



/**
 * Export class.
 */
exports = O;
//# sourceMappingURL=Main$O.js.map