/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.bridgejsmethod.Main$E.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.E$impl');


let B = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.B$impl');
let J = goog.require('com.google.j2cl.transpiler.readable.bridgejsmethod.Main.J$impl');
let $Util = goog.require('nativebootstrap.Util$impl');

let java_lang_Object = goog.forwardDeclare('java.lang.Object$impl');
let java_lang_String = goog.forwardDeclare('java.lang.String$impl');
let $Casts = goog.forwardDeclare('vmbootstrap.Casts$impl');


/**
 * @implements {J<?string>}
 */
class E extends B {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!E}
   * @public
   */
  static $create__() {
    E.$clinit();
    let $instance = new E();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main$E__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main$E__() {
    this.$ctor__com_google_j2cl_transpiler_readable_bridgejsmethod_Main$B__();
    this.$init__com_google_j2cl_transpiler_readable_bridgejsmethod_Main$E();
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {void}
   * @public
   */
  m_bar__java_lang_Object(arg0) {
    super.bar(/**@type {?string} */ ($Casts.to(arg0, java_lang_String)));
  }

  /**
   * Bridge method.
   * @override
   * @param {*} arg0
   * @return {?string}
   * @public
   */
  fun(arg0) {
    return super.fun(/**@type {?string} */ ($Casts.to(arg0, java_lang_String)));
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof E;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, E);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    java_lang_Object = goog.module.get('java.lang.Object$impl');
    java_lang_String = goog.module.get('java.lang.String$impl');
    $Casts = goog.module.get('vmbootstrap.Casts$impl');
    B.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_bridgejsmethod_Main$E() {}
};

$Util.$setClassMetadata(
    E, $Util.$makeClassName(
           'com.google.j2cl.transpiler.readable.bridgejsmethod.Main$E'));


J.$markImplementor(E);


/**
 * Export class.
 */
exports = E;
//# sourceMappingURL=Main$E.js.map