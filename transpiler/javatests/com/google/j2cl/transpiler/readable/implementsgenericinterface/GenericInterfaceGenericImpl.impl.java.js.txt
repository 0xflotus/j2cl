/**
 * @fileoverview transpiled from
 * com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceGenericImpl.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode, const, missingRequire, missingOverride}
 */
goog.module('com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceGenericImpl$impl');


const GenericInterface = goog.require('com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterface$impl');
const java_lang_Object = goog.require('java.lang.Object$impl');
const $Util = goog.require('nativebootstrap.Util$impl');


/**
 * @template C_T
 * @implements {GenericInterface<C_T>}
 */
class GenericInterfaceGenericImpl extends java_lang_Object {
  /**
   * Private implementation constructor.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * Factory method corresponding to constructor
   * 'GenericInterfaceGenericImpl()'.
   * @template C_T
   * @return {!GenericInterfaceGenericImpl<C_T>}
   * @public
   */
  static $create__() {
    GenericInterfaceGenericImpl.$clinit();
    let $instance = new GenericInterfaceGenericImpl();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl__();
    return $instance;
  }

  /**
   * Initialization from constructor 'GenericInterfaceGenericImpl()'.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof GenericInterfaceGenericImpl;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, GenericInterfaceGenericImpl);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    GenericInterfaceGenericImpl.$clinit = function() {};
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl() {
  }
};

$Util.$setClassMetadata(
    GenericInterfaceGenericImpl,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceGenericImpl'));


GenericInterface.$markImplementor(GenericInterfaceGenericImpl);


/**
 * Export class.
 */
exports = GenericInterfaceGenericImpl;
//# sourceMappingURL=GenericInterfaceGenericImpl.js.map