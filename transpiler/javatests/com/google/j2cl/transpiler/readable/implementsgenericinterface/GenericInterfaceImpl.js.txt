/**
 * Transpiled from
 * third_party/java_src/j2cl/transpiler/javatests/com/google/j2cl/transpiler/readable/implementsgenericinterface/GenericInterfaceImpl.java.
 */
goog.module('gen.com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceImplModule');


let Class = goog.require('gen.java.lang.CoreModule').Class;
let Object = goog.require('gen.java.lang.CoreModule').Object;
let Number = goog.require('gen.java.lang.NumberModule').Number;
let $Util = goog.require('nativebootstrap.UtilModule').Util;


/**
 * @interface
 * @template C_T
 */
class GenericInterface {
  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterface;
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!GenericInterface.$classGenericInterface) {
      GenericInterface.$classGenericInterface = Class.$createForInterface(
          $Util.$generateId('GenericInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterface'),
          null,
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterface'));
    }
    return GenericInterface.$classGenericInterface;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {}
}
;


GenericInterface.$markImplementor(/** @type {Function} */ (GenericInterface));

/**
 * Export class.
 */
exports.GenericInterface = GenericInterface;



/**
 * @interface
 * @template C_T
 * @extends {GenericInterface<C_T>}
 */
class GenericSubInterface {
  /**
   * Marks the provided class as implementing this interface.
   * @param {Function} classConstructor
   * @public
   */
  static $markImplementor(classConstructor) {
    GenericInterface.$markImplementor(classConstructor);
    /**
     * @public {boolean}
     */
    classConstructor.prototype
        .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface =
        true;
  }

  /**
   * Returns whether the provided instance is of a class that implements this
   * interface.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance != null &&
           instance
               .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return classConstructor != null &&
           classConstructor.prototype
               .$implements__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericSubInterface;
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!GenericSubInterface.$classGenericSubInterface) {
      GenericSubInterface.$classGenericSubInterface = Class.$createForInterface(
          $Util.$generateId('GenericSubInterface'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericSubInterface'),
          null,
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericSubInterface'));
    }
    return GenericSubInterface.$classGenericSubInterface;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() {}
}
;


GenericSubInterface.$markImplementor(
    /** @type {Function} */ (GenericSubInterface));

/**
 * Export class.
 */
exports.GenericSubInterface = GenericSubInterface;



/**
 * @template C_T
 * @implements {GenericInterface<C_T>}
 */
class GenericInterfaceGenericImpl extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @template C_T
   * @return {!GenericInterfaceGenericImpl<C_T>}
   * @package
   * @nocollapse
   */
  static $create() {
    GenericInterfaceGenericImpl.$clinit();
    let instance = new GenericInterfaceGenericImpl;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @package
   */
  $ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceGenericImpl();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof GenericInterfaceGenericImpl;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, GenericInterfaceGenericImpl);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!GenericInterfaceGenericImpl.$classGenericInterfaceGenericImpl) {
      GenericInterfaceGenericImpl
          .$classGenericInterfaceGenericImpl = Class.$createForClass(
          $Util.$generateId('GenericInterfaceGenericImpl'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceGenericImpl'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceGenericImpl'));
    }
    return GenericInterfaceGenericImpl.$classGenericInterfaceGenericImpl;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


GenericInterface.$markImplementor(GenericInterfaceGenericImpl);



/**
 * Export class.
 */
exports.GenericInterfaceGenericImpl = GenericInterfaceGenericImpl;



/**
 * @implements {GenericInterface<Number | ?number>}
 */
class GenericInterfaceImpl extends Object {
  /**
   * Defines instance fields.
   * @private
   */
  constructor() { super(); }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceImpl() {
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!GenericInterfaceImpl}
   * @public
   * @nocollapse
   */
  static $create() {
    GenericInterfaceImpl.$clinit();
    let instance = new GenericInterfaceImpl;
    instance
        .$ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceImpl();
    return instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @protected
   */
  $ctor__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceImpl() {
    this.$ctor__java_lang_Object();
    this.$init__com_google_j2cl_transpiler_readable_implementsgenericinterface_GenericInterfaceImpl();
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isInstance(instance) {
    return instance instanceof GenericInterfaceImpl;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   * @nocollapse
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, GenericInterfaceImpl);
  }

  /**
   * @return {Class}
   * @public
   * @nocollapse
   */
  static $getClass() {
    if (!GenericInterfaceImpl.$classGenericInterfaceImpl) {
      GenericInterfaceImpl.$classGenericInterfaceImpl = Class.$createForClass(
          $Util.$generateId('GenericInterfaceImpl'),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceImpl'),
          Object.$getClass(),
          $Util.$generateId(
              'com.google.j2cl.transpiler.readable.implementsgenericinterface.GenericInterfaceImpl'));
    }
    return GenericInterfaceImpl.$classGenericInterfaceImpl;
  }

  /**
   * Runs inline static field initializers.
   * @protected
   * @nocollapse
   */
  static $clinit() { Object.$clinit(); }
}
;


GenericInterface.$markImplementor(GenericInterfaceImpl);



/**
 * Export class.
 */
exports.GenericInterfaceImpl = GenericInterfaceImpl;
