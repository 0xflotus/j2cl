/**
 * @fileoverview Impl transpiled from
 * com.google.j2cl.transpiler.readable.ifstatement.IfStatement.
 *
 * @suppress {suspiciousCode, transitionalSuspiciousCodeWarnings, uselessCode,
 * const, missingRequire}
 */
goog.module('com.google.j2cl.transpiler.readable.ifstatement.IfStatement$impl');


let java_lang_Object = goog.require('java.lang.Object$impl');
let $Util = goog.require('nativebootstrap.Util$impl');


class IfStatement extends java_lang_Object {
  /**
   * Defines instance fields.
   * @public
   */
  constructor() {
    super();
  }

  /**
   * A particular Java constructor as a factory method.
   * @return {!IfStatement}
   * @public
   */
  static $create__() {
    IfStatement.$clinit();
    let $instance = new IfStatement();
    $instance
        .$ctor__com_google_j2cl_transpiler_readable_ifstatement_IfStatement__();
    return $instance;
  }

  /**
   * Initializes instance fields for a particular Java constructor.
   * @return {void}
   * @public
   */
  $ctor__com_google_j2cl_transpiler_readable_ifstatement_IfStatement__() {
    this.$ctor__java_lang_Object__();
    this.$init__com_google_j2cl_transpiler_readable_ifstatement_IfStatement();
  }

  /**
   * @return {void}
   * @public
   */
  m_test__() {
    let a = true;
    let b = true;
    let l_number = 1;
    if (a) {
      l_number = 2;
    } else if (b) {
      l_number = 3;
    } else {
      l_number = 4;
    }
    if (a) {
      l_number = 5;
    } else {
      l_number = 6;
    }
  }

  /**
   * Returns whether the provided instance is an instance of this class.
   * @param {*} instance
   * @return {boolean}
   * @public
   */
  static $isInstance(instance) {
    return instance instanceof IfStatement;
  }

  /**
   * Returns whether the provided class is or extends this class.
   * @param {Function} classConstructor
   * @return {boolean}
   * @public
   */
  static $isAssignableFrom(classConstructor) {
    return $Util.$canCastClass(classConstructor, IfStatement);
  }

  /**
   * Runs inline static field initializers.
   * @public
   */
  static $clinit() {
    java_lang_Object.$clinit();
  }

  /**
   * Runs instance field and block initializers.
   * @private
   */
  $init__com_google_j2cl_transpiler_readable_ifstatement_IfStatement() {}
};

$Util.$setClassMetadata(
    IfStatement,
    $Util.$makeClassName(
        'com.google.j2cl.transpiler.readable.ifstatement.IfStatement'));



/**
 * Export class.
 */
exports = IfStatement;
//# sourceMappingURL=IfStatement.js.map