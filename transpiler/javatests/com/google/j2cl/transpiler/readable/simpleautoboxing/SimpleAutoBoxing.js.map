[UNKNOWN] => [super();]
[UNKNOWN] => [SimpleAutoBoxing.$clinit();]
[UNKNOWN] => [let $instance = new SimpleAutoBoxing();]
[UNKNOWN] => [$instance.$ctor__com_google_j2cl_transpiler_readable_simpleautoboxing_SimpleAutoBoxing__();]
[UNKNOWN] => [return $instance;]
[UNKNOWN] => [this.$ctor__java_lang_Object__();]
[UNKNOWN] => [this.$init__com_google_j2cl_transpiler_readable_simpleautoboxing_SimpleAutoBoxing();]
[return b;] => [return b;]
[return d;] => [return d;]
[return b;] => [return Byte.m_valueOf__byte(b);]
[return f;] => [return Float.m_valueOf__float(f);]
[return i;] => [return Integer.m_valueOf__int(i);]
[return l;] => [return Long.m_valueOf__long(l);]
[return s;] => [return Short.m_valueOf__short(s);]
[return c;] => [return Character.m_valueOf__char(c);]
[return b;] => [return Boolean.m_booleanValue__java_lang_Boolean(b);]
[return d;] => [return Double.m_doubleValue__java_lang_Double(d);]
[return b;] => [return b.m_byteValue__();]
[return f;] => [return f.m_floatValue__();]
[return i;] => [return i.m_intValue__();]
[return l;] => [return l.m_longValue__();]
[return s;] => [return s.m_shortValue__();]
[return c;] => [return c.m_charValue__();]
[return d;] => [return d;]
[Boolean b = null;] => [let b = null;]
[Double d = null;] => [let d = null;]
[Integer i = null;] => [let i = null;]
[Long l = null;] => [let l = null;]
[boolean bool = true;] => [let bool = true;]
[double d = 1111.0;] => [let d = 1111.0;]
[byte b = (byte) 100;] => [let b = 100;]
[float f = 1111.0f;] => [let f = 1111.0;]
[int i = 1111;] => [let i = 1111;]
[long l = 1111L;] => [let l = $LongUtils.$fromInt(1111);]
[short s = (short) 100;] => [let s = 100;]
[char c = 'a';] => [let c = 97 /* 'a' */;]
[Boolean boxBool = bool;] => [let boxBool = bool;]
[Double boxD = d;] => [let boxD = d;]
[Byte boxB = b;] => [let boxB = Byte.m_valueOf__byte(b);]
[Float boxF = f;] => [let boxF = Float.m_valueOf__float(f);]
[Integer boxI = i;] => [let boxI = Integer.m_valueOf__int(i);]
[Long boxL = l;] => [let boxL = Long.m_valueOf__long(l);]
[Short boxS = s;] => [let boxS = Short.m_valueOf__short(s);]
[Character boxC = c;] => [let boxC = Character.m_valueOf__char(c);]
[Object o = 0;] => [let o = Integer.m_valueOf__int(0);]
[boxBool = true;] => [boxBool = true;]
[boxD = 100.0;] => [boxD = 100.0;]
[boxB = 0;] => [boxB = Byte.m_valueOf__byte(0);]
[boxF = 100.0f;] => [boxF = Float.m_valueOf__float(100.0);]
[boxI = 1000;] => [boxI = Integer.m_valueOf__int(1000);]
[boxL = 1000L;] => [boxL = Long.m_valueOf__long($LongUtils.$fromInt(1000));]
[boxS = 0;] => [boxS = Short.m_valueOf__short(0);]
[boxC = 0;] => [boxC = Character.m_valueOf__char(0 /* "\u0000" */);]
[boxC = 'a';] => [boxC = Character.m_valueOf__char(97 /* "a" */);]
[bool = unbox(bool);] => [bool = this.m_unbox__java_lang_Boolean(bool);]
[d = unbox(d);] => [d = this.m_unbox__java_lang_Double(d);]
[b = unbox(b);] => [b = this.m_unbox__java_lang_Byte(Byte.m_valueOf__byte(b));]
[f = unbox(f);] => [f = this.m_unbox__java_lang_Float(Float.m_valueOf__float(f));]
[i = unbox(i);] => [i = this.m_unbox__java_lang_Integer(Integer.m_valueOf__int(i));]
[l = unbox(l);] => [l = this.m_unbox__java_lang_Long(Long.m_valueOf__long(l));]
[s = unbox(s);] => [s = this.m_unbox__java_lang_Short(Short.m_valueOf__short(s));]
[c = unbox(c);] => [c = this.m_unbox__java_lang_Character(Character.m_valueOf__char(c));]
[boxBool = boxBool && boxBool;] => [boxBool = Boolean.m_booleanValue__java_lang_Boolean(boxBool) && Boolean.m_booleanValue__java_lang_Boolean(boxBool);]
[boxD = boxD + boxD;] => [boxD = Double.m_doubleValue__java_lang_Double(boxD) + Double.m_doubleValue__java_lang_Double(boxD);]
[boxF = boxF - boxF;] => [boxF = Float.m_valueOf__float(boxF.m_floatValue__() - boxF.m_floatValue__());]
[boxI = boxI * boxI;] => [boxI = Integer.m_valueOf__int(boxI.m_intValue__() * boxI.m_intValue__());]
[boxL = boxL / boxL;] => [boxL = Long.m_valueOf__long($LongUtils.$divide(boxL.m_longValue__(), boxL.m_longValue__()));]
[boxBool = !boxBool;] => [boxBool = !boxBool;]
[boxI = +boxI;] => [boxI = Integer.m_valueOf__int(boxI.m_intValue__());]
[boxI = -boxI;] => [boxI = Integer.m_valueOf__int(-boxI.m_intValue__());]
[boxI = ~boxI;] => [boxI = Integer.m_valueOf__int(~boxI.m_intValue__());]
[Boolean boxBool = new Boolean(true);] => [let boxBool = Boolean.$create__boolean(true);]
[Double boxD = new Double(1111.0);] => [let boxD = Double.$create__double(1111.0);]
[Byte boxB = new Byte((byte) 100);] => [let boxB = Byte.$create__byte(100);]
[Float boxF = new Float(1111.0f);] => [let boxF = Float.$create__float(1111.0);]
[Integer boxI = new Integer(1111);] => [let boxI = Integer.$create__int(1111);]
[Long boxL = new Long(1111L);] => [let boxL = Long.$create__long($LongUtils.$fromInt(1111));]
[Short boxS = new Short((short) 100);] => [let boxS = Short.$create__short(100);]
[Character boxC = new Character('a');] => [let boxC = Character.$create__char(97 /* 'a' */);]
[boolean bool = boxBool;] => [let bool = Boolean.m_booleanValue__java_lang_Boolean(boxBool);]
[double d = boxD;] => [let d = Double.m_doubleValue__java_lang_Double(boxD);]
[byte b = boxB;] => [let b = boxB.m_byteValue__();]
[float f = boxF;] => [let f = boxF.m_floatValue__();]
[int i = boxI;] => [let i = boxI.m_intValue__();]
[long l = boxL;] => [let l = boxL.m_longValue__();]
[short s = boxS;] => [let s = boxS.m_shortValue__();]
[char c = boxC;] => [let c = boxC.m_charValue__();]
[boxBool = box(boxBool);] => [boxBool = this.m_box__boolean(Boolean.m_booleanValue__java_lang_Boolean(boxBool));]
[boxD = box(boxD);] => [boxD = this.m_box__double(Double.m_doubleValue__java_lang_Double(boxD));]
[boxB = box(boxB);] => [boxB = this.m_box__byte(boxB.m_byteValue__());]
[boxF = box(boxF);] => [boxF = this.m_box__float(boxF.m_floatValue__());]
[boxI = box(boxI);] => [boxI = this.m_box__int(boxI.m_intValue__());]
[boxL = box(boxL);] => [boxL = this.m_box__long(boxL.m_longValue__());]
[boxS = box(boxS);] => [boxS = this.m_box__short(boxS.m_shortValue__());]
[boxC = box(boxC);] => [boxC = this.m_box__char(boxC.m_charValue__());]
[d = boxB;] => [d = boxB.m_byteValue__();]
[d = boxF;] => [d = boxF.m_floatValue__();]
[d = boxI;] => [d = boxI.m_intValue__();]
[d = boxL;] => [d = $Primitives.$widenLongToDouble(boxL.m_longValue__());]
[d = boxS;] => [d = boxS.m_shortValue__();]
[d = boxC;] => [d = boxC.m_charValue__();]
[takesAndReturnsPrimitiveDouble(boxB);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxB.m_byteValue__());]
[takesAndReturnsPrimitiveDouble(boxF);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxF.m_floatValue__());]
[takesAndReturnsPrimitiveDouble(boxI);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxI.m_intValue__());]
[takesAndReturnsPrimitiveDouble(boxL);] => [this.m_takesAndReturnsPrimitiveDouble__double($Primitives.$widenLongToDouble(boxL.m_longValue__()));]
[takesAndReturnsPrimitiveDouble(boxS);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxS.m_shortValue__());]
[takesAndReturnsPrimitiveDouble(boxC);] => [this.m_takesAndReturnsPrimitiveDouble__double(boxC.m_charValue__());]
[bool = boxBool && boxBool;] => [bool = Boolean.m_booleanValue__java_lang_Boolean(boxBool) && Boolean.m_booleanValue__java_lang_Boolean(boxBool);]
[d = boxD + boxD;] => [d = Double.m_doubleValue__java_lang_Double(boxD) + Double.m_doubleValue__java_lang_Double(boxD);]
[f = boxF - boxF;] => [f = boxF.m_floatValue__() - boxF.m_floatValue__();]
[i = boxI * boxI;] => [i = boxI.m_intValue__() * boxI.m_intValue__();]
[l = boxL / boxL;] => [l = $LongUtils.$divide(boxL.m_longValue__(), boxL.m_longValue__());]
[bool = !boxBool;] => [bool = !boxBool;]
[i = +boxI;] => [i = boxI.m_intValue__();]
[i = -boxI;] => [i = -boxI.m_intValue__();]
[i = ~boxI;] => [i = ~boxI.m_intValue__();]
[Boolean boxB1 = new Boolean(true);] => [let boxB1 = Boolean.$create__boolean(true);]
[Boolean boxB2 = new Boolean(false);] => [let boxB2 = Boolean.$create__boolean(false);]
[boolean br;] => [let br;]
[boolean boxr;] => [let boxr;]
[boxr = boxB1 == boxB2;] => [boxr = $Equality.$same(boxB1, boxB2);]
[br = boxB1 == boxB2;] => [br = $Equality.$same(boxB1, boxB2);]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 != boxB2;] => [boxr = !$Equality.$same(boxB1, boxB2);]
[br = boxB1 != boxB2;] => [br = !$Equality.$same(boxB1, boxB2);]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 ^ boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[br = boxB1 ^ boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 & boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[br = boxB1 & boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 | boxB2;] => [boxr = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[br = boxB1 | boxB2;] => [br = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 && boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean(boxB1) && Boolean.m_booleanValue__java_lang_Boolean(boxB2);]
[br = boxB1 && boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean(boxB1) && Boolean.m_booleanValue__java_lang_Boolean(boxB2);]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 || boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean(boxB1) || Boolean.m_booleanValue__java_lang_Boolean(boxB2);]
[br = boxB1 || boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean(boxB1) || Boolean.m_booleanValue__java_lang_Boolean(boxB2);]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 = boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = boxB2));]
[br = boxB1 = boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = boxB2));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 &= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[br = boxB1 &= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) & Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 |= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[br = boxB1 |= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) | Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[boxr = boxB1 ^= boxB2;] => [boxr = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[br = boxB1 ^= boxB2;] => [br = Boolean.m_booleanValue__java_lang_Boolean((boxB1 = !!(Boolean.m_booleanValue__java_lang_Boolean(boxB1) ^ Boolean.m_booleanValue__java_lang_Boolean(boxB2))));]
[assert boxr;] => [$Asserts.$enabled() && $Asserts.$assert(boxr);]
[assert br;] => [$Asserts.$enabled() && $Asserts.$assert(br);]
[Boolean boxB = new Boolean(true);] => [let boxB = Boolean.$create__boolean(true);]
[boolean b = false;] => [let b = false;]
[assert boxB == boxB;] => [$Asserts.$enabled() && $Asserts.$assert($Equality.$same(boxB, boxB));]
[assert boxB == b;] => [$Asserts.$enabled() && $Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean(boxB) == b);]
[assert b != b;] => [$Asserts.$enabled() && $Asserts.$assert(b != b);]
[assert b != boxB;] => [$Asserts.$enabled() && $Asserts.$assert(b != Boolean.m_booleanValue__java_lang_Boolean(boxB));]
[Integer boxI = new Integer(100);] => [let boxI = Integer.$create__int(100);]
[int i = 101;] => [let i = 101;]
[assert boxI == boxI;] => [$Asserts.$enabled() && $Asserts.$assert($Equality.$same(boxI, boxI));]
[assert boxI == i;] => [$Asserts.$enabled() && $Asserts.$assert(boxI.m_intValue__() == i);]
[assert i != i;] => [$Asserts.$enabled() && $Asserts.$assert(i != i);]
[assert i != boxI;] => [$Asserts.$enabled() && $Asserts.$assert(i != boxI.m_intValue__());]
[Boolean boxB = new Boolean(true);] => [let boxB = Boolean.$create__boolean(true);]
[boolean b = true;] => [let b = true;]
[assert boxB;] => [$Asserts.$enabled() && $Asserts.$assert(Boolean.m_booleanValue__java_lang_Boolean(boxB));]
[assert b;] => [$Asserts.$enabled() && $Asserts.$assert(b);]
