[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [super();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<synthetic: ctor_js>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [$2Local.$clinit();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<synthetic: ctor_create>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [let $instance = new $2Local();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<synthetic: ctor_create>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [$instance.$ctor__com_google_j2cl_transpiler_readable_simpleautoboxing_SimpleAutoBoxing_2Local__();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<synthetic: ctor_create>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [return $instance;] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<synthetic: ctor_create>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [this.$ctor__java_lang_Object__();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<init>"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [this.$init__com_google_j2cl_transpiler_readable_simpleautoboxing_SimpleAutoBoxing_2Local();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<init>"
[l] => [l] "l"
[assert l.equals(11L);] => [$Asserts.$assert(l.equals(Long.m_valueOf__long($Long.fromBits(11, 0) /* 11 */)));] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.toLong"
[return l;] => [return l;] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.toLong"
[class Local<T extends Long & Comparable<Long>> {
      long toLong(T l) {
...      }
    }] => [java_lang_Object.$clinit();] "com.google.j2cl.transpiler.readable.simpleautoboxing.SimpleAutoBoxing$2Local.<clinit>"
